Description,Target,Expression
,_origin_local_dist,"reindex(land_use.walk_dist_local_bus, df.origin)"
,_origin_prm_dist,"reindex(land_use.walk_dist_premium_transit, df.origin)"
,_origin_mix_dist,"np.minimum(_origin_local_dist, _origin_prm_dist)"
,_dest_local_dist,"reindex(land_use.walk_dist_local_bus, df.destination)"
,_dest_prm_dist,"reindex(land_use.walk_dist_premium_transit, df.destination)"
,_dest_mix_dist,"np.minimum(_dest_local_dist, _dest_prm_dist)"
#
,cost_parking,"np.where(df.trip_mode.isin(['DRIVEALONE','SHARED2','SHARED3']),df.parkingCost,0)"
#,,
,_cost_fare_drive,0
,_cost_fare_drive,"_cost_fare_drive + np.where(df.trip_mode == 'TAXI',1,0) * ((Taxi_baseFare + df.s2_dist_skims * Taxi_costPerMile + df.s2_time_skims * Taxi_costPerMinute) * 100 + df.s2_cost_skims)"
,_cost_fare_drive,"_cost_fare_drive + np.where(df.trip_mode=='TNC_SINGLE',1,0)*((TNC_single_baseFare + df.s2_dist_skims * TNC_single_costPerMile + df.s2_time_skims * TNC_single_costPerMinute) * 100 + df.s2_cost_skims)"
,_cost_fare_drive,"_cost_fare_drive + np.where(df.trip_mode=='TNC_SHARED',1,0)*((TNC_shared_baseFare + df.s2_dist_skims * TNC_shared_costPerMile + df.s2_time_skims * TNC_shared_costPerMinute) * 100 + df.s2_cost_skims)"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_LOC','TNC_PRM','TNC_MIX'])*df.outbound*(TNC_single_baseFare + odt_skims['TNCOUT_LOC_ACC']*25/60 * TNC_single_costPerMile + odt_skims['TNCOUT_LOC_ACC'] * TNC_single_costPerMinute) * 100"
,cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_LOC','TNC_PRM','TNC_MIX'])*~df.outbound*(TNC_single_baseFare + odt_skims['TNCIN_LOC_ACC']*25/60 * TNC_single_costPerMile + odt_skims['TNCIN_LOC_ACC'] * TNC_single_costPerMinute) * 100"
#,,
,_distance_walk,0
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK') * od_skims['walkTime']/walkSpeed*60"
,_distance_walk,"(_origin_local_dist+_dest_local_dist) * np.where(df.trip_mode == 'WALK_LOC',1,0)"
,_distance_walk,"(_origin_prm_dist+_dest_prm_dist) * np.where(df.trip_mode == 'WALK_PRM',1,0)"
,_distance_walk,"(_origin_mix_dist+_dest_mix_dist) * np.where(df.trip_mode == 'WALK_MIX',1,0)"
,_distance_walk,"_distance_walk + _dest_local_dist * np.where(df.trip_mode == 'PNR_LOC',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_prm_dist * np.where(df.trip_mode == 'PNR_PRM',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_mix_dist * np.where(df.trip_mode == 'PNR_MIX',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_local_dist * np.where(df.trip_mode == 'KNR_LOC',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_prm_dist * np.where(df.trip_mode == 'KNR_PRM',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_mix_dist * np.where(df.trip_mode == 'KNR_MIX',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_local_dist * np.where(df.trip_mode == 'TNC_LOC',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_prm_dist * np.where(df.trip_mode == 'TNC_PRM',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_mix_dist * np.where(df.trip_mode == 'TNC_MIX',1,0) * np.where(df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_local_dist * np.where(df.trip_mode == 'PNR_LOC',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_prm_dist * np.where(df.trip_mode == 'PNR_PRM',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_mix_dist * np.where(df.trip_mode == 'PNR_MIX',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _dest_local_dist * np.where(df.trip_mode == 'KNR_LOC',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_prm_dist * np.where(df.trip_mode == 'KNR_PRM',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_mix_dist * np.where(df.trip_mode == 'KNR_MIX',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_local_dist * np.where(df.trip_mode == 'TNC_LOC',1,0) * np.where(~df.outbound,1,0)"
,_distance_walk,"_distance_walk + _origin_prm_dist * np.where(df.trip_mode == 'TNC_PRM',1,0) * np.where(~df.outbound,1,0)"
,distance_walk,"_distance_walk + _origin_mix_dist * np.where(df.trip_mode == 'TNC_MIX',1,0) * np.where(~df.outbound,1,0)"
#,,
,_time_mm,0
,_time_mm,"_time_mm + df.trip_mode.isin(['EBIKE'])* od_skims['BIKE_TIME'] * bikeSpeed / ebikeSpeed"
,time_mm,"_time_mm + df.trip_mode.isin(['ESCOOTER'])*od_skims['BIKE_TIME'] * bikeSpeed / escooterSpeed"
,_distance_mm,0
,_distance_mm,"_distance_mm + df.trip_mode.isin(['EBIKE'])*od_skims['BIKE_TIME'] * (bikeSpeed/ebikeSpeed)/60 * ebikeSpeed"
,distance_mm,"_distance_mm + df.trip_mode.isin(['ESCOOTER'])*od_skims['BIKE_TIME'] * (bikeSpeed/escooterSpeed)/60 * escooterSpeed"
,_cost_fare_mm,0
,_cost_fare_mm,"_cost_fare_mm + df.trip_mode.isin(['EBIKE'])*(microFixedCost + microVarCost*time_mm)"
,cost_fare_mm,"_cost_fare_mm + df.trip_mode.isin(['ESCOOTER'])*(microFixedCost + microVarCost*time_mm)"
,_distance_bike,0
,distance_bike,"_distance_bike + df.trip_mode.isin(['BIKE'])*od_skims['BIKE_TIME']/60 * bikeSpeed"
#,,
,time_wait_drive,df.totalWaitSingleTNC+df.totalWaitSharedTNC
