Label,Description,Expression,DRIVEALONE,SHARED2,SHARED3,WALK,BIKE,WALK_LOC,WALK_PRM,WALK_MIX,PNR_LOC,PNR_PRM,PNR_MIX,KNR_LOC,KNR_PRM,KNR_MIX,TNC_LOC,TNC_PRM,TNC_MIX,TAXI,TNC_SINGLE,TNC_SHARED,SCH_BUS,EBIKE,ESCOOTER
#,drivealone,,,,,,,,,,,,,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,DRIVEALONE - Unavailable,sov_available == False,-999,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - In-vehicle time,Drive alone - In-vehicle time,@(df.da_time_skims_inb + df.da_time_skims_out) * df.autoIVTFactor_DA * df.time_factor,coef_ivt,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - reliability - inb,Drive alone - reliability - inbound,"@(df.da_rel_skims_inb/np.minimum(df.da_dist_skims_inb,0.1)) * df.time_factor",coef_rel_inb,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - reliability - out,Drive alone - reliability - outbound,"@(df.da_rel_skims_out/np.minimum(df.da_dist_skims_out,0.1)) * df.time_factor",coef_rel_out,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - cost - inb,Drive alone - cost - inbound,@(df.sov_auto_op_cost * df.autoCPMFactor_DA * df.da_dist_skims_inb + df.da_cost_skims_inb)/df.cost_sensitivity,coef_income,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - cost - out,Drive alone - cost - outbound,@(df.sov_auto_op_cost * df.autoCPMFactor_DA * df.da_dist_skims_out + df.da_cost_skims_out)/df.cost_sensitivity,coef_income,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - Parking cost ,Drive alone - Parking cost ,@(df.parkingCost*df.autoParkingCostFactor_DA)/df.cost_sensitivity,coef_income,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - Terminal Time - acc,Drive alone - Terminal Time ,@(df.oTermTime + df.dTermTime) * df.autoTermTimeFactor_DA * df.time_factor,coef_acctime,,,,,,,,,,,,,,,,,,,,,,
#,Shared ride2,,,,,,,,,,,,,,,,,,,,,,,,
util_Shared2_Unavailable,Shared ride 2 - Unavailable,sr2_available == False,,-999,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - In -vehicle time,Shared ride 2 - In -vehicle time,@(df.s2_time_skims_inb + df.s2_time_skims_out) * df.autoIVTFactor_SR2 * df.time_factor,,coef_ivt,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - reliability - inb,Shared ride 2 - reliability - inbound,"@(df.s2_rel_skims_inb/np.minimum(df.s2_dist_skims_inb,0.1)) * df.time_factor",,coef_rel_inb,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - reliability - out,Shared ride 2 - reliability - outband,"@(df.s2_rel_skims_out/np.minimum(df.s2_dist_skims_out,0.1))* df.time_factor",,coef_rel_out,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 -  cost - inb,Shared ride 2 -  cost - inbound,@(df.sr2_auto_op_cost * df.autoCPMFactor_SR2 * df.s2_dist_skims_inb + df.s2_cost_skims_inb)/df.cost_sensitivity,,coef_income,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 -  cost - out,Shared ride 2 -  cost - outbound,@(df.sr2_auto_op_cost * df.autoCPMFactor_SR2* df.s2_dist_skims_out + df.s2_cost_skims_out)/df.cost_sensitivity,,coef_income,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - Parking cost ,Shared ride 2 - Parking cost ,"@(df.parkingCost * df.autoParkingCostFactor_SR2 * np.where(df.is_joint,1,df.costFactorS2))/df.cost_sensitivity",,coef_income,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - Terminal Time - acc,Shared ride 2 - Terminal Time - access,@(df.oTermTime + df.dTermTime) * df.autoTermTimeFactor_SR2 * df.time_factor,,coef_acctime,,,,,,,,,,,,,,,,,,,,,
util_SHARED2_Two_person_household,Shared ride 2- One person household,@(df.hhsize == 2),,coef_hhsize2_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Three_person_household,Shared ride 2 - Two person household,@(df.hhsize == 3),,coef_hhsize3_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Three+_person_household,Shared ride 2 - Two person household,@(df.hhsize > 3),,coef_hhsize4p_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Person_is_16_24_years_old_or_older,Shared ride 2- Person is 16 to 24 years old or older,@(df.age >= 16) & (df.age  <= 24),,coef_age1624_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Person_is_41_55_years_old_or_older,Shared ride 2- Person is 41 to 55 years old or older,@(df.age >= 41) & (df.age  <= 55),,coef_age4155_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Person_is_56_64_years_old_or_older,Shared ride 2- Person is 56 to 64 years old or older,@(df.age >= 56) & (df.age  <= 64),,coef_age5664_sr2,,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDE 2_Person_is_65+_years_old_or_older,Shared ride 2- Person is more than 65 years old or older,@(df.age >= 65),,coef_age65pl_sr2,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - Female,Shared ride 2 - female,@(df.female == 1),,coef_female_sr2,,,,,,,,,,,,,,,,,,,,,
#,shared ride 3,,,,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - In -vehicle time,Shared ride 3 - In -vehicle time,@(df.s3_time_skims_out + df.s3_time_skims_inb) * df.autoIVTFactor_SR3 * df.time_factor,,,coef_ivt,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - reliability - inb,Shared ride 3 - reliability - inbound,"@(df.s3_rel_skims_inb/np.minimum(df.s3_dist_skims_inb,0.1)) * df.time_factor",,,coef_rel_inb,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - reliability - out,Shared ride 3 - reliability - outbound,"@(df.s3_rel_skims_out/np.minimum(df.s3_dist_skims_out,0.1)) * df.time_factor",,,coef_rel_out,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 -  cost - inb,Shared ride 3 -  cost - inbound,@(df.sr3p_auto_op_cost * df.s3_dist_skims_inb * df.autoCPMFactor_SR3 + df.s3_cost_skims_inb)/df.cost_sensitivity,,,coef_income,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 -  cost - out,Shared ride 3 -  cost - outbound,@(df.sr3p_auto_op_cost * df.s3_dist_skims_out * df.autoCPMFactor_SR3 + df.s3_cost_skims_out)/df.cost_sensitivity,,,coef_income,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Parking cost ,Shared ride 3 - Parking cost ,"@(df.parkingCost * df.autoParkingCostFactor_SR3 * np.where(df.is_joint,1,df.costFactorS3))/df.cost_sensitivity",,,coef_income,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Terminal Time - acc,Shared ride 3 - Terminal Time - acc,@(df.oTermTime + df.dTermTime) * df.autoTermTimeFactor_SR3 * df.time_factor,,,coef_acctime,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Two_person_household,Shared ride 3- One person household,@(df.hhsize == 2),,,coef_hhsize2_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Three_person_household,Shared ride 3 - Two person household,@(df.hhsize == 3),,,coef_hhsize3_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Three+_person_household,Shared ride 3 - Two person household,@(df.hhsize > 3),,,coef_hhsize4p_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Person_is_16_24_years_old_or_older,Shared ride 3 - Person is 16 to 24 years old or older,@(df.age >= 16) & (df.age  <= 24),,,coef_age1624_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Person_is_41_55_years_old_or_older,Shared ride 3 - Person is 41 to 55 years old or older,@(df.age >= 41) & (df.age  <= 55),,,coef_age4155_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Person_is_56_64_years_old_or_older,Shared ride 3 - Person is 56 to 64 years old or older,@(df.age >= 56) & (df.age  <= 64),,,coef_age5664_sr3p,,,,,,,,,,,,,,,,,,,,
util_SHARED RIDe 3_Person_is_65+_years_old_or_older,Shared ride 3 - Person is more than 65 years old or older,@(df.age >= 65),,,coef_age65pl_sr3p,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Female,Shared ride 3 - female,@(df.female == 1),,,coef_female_sr3p,,,,,,,,,,,,,,,,,,,,
#,Walk,,,,,,,,,,,,,,,,,,,,,,,,
util_Walk - Unavailable,Walk - Unavailable,walkAvailable==0,,,,-999,,,,,,,,,,,,,,,,,,,
util_Walk - Age under 16,Walk - Age under 16,@(df.age < 16),,,,coef_ageund16_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Age 16 to 24,Walk - Age 16 to 24,@(df.age > 15) & (df.age < 25) ,,,,coef_age1624_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Age 41 to 55,Walk - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,coef_age4155_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Age 56 to 64,Walk - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,coef_age5664_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Age 65 plus,Walk - Age 65 plus,@(df.age > 64),,,,coef_age65pl_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Female,Walk - Female,@df.female,,,,coef_female_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Income 60k to 100k,Walk - Income 60k to 100k,@(df.income > 59999) * (df.income < 100000),,,,coef_inc60100_walk,,,,,,,,,,,,,,,,,,,
util_Walk - Normalized Landuse Variable Sum [Origin Intersection + DU],Walk - Normalized Landuse Variable Sum [Origin Intersection + DU],LUVarsNormalized_walk,,,,coef_LUnorm_walk,,,,,,,,,,,,,,,,,,,
"util_Walk - Normalized Destination Employment Density, walk","Walk - Normalized Destination Employment Density, walk",dMGRAEmpDenNorm_walk,,,,coef_dEmpNorm_walk,,,,,,,,,,,,,,,,,,,
util_Walk - time coefficient,Walk - time coefficient,@(df.walk_time_skims_inb + df.walk_time_skims_out) * df.time_factor,,,,coef_walktime,,,,,,,,,,,,,,,,,,,
#,Bike,,,,,,,,,,,,,,,,,,,,,,,,
util_BIKE_Mode unavailable,Bike - Mode unavailable,bikeAvailable == 0,,,,,-999,,,,,,,,,,,,,,,,,,
"util_BIKE_Age under 16, bike","Bike - Age under 16, bike",@(df.age < 16),,,,,coef_ageund16_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Age 16 to 24, bike","Bike - Age 16 to 24, bike",@(df.age > 15) & (df.age < 25),,,,,coef_age1624_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Age 41 to 55, bike","Bike - Age 41 to 55, bike",@(df.age > 40) & (df.age < 56),,,,,coef_age4155_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Age 56 to 64, bike","Bike - Age 56 to 64, bike",@(df.age > 55) & (df.age < 65),,,,,coef_age5664_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Age 65 plus, bike","Bike - Age 65 plus, bike",@(df.age > 64),,,,,coef_age65pl_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Female, bike","Bike - Female, bike",@df.female,,,,,coef_female_bike,,,,,,,,,,,,,,,,,,
"util_BIKE_Income 100k plus, bike","Bike - Income 100k plus, bike",@(df.income > 99999),,,,,coef_inc100plus_bike,,,,,,,,,,,,,,,,,,
util_BIKE_Normalized Landuse Variable [Origin Employment + DU],Bike - - Normalized Landuse Variable [Origin Employment + DU],LUVarsNormalized_bike,,,,,coef_LUnorm_bike,,,,,,,,,,,,,,,,,,
util_BIKE_Bike - logsum,Bike - logsum,bikeLSI + bikeLSO,,,,,coef_bikeLogsum,,,,,,,,,,,,,,,,,,
util_BIKE_Miles to coast from origin MGRA,Bike - Miles to coast from origin MGRA,DistanceToCoast,,,,,coef_oMlCoast_bike,,,,,,,,,,,,,,,,,,
util_BIKE_Miles greater than 2 to coast from origin MGRA,Bike - Miles greater than 2 to coast from origin MGRA,"@(np.maximum(df.DistanceToCoast-2,0))",,,,,coef_oMlCoast2p_bike,,,,,,,,,,,,,,,,,,
util_BIKE_Miles greater than 5 to coast from origin MGRA,Bike - Miles greater than 5 to coast from origin MGRA,"@(np.maximum(df.DistanceToCoast-5,0))",,,,,coef_oMlCoast5p_bike,,,,,,,,,,,,,,,,,,
#,Walk_LOC,,,,,,,,,,,,,,,,,,,,,,,,
util_WALK_LOC_Unavailable,WalkTransit_Available,walk_local_available == 0,,,,,,-999,,,,,,,,,,,,,,,,,
util_WALK_LOC_In_vehicle_time,WALK_LOC - In-vehicle time,@(odt_skims['WALK_LOC_TOTALIVTT'] + dot_skims['WALK_LOC_TOTALIVTT']) * df.time_factor,,,,,,coef_ivt,,,,,,,,,,,,,,,,,
util_WALK_LOC_iwait_time,WALK_LOC - wait time,@(odt_skims['WALK_LOC_FIRSTWAIT'] + dot_skims['WALK_LOC_FIRSTWAIT']) * df.time_factor,,,,,,coef_wait,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfer_wait_time,WALK_LOC - transfer wait time,@(odt_skims['WALK_LOC_XFERWAIT'] + dot_skims['WALK_LOC_XFERWAIT'])* df.time_factor,,,,,,coef_xwait,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfer_waLK_time,WALK_LOC - transfer walk time,@(odt_skims['WALK_LOC_XFERWALK'] + dot_skims['WALK_LOC_XFERWALK'])* df.time_factor,,,,,,coef_xwalk,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfers_penalty,WALK_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['WALK_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4)))*df.time_factor",,,,,,coef_xfer,,,,,,,,,,,,,,,,,
util_WALK_LOC_Walk_access_time,WALK_LOC - Walk access,@2 * df.origin_local_time* df.time_factor,,,,,,coef_acctime,,,,,,,,,,,,,,,,,
util_WALK_LOC_Walk_egress_time,WALK_LOC - egress time,"@np.where(df.nev_local_egress_available, df.nev_local_egress_time, np.where(df.microtransit_local_egress_available, df.microtransit_local_egress_time, 2*df.dest_local_time)) * df.time_factor",,,,,,coef_acctime,,,,,,,,,,,,,,,,,
util_WALK_LOC_wait_egress_time,WALK_LOC - Egress MT/NEV wait time,"@np.where(df.nev_local_egress_available, 2*nevWaitTime, np.where(df.microtransit_local_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,coef_wait,,,,,,,,,,,,,,,,,
util_WALK_LOC_Fare,WALK_LOC - Fare,@df.transitSubsidyPassDiscount*(odt_skims['WALK_LOC_FARE'] + dot_skims['WALK_LOC_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,coef_income,,,,,,,,,,,,,,,,,
util_WALK_LOC - Age 16 to 24,WALK_LOC - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,coef_age1624_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Age 41 to 55,WALK_LOC - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,coef_age4155_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Age 56 to 64,WALK_LOC - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,coef_age5664_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Age 65+,WALK_LOC - Age 65+,@(df.age > 64),,,,,,coef_age65pl_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Female,WALK_LOC - Female,@(df.female),,,,,,coef_female_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Origin Mix,WALK_LOC - Origin Mix,oMGRAMix,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Origin Intersection Density,WALK_LOC - Origin Intersection Density,oMGRATotInt,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Destination Employment Density,WALK_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,,,
#,WALK_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_WalkTransit_Unavailable,WalkTransit_Available,walk_premium_available == 0,,,,,,,-999,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time,WALK_PRM - In-vehicle time,@(odt_skims['WALK_PRM_TOTALIVTT'] + dot_skims['WALK_PRM_TOTALIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_LRT,WALK_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_PRM_LRTIVTT'] + dot_skims['WALK_PRM_LRTIVTT'])* df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_CMR,WALK_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_PRM_CMRIVTT'] + dot_skims['WALK_PRM_CMRIVTT'])* df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_LTD_EXP,WALK_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_PRM_LTDEXPIVTT'] + dot_skims['WALK_PRM_LTDEXPIVTT'] + odt_skims['WALK_PRM_EXPIVTT'] + dot_skims['WALK_PRM_EXPIVTT'])* df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_URB,WALK_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_PRM_BRTIVTT'] + dot_skims['WALK_PRM_BRTIVTT'])* df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_wait_time,WALK_PRM - wait time,"@(odt_skims['WALK_PRM_FIRSTWAIT'] + dot_skims['WALK_PRM_FIRSTWAIT']) * df.time_factor * np.where((odt_skims['WALK_PRM_BRTIVTT'] + dot_skims['WALK_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,coef_wait,,,,,,,,,,,,,,,,
util_WALK_PRM_transfer_wait_time,WALK_PRM - transfer wait time,"@(odt_skims['WALK_PRM_XFERWAIT'] + dot_skims['WALK_PRM_XFERWAIT'])* df.time_factor * np.where((odt_skims['WALK_PRM_BRTIVTT'] + dot_skims['WALK_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,coef_xwait,,,,,,,,,,,,,,,,
util_WALK_PRM_transfer_waLK_time,WALK_PRM - transfer walk time,@(odt_skims['WALK_PRM_XFERWALK'] + dot_skims['WALK_PRM_XFERWALK'])* df.time_factor,,,,,,,coef_xwalk,,,,,,,,,,,,,,,,
util_WALK_PRM_transfers_penalty,WALK_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['WALK_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4)))*df.time_factor",,,,,,,coef_xfer,,,,,,,,,,,,,,,,
util_WALK_PRM_Walk_access_time,WALK_PRM - Walk access,@2 * df.origin_prm_time * df.time_factor,,,,,,,coef_acctime,,,,,,,,,,,,,,,,
util_WALK_PRM_Walk_egress_time,WALK_PRM - egress time,"@np.where(df.nev_prm_egress_available, df.nev_prm_egress_time, np.where(df.microtransit_prm_egress_available, df.microtransit_prm_egress_time, 2*df.dest_prm_time)) * df.time_factor",,,,,,,coef_acctime,,,,,,,,,,,,,,,,
util_WALK_PRM_wait_egress_time,WALK_PRM - Egress MT/NEV wait time,"@np.where(df.nev_prm_egress_available, 2*nevWaitTime, np.where(df.microtransit_prm_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,coef_wait,,,,,,,,,,,,,,,,
util_WALK_PRM_Fare,WALK_PRM - Fare,@df.transitSubsidyPassDiscount*(odt_skims['WALK_PRM_FARE'] + dot_skims['WALK_PRM_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,coef_income,,,,,,,,,,,,,,,,
util_WALK_PRM_ASC,WALK_PRM - Alternative-specific constant,(wlk_prm_out_asc + wlk_prm_inb_asc) * time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM - Age 16 to 24,WALK_PRM - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,coef_age1624_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Age 41 to 55,WALK_PRM - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,coef_age4155_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Age 56 to 64,WALK_PRM - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,coef_age5664_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Age 65+,WALK_PRM - Age 65+,@(df.age > 64),,,,,,,coef_age65pl_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Female,WALK_PRM - Female,@(df.female),,,,,,,coef_female_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Origin Mix,WALK_PRM - Origin Mix,oMGRAMix,,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,,
util_WALK_PRM - Origin Intersection Density,WALK_PRM - Origin Intersection Density,oMGRATotInt,,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,,
util_WALK_PRM - Destination Employment Density,WALK_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,,
#,WALK_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_WALK_MIX_Unavailable,WALK_MIX - Unavailable,walk_mix_available == False,,,,,,,,-999,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time,WALK_MIX - In-vehicle time,@(odt_skims['WALK_MIX_TOTALIVTT'] + dot_skims['WALK_MIX_TOTALIVTT']) *df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_LRT,WALK_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_MIX_LRTIVTT'] + dot_skims['WALK_MIX_LRTIVTT'])*df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_CMR,WALK_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_MIX_CMRIVTT'] + dot_skims['WALK_MIX_CMRIVTT'])*df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_LTD_EXP,WALK_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_MIX_LTDEXPIVTT'] + dot_skims['WALK_MIX_LTDEXPIVTT'] + odt_skims['WALK_MIX_EXPIVTT'] + dot_skims['WALK_MIX_EXPIVTT'])*df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_URB,WALK_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_MIX_BRTIVTT'] + dot_skims['WALK_MIX_BRTIVTT'])*df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_FIRST_wait_time,WALK_MIX - First wait time,"@(odt_skims['WALK_MIX_FIRSTWAIT']) + (dot_skims['WALK_MIX_FIRSTWAIT'])*df.time_factor * np.where((odt_skims['WALK_MIX_BRTIVTT'] + dot_skims['WALK_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,coef_wait,,,,,,,,,,,,,,,
util_WALK_MIX_transfer_wait_time,WALK_MIX - transfer wait time,"@(odt_skims['WALK_MIX_XFERWAIT'] + dot_skims['WALK_MIX_XFERWAIT'])*df.time_factor * np.where((odt_skims['WALK_MIX_BRTIVTT'] + dot_skims['WALK_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,coef_xwait,,,,,,,,,,,,,,,
util_WALK_PRM_transfer_waLK_time,WALK_PRM - transfer walk time,@(odt_skims['WALK_MIX_XFERWALK'] + dot_skims['WALK_MIX_XFERWALK']) *df.time_factor,,,,,,,,coef_xwalk,,,,,,,,,,,,,,,
util_WALK_MIX_number_of_transfers,WALK_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['WALK_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4)))*df.time_factor",,,,,,,,coef_xfer,,,,,,,,,,,,,,,
util_WALK_MIX_Walk_access_time,WALK_MIX - Walk access,@2 * df.origin_mix_time*df.time_factor,,,,,,,,coef_acctime,,,,,,,,,,,,,,,
util_WALK_MIX_Walk_egress_time,WALK_MIX - egress time,"@np.where(df.nev_mix_egress_available, df.nev_mix_egress_time, np.where(df.microtransit_mix_egress_available, df.microtransit_mix_egress_time, 2*df.dest_mix_time)) * df.time_factor",,,,,,,,coef_acctime,,,,,,,,,,,,,,,
util_WALK_MIX_wait_egress_time,WALK_MIX - Egress MT/NEV wait time,"@np.where(df.nev_mix_egress_available, 2*nevWaitTime, np.where(df.microtransit_mix_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,coef_wait,,,,,,,,,,,,,,,
util_WALK_MIX_Fare,WALK_MIX - Fare,@df.transitSubsidyPassDiscount*(odt_skims['WALK_MIX_FARE'] + dot_skims['WALK_MIX_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,coef_income,,,,,,,,,,,,,,,
util_WALK_MIX_ASC,WALK_MIX - Alternative-specific constant,(wlk_mix_out_asc + wlk_mix_inb_asc) * time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX - Age 16 to 24,WALK_MIX - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,coef_age1624_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Age 41 to 55,WALK_MIX - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,coef_age4155_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Age 56 to 64,WALK_MIX - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,coef_age5664_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Age 65+,WALK_MIX - Age 65+,@(df.age > 64),,,,,,,,coef_age65pl_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Female,WALK_MIX - Female,@(df.female),,,,,,,,coef_female_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Origin Mix,WALK_MIX - Origin Mix,oMGRAMix,,,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,
util_WALK_MIX - Origin Intersection Density,WALK_MIX - Origin Intersection Density,oMGRATotInt,,,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,
util_WALK_MIX - Destination Employment Density,WALK_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,
#,PNR_LOC,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_LOC_Unavailable,PNR_LOC - Unavailable,"@(df.pnr_local_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,-999,,,,,,,,,,,,,,
util_PNRTransit_0Auto,PNRTransit_0Auto,@(df.auto_ownership==0),,,,,,,,,-999,,,,,,,,,,,,,,
util_PNR_LOC_Unavailable_for_persons_less_than_16,PNR_LOC - Unavailable for persons less than 16,age < 16,,,,,,,,,-999,,,,,,,,,,,,,,
util_PNR_LOC_In_vehicle_time,PNR_LOC - In-vehicle time,@(odt_skims['PNROUT_LOC_TOTALIVTT'] + dot_skims['PNRIN_LOC_TOTALIVTT'])*df.time_factor,,,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_PNR_LOC_iwait_time,PNR_LOC - First iwait time,@(odt_skims['PNROUT_LOC_FIRSTWAIT']) + (dot_skims['PNRIN_LOC_FIRSTWAIT'])*df.time_factor,,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNR_LOC_transfer_wait_time,PNR_LOC - transfer wait time,@(odt_skims['PNROUT_LOC_XFERWAIT'] + dot_skims['PNRIN_LOC_XFERWAIT'])*df.time_factor,,,,,,,,,coef_xwait,,,,,,,,,,,,,,
util_PNR_LOC_number_of_transfers,PNR_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['PNRIN_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,coef_xferdrive,,,,,,,,,,,,,,
util_PNR_LOC_PNR_time,PNR_LOC - PNR time,@(odt_skims['PNROUT_LOC_ACC'] + dot_skims['PNRIN_LOC_EGR']) *df.time_factor,,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNR_LOC_PNR_cost,PNR_LOC - PNR cost,@(df.sov_auto_op_cost * ((odt_skims['PNROUT_LOC_ACC'] + dot_skims['PNRIN_LOC_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNR_LOC_Walk_egress_time_(at_attraction_end),PNR_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available, df.nev_local_egress_time, np.where(df.microtransit_local_egress_available, df.microtransit_local_egress_time, 2*df.dest_local_time)) * df.time_factor",,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNR_LOC_wait_egress_time_(at_attraction_end),PNR_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available, 2*nevWaitTime, np.where(df.microtransit_local_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNR_LOC_Walk_other_time,PNR_LOC - Walk other time,@(odt_skims['PNROUT_LOC_XFERWALK'] + dot_skims['PNRIN_LOC_XFERWALK'])*df.time_factor,,,,,,,,,coef_xwalk,,,,,,,,,,,,,,
util_PNR_LOC_Fare_and_operating_cost,PNR_LOC - Fare ,@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_LOC_FARE'] + dot_skims['PNRIN_LOC_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNR_LOC - Age 16 to 24,PNR_LOC - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,coef_age1624_tran,,,,,,,,,,,,,,
util_PNR_LOC - Age 41 to 55,PNR_LOC - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,coef_age4155_tran,,,,,,,,,,,,,,
util_PNR_LOC - Age 56 to 64,PNR_LOC - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,coef_age5664_tran,,,,,,,,,,,,,,
util_PNR_LOC - Age 65+,PNR_LOC - Age 65+,@(df.age > 65),,,,,,,,,coef_age65pl_tran,,,,,,,,,,,,,,
util_PNR_LOC - Female,PNR_LOC - Female,@(df.female),,,,,,,,,coef_female_tran,,,,,,,,,,,,,,
util_PNR_LOC - Destination Employment Density,PNR_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,,,
#,PNR_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_PRM_Unavailable,PNR_PRM - Unavailable,"@(df.pnr_premium_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,-999,,,,,,,,,,,,,
util_PNR_PRM_Transit_0Auto,PNRTransit_0Auto,@(df.auto_ownership==0),,,,,,,,,,-999,,,,,,,,,,,,,
util_PNR_PRM_Unavailable_for_persons_less_than_16,PNR_PRM - Unavailable for persons less than 16,@df.age < 16,,,,,,,,,,-999,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time,PNR_PRM - In-vehicle time,@(odt_skims['PNROUT_PRM_TOTALIVTT'] + dot_skims['PNRIN_PRM_TOTALIVTT']) *df.time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_LRT,PNR_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNROUT_PRM_LRTIVTT'] + dot_skims['PNRIN_PRM_LRTIVTT']) *df.time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_CMR,PNR_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNROUT_PRM_CMRIVTT'] + dot_skims['PNRIN_PRM_CMRIVTT']) *df.time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_LTD_EXP,PNR_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNROUT_PRM_LTDEXPIVTT'] + dot_skims['PNRIN_PRM_LTDEXPIVTT'] + odt_skims['PNROUT_PRM_EXPIVTT'] + dot_skims['PNRIN_PRM_EXPIVTT']) *df.time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_URB,PNR_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNROUT_PRM_BRTIVTT'] + dot_skims['PNRIN_PRM_BRTIVTT']) *df.time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_FIRST_iwait_time,PNR_PRM - First iwait time,"@(odt_skims['WALK_PRM_XFERWAIT'] + dot_skims['WALK_PRM_XFERWAIT'])* df.time_factor * np.where((odt_skims['PNROUT_PRM_BRTIVTT'] + dot_skims['PNRIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNR_PRM_transfer_wait_time,PNR_PRM - transfer wait time,"@(odt_skims['PNROUT_PRM_XFERWAIT'] + dot_skims['PNRIN_PRM_XFERWAIT'])*df.time_factor * np.where((odt_skims['PNROUT_PRM_BRTIVTT'] + dot_skims['PNRIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_xwait,,,,,,,,,,,,,
util_PNR_PRM_number_of_transfers,PNR_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['PNRIN_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,coef_xferdrive,,,,,,,,,,,,,
util_PNR_PRM_PNR_time,PNR_PRM - PNR time,@(odt_skims['PNROUT_PRM_ACC'] + dot_skims['PNRIN_PRM_EGR']),,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNR_PRM_PNR_cost,PNR_PRM - PNR cost,@(df.sov_auto_op_cost * ((odt_skims['PNROUT_PRM_ACC'] + dot_skims['PNRIN_PRM_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNR_PRM_Walk_egress_time_(at_attraction_end),PNR_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available, df.nev_prm_egress_time, np.where(df.microtransit_prm_egress_available, df.microtransit_prm_egress_time, 2*df.dest_prm_time)) * df.time_factor",,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNR_PRM_wait_egress_time_(at_attraction_end),PNR_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available, 2*nevWaitTime, np.where(df.microtransit_prm_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNR_PRM_Walk_other_time,PNR_PRM - Walk other time,@(odt_skims['PNROUT_PRM_XFERWALK'] + dot_skims['PNRIN_PRM_XFERWALK']) *df.time_factor,,,,,,,,,,coef_xwalk,,,,,,,,,,,,,
util_PNR_PRM_Fare,PNR_PRM - Fare,@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_PRM_FARE'] + dot_skims['PNRIN_PRM_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNR_PRM_ASC,PNR_PRM - Alternative-specific constant,(pnr_prm_out_asc + pnr_prm_inb_asc) * time_factor,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM - Age 16 to 24,PNR_PRM - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,coef_age1624_tran,,,,,,,,,,,,,
util_PNR_PRM - Age 41 to 55,PNR_PRM - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,coef_age4155_tran,,,,,,,,,,,,,
util_PNR_PRM - Age 56 to 64,PNR_PRM - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,coef_age5664_tran,,,,,,,,,,,,,
util_PNR_PRM - Age 65+,PNR_PRM - Age 65+,@(df.age > 64),,,,,,,,,,coef_age65pl_tran,,,,,,,,,,,,,
util_PNR_PRM - Female,PNR_PRM - Female,@(df.female),,,,,,,,,,coef_female_tran,,,,,,,,,,,,,
util_PNR_PRM - Destination Employment Density,PNR_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,,
#,PNR_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_MIX_Unavailable,PNR_mix - Unavailable,"@(df.pnr_mix_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,-999,,,,,,,,,,,,
util_PNR_MIX_Transit_0Auto,PNRTransit_0Auto,@(df.auto_ownership==0),,,,,,,,,,,-999,,,,,,,,,,,,
util_PNR_PRM_Unavailable_for_persons_less_than_16,PNR_mix - Unavailable for persons less than 16,@df.age < 16,,,,,,,,,,,-999,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time,PNR_MIX - In-vehicle time,@(odt_skims['PNROUT_MIX_TOTALIVTT'] + dot_skims['PNRIN_MIX_TOTALIVTT']) *df.time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_LRT,PNR_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNROUT_MIX_LRTIVTT'] + dot_skims['PNRIN_MIX_LRTIVTT']) *df.time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_CMR,PNR_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNROUT_MIX_CMRIVTT'] + dot_skims['PNRIN_MIX_CMRIVTT']) *df.time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_LTD_EXP,PNR_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNROUT_MIX_LTDEXPIVTT'] + dot_skims['PNRIN_MIX_LTDEXPIVTT'] + odt_skims['PNROUT_MIX_EXPIVTT'] + dot_skims['PNRIN_MIX_EXPIVTT'])*df.time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_URB,PNR_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNROUT_MIX_BRTIVTT'] + dot_skims['PNRIN_MIX_BRTIVTT'])*df.time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_FIRST_iwait_time,PNR_MIX - First iwait time,"@(odt_skims['PNROUT_MIX_FIRSTWAIT'] + dot_skims['PNRIN_MIX_FIRSTWAIT']) *df.time_factor * np.where((odt_skims['PNROUT_MIX_BRTIVTT'] + dot_skims['PNRIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNR_MIX_transfer_wait_time,PNR_MIX - transfer wait time,"@(odt_skims['PNROUT_MIX_XFERWAIT'] + dot_skims['PNRIN_MIX_XFERWAIT'])*df.time_factor * np.where((odt_skims['PNROUT_MIX_BRTIVTT'] + dot_skims['PNRIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_xwait,,,,,,,,,,,,
util_PNR_MIX_number_of_transfers,PNR_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['PNRIN_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,coef_xferdrive,,,,,,,,,,,,
util_PNR_MIX_PNR_time,PNR_MIX - PNR time,@(odt_skims['PNROUT_MIX_ACC'] + dot_skims['PNRIN_MIX_EGR'])*df.time_factor,,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNR_MIX_PNR_cost,PNR_MIX - PNR cost,@(df.sov_auto_op_cost * ((odt_skims['PNROUT_MIX_ACC'] + dot_skims['PNRIN_MIX_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNR_MIX_Walk_egress_time_(at_attraction_end),PNR_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available, df.nev_mix_egress_time, np.where(df.microtransit_mix_egress_available, df.microtransit_mix_egress_time, 2*df.dest_mix_time)) * df.time_factor",,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNR_MIX_wait_egress_time_(at_attraction_end),PNR_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available, 2*nevWaitTime, np.where(df.microtransit_mix_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNR_MIX_Walk_other_time,PNR_MIX - Walk other time,@(odt_skims['PNROUT_MIX_XFERWALK'] + dot_skims['PNRIN_MIX_XFERWALK']) *df.time_factor,,,,,,,,,,,coef_xwalk,,,,,,,,,,,,
util_PNR_MIX_Fare,PNR_MIX - Fare,@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_MIX_FARE'] + dot_skims['PNRIN_MIX_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNR_MIX_ASC,PNR_MIX - Alternative-specific constant,(pnr_mix_out_asc + pnr_mix_inb_asc) * time_factor,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX - Age 16 to 24,PNR_MIX - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,coef_age1624_tran,,,,,,,,,,,,
util_PNR_MIX - Age 41 to 55,PNR_MIX - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,coef_age4155_tran,,,,,,,,,,,,
util_PNR_MIX - Age 56 to 64,PNR_MIX - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,coef_age5664_tran,,,,,,,,,,,,
util_PNR_MIX - Age 65+,PNR_MIX - Age 65+,@(df.age > 64),,,,,,,,,,,coef_age65pl_tran,,,,,,,,,,,,
util_PNR_MIX - Female,PNR_MIX - Female,@(df.female),,,,,,,,,,,coef_female_tran,,,,,,,,,,,,
util_PNR_MIX - Destination Employment Density,PNR_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_LOC_Unavailable,KNR_LOC - Unavailable,"@(df.knr_local_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,-999,,,,,,,,,,,
util_KNR_LOC_In_vehicle_time,KNR_LOC - In-vehicle time,@(odt_skims['KNROUT_LOC_TOTALIVTT'] + dot_skims['KNRIN_LOC_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,coef_ivt,,,,,,,,,,,
util_KNR_LOC_iwait_time,KNR_LOC - First iwait time,@(odt_skims['KNROUT_LOC_FIRSTWAIT']) + (dot_skims['KNRIN_LOC_FIRSTWAIT'])*df.time_factor,,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNR_LOC_transfer_wait_time,KNR_LOC - transfer wait time,@(odt_skims['KNROUT_LOC_XFERWAIT'] + dot_skims['KNRIN_LOC_XFERWAIT'])*df.time_factor,,,,,,,,,,,,coef_xwait,,,,,,,,,,,
util_KNR_LOC_number_of_transfers,KNR_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['KNRIN_LOC_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,coef_xferdrive,,,,,,,,,,,
util_KNR_LOC_KNR_time,KNR_LOC - KNR time,@(odt_skims['KNROUT_LOC_ACC'] + dot_skims['KNRIN_LOC_EGR'])*df.time_factor,,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNR_LOC_KNR_cost,KNR_LOC - KNR cost,@(df.sr2_auto_op_cost * ((odt_skims['KNROUT_LOC_ACC'] + dot_skims['KNRIN_LOC_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNR_LOC_Walk_egress_time_(at_attraction_end),KNR_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available, df.nev_local_egress_time, np.where(df.microtransit_local_egress_available, df.microtransit_local_egress_time, 2*df.dest_local_time)) * df.time_factor",,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNR_LOC_wait_egress_time_(at_attraction_end),KNR_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available, 2*nevWaitTime, np.where(df.microtransit_local_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNR_LOC_Walk_other_time,KNR_LOC - Walk other time,@(odt_skims['KNROUT_LOC_XFERWALK'] + dot_skims['KNRIN_LOC_XFERWALK'])*df.time_factor,,,,,,,,,,,,coef_xwalk,,,,,,,,,,,
util_KNR_LOC_Fare_and_operating_cost,KNR_LOC - Fare ,@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_LOC_FARE'] + dot_skims['KNRIN_LOC_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNR_LOC - Age 16 to 24,KNR_LOC - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,coef_age1624_tran,,,,,,,,,,,
util_KNR_LOC - Age 41 to 55,KNR_LOC - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,coef_age4155_tran,,,,,,,,,,,
util_KNR_LOC - Age 56 to 64,KNR_LOC - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,coef_age5664_tran,,,,,,,,,,,
util_KNR_LOC - Age 65+,KNR_LOC - Age 65+,@(df.age > 64),,,,,,,,,,,,coef_age65pl_tran,,,,,,,,,,,
util_KNR_LOC - Female,KNR_LOC - Female,@(df.female),,,,,,,,,,,,coef_female_tran,,,,,,,,,,,
util_KNR_LOC - Destination Employment Density,KNR_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,
#,KNR_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_PRM_Unavailable,KNR_PRM - Unavailable,"@(df.knr_premium_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,,-999,,,,,,,,,,
util_KNR_PRM_In_vehicle_time,KNR_PRM - In-vehicle time,@(odt_skims['KNROUT_PRM_TOTALIVTT'] + dot_skims['KNRIN_PRM_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_LRT,KNR_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNROUT_PRM_LRTIVTT'] + dot_skims['KNRIN_PRM_LRTIVTT'])*df.time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_CMR,KNR_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNROUT_PRM_CMRIVTT'] + dot_skims['KNRIN_PRM_CMRIVTT'])*df.time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_LTD_EXP,KNR_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNROUT_PRM_LTDEXPIVTT'] + dot_skims['KNRIN_PRM_LTDEXPIVTT'] + odt_skims['KNROUT_PRM_EXPIVTT'] + dot_skims['KNRIN_PRM_EXPIVTT'])*df.time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_URB,KNR_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNROUT_PRM_BRTIVTT'] + dot_skims['KNRIN_PRM_BRTIVTT'])*df.time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_FIRST_iwait_time,KNR_PRM - First iwait time,"@(odt_skims['KNROUT_PRM_FIRSTWAIT'] + dot_skims['KNRIN_PRM_FIRSTWAIT'])*df.time_factor * np.where((odt_skims['KNROUT_PRM_BRTIVTT'] + dot_skims['KNRIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNR_PRM_transfer_wait_time,KNR_PRM - transfer wait time,"@(odt_skims['KNROUT_PRM_XFERWAIT'] + dot_skims['KNRIN_PRM_XFERWAIT'])*df.time_factor * np.where((odt_skims['KNROUT_PRM_BRTIVTT'] + dot_skims['KNRIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_xwait,,,,,,,,,,
util_KNR_PRM_number_of_transfers,KNR_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['KNRIN_PRM_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,,coef_xferdrive,,,,,,,,,,
util_KNR_PRM_KNR_time,KNR_PRM - KNR time,@(odt_skims['KNROUT_PRM_ACC'] + dot_skims['KNRIN_PRM_EGR']) *df.time_factor,,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNR_PRM_KNR_cost,KNR_PRM - KNR cost,@(df.sr2_auto_op_cost * ((odt_skims['KNROUT_PRM_ACC'] + dot_skims['KNRIN_PRM_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNR_PRM_Walk_egress_time_(at_attraction_end),KNR_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available, df.nev_prm_egress_time, np.where(df.microtransit_prm_egress_available, df.microtransit_prm_egress_time, 2*df.dest_prm_time)) * df.time_factor",,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNR_PRM_wait_egress_time_(at_attraction_end),KNR_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available, 2*nevWaitTime, np.where(df.microtransit_prm_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNR_PRM_Walk_other_time,KNR_PRM - Walk other time,@(odt_skims['KNROUT_PRM_XFERWALK'] + dot_skims['KNRIN_PRM_XFERWALK']) *df.time_factor,,,,,,,,,,,,,coef_xwalk,,,,,,,,,,
util_KNR_PRM_Fare,KNR_PRM - Fare,@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_PRM_FARE'] + dot_skims['KNRIN_PRM_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNR_PRM_ASC,KNR_PRM - Alternative-specific constant,(knr_prm_out_asc + knr_prm_inb_asc) * time_factor,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM - Age 16 to 24,KNR_PRM - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,,coef_age1624_tran,,,,,,,,,,
util_KNR_PRM - Age 41 to 55,KNR_PRM - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,,coef_age4155_tran,,,,,,,,,,
util_KNR_PRM - Age 56 to 64,KNR_PRM - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,,coef_age5664_tran,,,,,,,,,,
util_KNR_PRM - Age 65+,KNR_PRM - Age 65+,@(df.age > 64),,,,,,,,,,,,,coef_age65pl_tran,,,,,,,,,,
util_KNR_PRM - Female,KNR_PRM - Female,@(df.female),,,,,,,,,,,,,coef_female_tran,,,,,,,,,,
util_KNR_PRM - Destination Employment Density,KNR_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,
#,KNR_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_MIX_Unavailable,KNR_mix - Unavailable,"@(df.knr_mix_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,,,-999,,,,,,,,,
util_KNR_MIX_In_vehicle_time,KNR_MIX - In-vehicle time,@(odt_skims['KNROUT_MIX_TOTALIVTT'] + dot_skims['KNRIN_MIX_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_Bus,KNR_MIX - In-vehicle time on Bus,@(odt_skims['KNROUT_MIX_BUSIVTT'] + dot_skims['KNRIN_MIX_BUSIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_LRT,KNR_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNROUT_MIX_LRTIVTT'] + dot_skims['KNRIN_MIX_LRTIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_CMR,KNR_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNROUT_MIX_CMRIVTT'] + dot_skims['KNRIN_MIX_CMRIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_LTD_EXP,KNR_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNROUT_MIX_LTDEXPIVTT'] + dot_skims['KNRIN_MIX_LTDEXPIVTT'] + odt_skims['KNROUT_MIX_EXPIVTT'] + dot_skims['KNRIN_MIX_EXPIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_URB,KNR_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNROUT_MIX_BRTIVTT'] + dot_skims['KNRIN_MIX_BRTIVTT']) *df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_FIRST_iwait_time,KNR_MIX - First iwait time,"@(odt_skims['KNROUT_MIX_FIRSTWAIT'] + dot_skims['KNRIN_MIX_FIRSTWAIT'])*df.time_factor * np.where((odt_skims['KNROUT_MIX_BRTIVTT'] + dot_skims['KNRIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNR_MIX_transfer_wait_time,KNR_MIX - transfer wait time,"@(odt_skims['KNROUT_MIX_XFERWAIT'] + dot_skims['KNRIN_MIX_XFERWAIT'])*df.time_factor * np.where((odt_skims['KNROUT_MIX_BRTIVTT'] + dot_skims['KNRIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_xwait,,,,,,,,,
util_KNR_MIX_number_of_transfers,KNR_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['KNRIN_MIX_XFERS'] + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,,,coef_xferdrive,,,,,,,,,
util_KNR_MIX_KNR_time,KNR_MIX - KNR time,@(odt_skims['KNROUT_MIX_ACC'] + dot_skims['KNRIN_MIX_EGR'])*df.time_factor,,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNR_MIX_KNR_cost,KNR_MIX - KNR cost,@(df.sr2_auto_op_cost * ((odt_skims['KNROUT_MIX_ACC'] + dot_skims['KNRIN_MIX_EGR'])/60) *driveSpeed )/df.cost_sensitivity,,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNR_MIX_Walk_egress_time_(at_attraction_end),KNR_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available, df.nev_mix_egress_time, np.where(df.microtransit_mix_egress_available, df.microtransit_mix_egress_time, 2*df.dest_mix_time)) * df.time_factor",,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNR_MIX_wait_egress_time_(at_attraction_end),KNR_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available, 2*nevWaitTime, np.where(df.microtransit_mix_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNR_MIX_Walk_other_time,KNR_MIX - Walk other time,@(odt_skims['KNROUT_MIX_XFERWALK'] + dot_skims['KNRIN_MIX_XFERWALK']) *df.time_factor,,,,,,,,,,,,,,coef_xwalk,,,,,,,,,
util_KNR_MIX_Fare,KNR_MIX - Fare,@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_MIX_FARE'] + dot_skims['KNRIN_MIX_FARE'])*100*df.num_participants/df.cost_sensitivity,,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNR_MIX_ASC,KNR_MIX - Alternative-specific constant,(knr_mix_out_asc + knr_mix_inb_asc) * time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX - Age 16 to 24,KNR_MIX - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,,,coef_age1624_tran,,,,,,,,,
util_KNR_MIX - Age 41 to 55,KNR_MIX - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,,,coef_age4155_tran,,,,,,,,,
util_KNR_MIX - Age 56 to 64,KNR_MIX - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,,,coef_age5664_tran,,,,,,,,,
util_KNR_MIX - Age 65+,KNR_MIX - Age 65+,@(df.age > 64),,,,,,,,,,,,,,coef_age65pl_tran,,,,,,,,,
util_KNR_MIX - Female,KNR_MIX - Female,@(df.female),,,,,,,,,,,,,,coef_female_tran,,,,,,,,,
util_KNR_MIX - Destination Employment Density,KNR_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_LOC_Unavailable,TNC_LOC - Unavailable,"@(df.tnc_local_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,,,,-999,,,,,,,,
util_TNC_LOC_Unavailable_for_persons_less_than_16,TNC_LOC - Unavailable for persons less than 16,age < 12,,,,,,,,,,,,,,,-999,,,,,,,,
util_TNC_LOC_In_vehicle_time,TNC_LOC - In-vehicle time,@(odt_skims['TNCOUT_LOC_TOTALIVTT'] + dot_skims['TNCIN_LOC_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,,,,coef_ivt,,,,,,,,
util_TNC_LOC_iwait_time,TNC_LOC - First iwait time,@(odt_skims['TNCOUT_LOC_FIRSTWAIT']) + (dot_skims['TNCIN_LOC_FIRSTWAIT'])*df.time_factor,,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_transfer_wait_time,TNC_LOC - transfer wait time,@(odt_skims['TNCOUT_LOC_XFERWAIT'] + dot_skims['TNCIN_LOC_XFERWAIT']) *df.time_factor,,,,,,,,,,,,,,,coef_xwait,,,,,,,,
util_TNC_LOC_number_of_transfers,TNC_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_LOC_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['TNCIN_MIX_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,,,,coef_xferdrive,,,,,,,,
util_TNC_LOC_TNC_time,TNC_LOC - TNC time,"@np.where(df.nev_local_access_available, df.nev_local_access_time, np.where(df.microtransit_local_access_available, df.microtransit_local_access_time, odt_skims['TNCOUT_LOC_ACC'] + dot_skims['TNCIN_LOC_EGR'])) *df.time_factor",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_TNC_wait_time,TNC_LOC - TNC wait time,"@np.where(df.nev_local_access_available, 2*nevWaitTime, np.where(df.microtransit_local_access_available, 2*microtransitWaitTime, 2*df.origSingleTNCWaitTime)) *df.time_factor",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_TNC_fare,TNC_LOC - TNC fare,"@(~df.nev_local_access_available) * (~df.microtransit_local_access_available) * ((np.maximum(TNC_single_baseFare*2 + ((odt_skims['TNCOUT_LOC_ACC'] + dot_skims['TNCIN_LOC_EGR'])/60 * driveSpeed) * TNC_single_costPerMile + (odt_skims['TNCOUT_LOC_ACC'] + dot_skims['TNCIN_LOC_EGR']) * TNC_single_costPerMinute, TNC_single_costMinimum*2)*100)/df.cost_sensitivity)",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC_Walk_egress_time_(at_attraction_end),TNC_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available, df.nev_local_egress_time, np.where(df.microtransit_local_egress_available, df.microtransit_local_egress_time, 2*df.dest_local_time)) * df.time_factor",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_wait_egress_time_(at_attraction_end),TNC_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available, 2*nevWaitTime, np.where(df.microtransit_local_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_Walk_other_time,TNC_LOC - Walk other time,@(odt_skims['TNCOUT_LOC_XFERWALK'] + dot_skims['TNCIN_LOC_XFERWALK']) *df.time_factor,,,,,,,,,,,,,,,coef_xwalk,,,,,,,,
util_TNC_LOC_Fare_and_operating_cost,TNC_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_LOC_FARE'] + dot_skims['TNCIN_LOC_FARE'])*100*df.num_participants/df.cost_sensitivity",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC - Age 16 to 24,TNC_LOC - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,,,,coef_age1624_tran,,,,,,,,
util_TNC_LOC - Age 41 to 55,TNC_LOC - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,,,,coef_age4155_tran,,,,,,,,
util_TNC_LOC - Age 56 to 64,TNC_LOC - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,,,,coef_age5664_tran,,,,,,,,
util_TNC_LOC - Age 65+,TNC_LOC - Age 65+,@(df.age > 64),,,,,,,,,,,,,,,coef_age65pl_tran,,,,,,,,
util_TNC_LOC - Female,TNC_LOC - Female,@(df.female),,,,,,,,,,,,,,,coef_female_tran,,,,,,,,
util_TNC_LOC - Destination Employment Density,TNC_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,
#,TNC_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_PRM_Unavailable,TNC_PRM - Unavailable,"@(df.tnc_premium_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,,,,,-999,,,,,,,
util_TNC_PRM_Unavailable_for_persons_less_than_16,TNC_PRM - Unavailable for persons less than 12,@df.age < 12,,,,,,,,,,,,,,,,-999,,,,,,,
util_TNC_PRM_In_vehicle_time,TNC_PRM - In-vehicle time,@(odt_skims['TNCOUT_PRM_TOTALIVTT'] + dot_skims['TNCIN_PRM_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_LRT,TNC_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCOUT_PRM_LRTIVTT'] + dot_skims['TNCIN_PRM_LRTIVTT'])*df.time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_CMR,TNC_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCOUT_PRM_CMRIVTT'] + dot_skims['TNCIN_PRM_CMRIVTT']) *df.time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_LTD_EXP,TNC_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCOUT_PRM_LTDEXPIVTT'] + dot_skims['TNCIN_PRM_LTDEXPIVTT'] + odt_skims['TNCOUT_PRM_EXPIVTT'] + dot_skims['TNCIN_PRM_EXPIVTT'])*df.time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_URB,TNC_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCOUT_PRM_BRTIVTT'] + dot_skims['TNCIN_PRM_BRTIVTT'])*df.time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_FIRST_iwait_time,TNC_PRM - First iwait time,"@(odt_skims['TNCOUT_PRM_FIRSTWAIT'] + dot_skims['TNCIN_PRM_FIRSTWAIT']) *df.time_factor * np.where((odt_skims['TNCOUT_PRM_BRTIVTT'] + dot_skims['TNCIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_transfer_wait_time,TNC_PRM - transfer wait time,"@(odt_skims['TNCOUT_PRM_XFERWAIT'] + dot_skims['TNCIN_PRM_XFERWAIT'])*df.time_factor * np.where((odt_skims['TNCOUT_PRM_BRTIVTT'] + dot_skims['TNCIN_PRM_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_xwait,,,,,,,
util_TNC_PRM_number_of_transfers,TNC_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_PRM_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['TNCIN_PRM_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,,,,,coef_xferdrive,,,,,,,
util_TNC_PRM_TNC_time,TNC_PRM - TNC time,"@np.where(df.nev_prm_access_available, df.nev_prm_access_time, np.where(df.microtransit_prm_access_available, df.microtransit_prm_access_time, odt_skims['TNCOUT_PRM_ACC'] + dot_skims['TNCIN_PRM_EGR'])) *df.time_factor",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNC_PRM_TNC_wait_time,TNC_PRM - TNC wait time,"@np.where(df.nev_prm_access_available, 2*nevWaitTime, np.where(df.microtransit_prm_access_available, 2*microtransitWaitTime, 2*df.origSingleTNCWaitTime)) *df.time_factor",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_TNC_fare,TNC_PRM - TNC fare,"@(~df.nev_prm_access_available) * (~df.microtransit_prm_access_available) * ((np.maximum(TNC_single_baseFare*2 + ((odt_skims['TNCOUT_PRM_ACC'] + dot_skims['TNCIN_PRM_EGR'])/60 * driveSpeed) * TNC_single_costPerMile + (odt_skims['TNCOUT_PRM_ACC'] + dot_skims['TNCIN_PRM_EGR']) * TNC_single_costPerMinute, TNC_single_costMinimum*2)*100)/df.cost_sensitivity)",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNC_PRM_Walk_egress_time_(at_attraction_end),TNC_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available, df.nev_prm_egress_time, np.where(df.microtransit_prm_egress_available, df.microtransit_prm_egress_time, 2*df.dest_prm_time)) * df.time_factor",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNC_PRM_wait_egress_time_(at_attraction_end),TNC_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available, 2*nevWaitTime, np.where(df.microtransit_prm_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_Walk_other_time,TNC_PRM - Walk other time,@ (odt_skims['TNCOUT_PRM_XFERWALK'] + dot_skims['TNCIN_PRM_XFERWALK']) *df.time_factor,,,,,,,,,,,,,,,,coef_xwalk,,,,,,,
util_TNC_PRM_Fare,TNC_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_PRM_FARE'] + dot_skims['TNCIN_PRM_FARE'])*100*df.num_participants/df.cost_sensitivity",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNC_PRM_ASC,TNC_PRM - Alternative-specific constant,(tnc_prm_out_asc + tnc_prm_inb_asc) * time_factor,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM - Age 16 to 24,TNC_PRM - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,,,,,coef_age1624_tran,,,,,,,
util_TNC_PRM - Age 41 to 55,TNC_PRM - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,,,,,coef_age4155_tran,,,,,,,
util_TNC_PRM - Age 56 to 64,TNC_PRM - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,,,,,coef_age5664_tran,,,,,,,
util_TNC_PRM - Age 65+,TNC_PRM - Age 65+,@(df.age > 64),,,,,,,,,,,,,,,,coef_age65pl_tran,,,,,,,
util_TNC_PRM - Female,TNC_PRM - Female,@(df.female),,,,,,,,,,,,,,,,coef_female_tran,,,,,,,
util_TNC_PRM - Destination Employment Density,TNC_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,
#,TNC_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_MIX_Unavailable,TNC_mix - Unavailable,"@(df.tnc_mix_available == False)|(df.get('num_escortees', 0)>0)",,,,,,,,,,,,,,,,,-999,,,,,,
util_TNC_PRM_Unavailable_for_persons_less_than_16,TNC_mix - Unavailable for persons less than 16,@df.age < 12,,,,,,,,,,,,,,,,,-999,,,,,,
util_TNC_MIX_In_vehicle_time,TNC_MIX - In-vehicle time,@(odt_skims['TNCOUT_MIX_TOTALIVTT'] + dot_skims['TNCIN_MIX_TOTALIVTT']) *df.time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_LRT,TNC_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCOUT_MIX_LRTIVTT'] + dot_skims['TNCIN_MIX_LRTIVTT']) *df.time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_CMR,TNC_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCOUT_MIX_CMRIVTT'] + dot_skims['TNCIN_MIX_CMRIVTT'])*df.time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_LTD_EXP,TNC_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCOUT_MIX_LTDEXPIVTT'] + dot_skims['TNCIN_MIX_LTDEXPIVTT'] + odt_skims['TNCOUT_MIX_EXPIVTT'] + dot_skims['TNCIN_MIX_EXPIVTT'])*df.time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_URB,TNC_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCOUT_MIX_BRTIVTT'] + dot_skims['TNCIN_MIX_BRTIVTT']) *df.time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_FIRST_iwait_time,TNC_MIX - First iwait time,"@(odt_skims['TNCOUT_MIX_FIRSTWAIT'] + dot_skims['TNCIN_MIX_FIRSTWAIT']) *df.time_factor * np.where((odt_skims['TNCOUT_MIX_BRTIVTT'] + dot_skims['TNCIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_transfer_wait_time,TNC_MIX - transfer wait time,"@(odt_skims['TNCOUT_MIX_XFERWAIT'] + dot_skims['TNCIN_MIX_XFERWAIT']) *df.time_factor * np.where((odt_skims['TNCOUT_MIX_BRTIVTT'] + dot_skims['TNCIN_MIX_BRTIVTT']) > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_xwait,,,,,,
util_TNC_MIX_number_of_transfers,TNC_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_MIX_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) + (-23+23*np.exp(0.414*np.clip(dot_skims['TNCIN_MIX_XFERS'] + df.mtnev_acc_xfer + df.mtnev_egr_xfer, a_min=None,a_max=4))) *df.time_factor",,,,,,,,,,,,,,,,,coef_xferdrive,,,,,,
util_TNC_MIX_TNC_time,TNC_MIX - TNC time,"@np.where(df.nev_mix_access_available, df.nev_mix_access_time, np.where(df.microtransit_mix_access_available, df.microtransit_mix_access_time, odt_skims['TNCOUT_MIX_ACC'] + dot_skims['TNCIN_MIX_EGR'])) *df.time_factor",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNC_MIX_TNC_wait_time,TNC_MIX - TNC wait time,"@np.where(df.nev_mix_access_available, 2*nevWaitTime, np.where(df.microtransit_mix_access_available, 2*microtransitWaitTime, 2*df.origSingleTNCWaitTime)) *df.time_factor",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_TNC_fare,TNC_MIX - TNC fare,"@(~df.nev_mix_access_available) * (~df.microtransit_mix_access_available) * ((np.maximum(TNC_single_baseFare*2 + ((odt_skims['TNCOUT_MIX_ACC'] + dot_skims['TNCIN_MIX_EGR'])/60 * driveSpeed) * TNC_single_costPerMile + (odt_skims['TNCOUT_MIX_ACC'] + dot_skims['TNCIN_MIX_EGR']) * TNC_single_costPerMinute, TNC_single_costMinimum*2)*100)/df.cost_sensitivity)",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNC_MIX_Walk_egress_time_(at_attraction_end),TNC_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available, df.nev_mix_egress_time, np.where(df.microtransit_mix_egress_available, df.microtransit_mix_egress_time, 2*df.dest_mix_time)) * df.time_factor",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNC_MIX_wait_egress_time_(at_attraction_end),TNC_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available, 2*nevWaitTime, np.where(df.microtransit_mix_egress_available, 2*microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_Walk_other_time,TNC_MIX - Walk other time,@(odt_skims['TNCOUT_MIX_XFERWALK'] + dot_skims['TNCIN_MIX_XFERWALK']) *df.time_factor,,,,,,,,,,,,,,,,,coef_xwalk,,,,,,
util_TNC_MIX_Fare,TNC_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_MIX_FARE'] + dot_skims['TNCIN_MIX_FARE'])*100*df.num_participants/df.cost_sensitivity",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNC_MIX_ASC,TNC_MIX - Alternative-specific constant,(tnc_mix_out_asc + tnc_mix_inb_asc) * time_factor,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX - Age 16 to 24,TNC_MIX - Age 16 to 24,@(df.age > 15) & (df.age < 25),,,,,,,,,,,,,,,,,coef_age1624_tran,,,,,,
util_TNC_MIX - Age 41 to 55,TNC_MIX - Age 41 to 55,@(df.age > 40) & (df.age < 56),,,,,,,,,,,,,,,,,coef_age4155_tran,,,,,,
util_TNC_MIX - Age 56 to 64,TNC_MIX - Age 56 to 64,@(df.age > 55) & (df.age < 65),,,,,,,,,,,,,,,,,coef_age5664_tran,,,,,,
util_TNC_MIX - Age 65+,TNC_MIX - Age 65+,@(df.age > 64),,,,,,,,,,,,,,,,,coef_age65pl_tran,,,,,,
util_TNC_MIX - Female,TNC_MIX - Female,@(df.female),,,,,,,,,,,,,,,,,coef_female_tran,,,,,,
util_TNC_MIX - Destination Employment Density,TNC_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,
#,Taxi,,,,,,,,,,,,,,,,,,,,,,,,
util_Taxi - In-vehicle time,Taxi - In-vehicle time,@(df.s2_time_skims_inb + df.s2_time_skims_out) * df.time_factor,,,,,,,,,,,,,,,,,,coef_ivt,,,,,
util_Taxi - Wait time,Taxi - Wait time,@df.totalWaitTaxi * df.time_factor,,,,,,,,,,,,,,,,,,coef_wait,,,,,
util_Taxi - Fare,Taxi - Fare,@(((Taxi_baseFare*2 + (df.s2_dist_skims_out + df.s2_dist_skims_inb) * Taxi_costPerMile + (df.s2_time_skims_out + df.s2_time_skims_inb) * Taxi_costPerMinute)*100 + df.s2_cost_skims_out + df.s2_cost_skims_inb))/df.cost_sensitivity,,,,,,,,,,,,,,,,,,coef_income,,,,,
#,TNC Single,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC Single - In-vehicle time,TNC Single - In-vehicle time,@(df.s2_time_skims_out + df.s2_time_skims_inb) * df.time_factor,,,,,,,,,,,,,,,,,,,coef_ivt,,,,
util_TNC Single - Wait time,TNC Single - Wait time,@df.totalWaitSingleTNC * df.time_factor,,,,,,,,,,,,,,,,,,,coef_wait,,,,
util_TNC Single - Cost,TNC Single - Cost,"@((np.maximum(TNC_single_baseFare*2 + (df.s2_dist_skims_out + df.s2_dist_skims_inb) * TNC_single_costPerMile + (df.s2_time_skims_out + df.s2_time_skims_inb) * TNC_single_costPerMinute, TNC_single_costMinimum*2)*100 + df.s2_cost_skims_out + df.s2_cost_skims_inb))/df.cost_sensitivity",,,,,,,,,,,,,,,,,,,coef_income,,,,
#,TNC Shared,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC Shared_switch,TNC Shared - switch turn-off (depends on data availability),@((~df.nev_available) & (~df.microtransit_available) & (scenarioYear==2022)),,,,,,,,,,,,,,,,,,,,-999,,,
util_TNC Shared - In-vehicle time,TNC Shared - In-vehicle time,"@(np.where(df.nev_available, df.nev_time, np.where(df.microtransit_available, df.microtransit_time, (df.s3_time_skims_out + df.s3_time_skims_inb)))) * TNC_shared_IVTFactor * df.time_factor",,,,,,,,,,,,,,,,,,,,coef_ivt,,,
util_TNC Shared - Wait time,TNC Shared - Wait time,"@np.where(df.nev_available, 2*nevWaitTime, np.where(df.microtransit_available, 2*microtransitWaitTime, df.totalWaitSharedTNC)) * df.time_factor",,,,,,,,,,,,,,,,,,,,coef_wait,,,
util_TNC Shared - Cost,TNC Shared - Cost,"@np.where(df.nev_available, 2*nevCost, np.where(df.microtransit_available, 2*microtransitCost, (np.maximum(TNC_shared_baseFare*2 + (df.s3_dist_skims_out + df.s3_dist_skims_inb) * TNC_shared_costPerMile + (df.s3_time_skims_out + df.s3_time_skims_inb)* TNC_shared_costPerMinute, TNC_shared_costMinimum*2)*100 + df.s3_cost_skims_out + df.s3_cost_skims_inb)))/df.cost_sensitivity",,,,,,,,,,,,,,,,,,,,coef_income,,,
#,School bus,,,,,,,,,,,,,,,,,,,,,,,,
util_School Bus - Unavailable,School Bus - Unavailable,SCHBUS_available==0,,,,,,,,,,,,,,,,,,,,,-999,,
util_School Bus - In-vehicle Time at 20 miles per hour,School Bus - In-vehicle Time at 20 miles per hour,(da_dist_skims_out + da_dist_skims_inb)*3 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_ivt,,
util_School Bus - Wait Time (asserted),School Bus - Wait Time (asserted) * c_fwt,10 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_wait,,
util_School Bus - Walk Time (asserted),School Bus - Walk Time (asserted),10 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_acctime,,
util_School Bus - Age 1 to 5,School Bus - Age 1 to 5,@(df.age > 0) & (df.age < 6),,,,,,,,,,,,,,,,,,,,,coef_age0105_schb,,
util_School Bus - Age 6 to 12,School Bus - Age 6 to 12,@(df.age > 5) & (df.age < 13),,,,,,,,,,,,,,,,,,,,,coef_age0612_schb,,
util_School Bus - Age 13 to 15,School Bus - Age 13 to 15,@(df.age > 12) & (df.age < 16),,,,,,,,,,,,,,,,,,,,,coef_age1315_schb,,
util_School Bus - Female,School Bus - Female,@(df.female),,,,,,,,,,,,,,,,,,,,,coef_female_schb,,
#calibration,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_KNR Transit - Distance Parameter,abm2+ calibration constant,"@np.maximum((10-df.da_dist_skims_out),0)",,,,,,,,,,,,coef_calib_distance_KNR_TRANSIT,coef_calib_distance_KNR_TRANSIT,coef_calib_distance_KNR_TRANSIT,coef_calib_distance_TNC_TRANSIT,coef_calib_distance_TNC_TRANSIT,coef_calib_distance_TNC_TRANSIT,,,,,,
util_calib_Walk-Transit - Distance Parameter,abm2+ calibration constant,"@np.maximum((200+(-133*df.da_dist_skims_out)),0)",,,,,,coef_calib_distance_WALK_TRANSIT,coef_calib_distance_WALK_TRANSIT,coef_calib_distance_WALK_TRANSIT,,,,,,,,,,,,,,,
util_calib_PNR Transit - Distance Parameter ,abm2+ calibration constant,"@np.maximum((45+(-2.5*df.da_dist_skims_out)),0)",,,,,,,,,coef_calib_distance_PNR_TRANSIT,coef_calib_distance_PNR_TRANSIT,coef_calib_distance_PNR_TRANSIT,,,,,,,,,,,,
util_calib_parkingdistrict,abm2+ calibration constant,parkingConstrainedArea==1,,,,,,coef_calib_parkingconst_WLK_TRANSIT,coef_calib_parkingconst_WLK_TRANSIT,coef_calib_parkingconst_WLK_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,coef_calib_parkingconst_DRV_TRANSIT,,,,,,
util_calib_probikedistrict,abm2+ calibration constant,(district27==8) | (district27==9),,,,,coef_calib_probikedistrict_BIKE,,,,,,,,,,,,,,,,,,
#util_calib_zeroautohh,abm2+ calibration constant,@(df.auto_ownership == 0),coef_calib_zeroautohh_DRIVEALONE,coef_calib_zeroautohh_SHARED2,coef_calib_zeroautohh_SHARED3,coef_calib_zeroautohh_WALK,coef_calib_zeroautohh_BIKE,coef_calib_zeroautohh_WALK_TRANSIT,coef_calib_zeroautohh_WALK_TRANSIT,coef_calib_zeroautohh_WALK_TRANSIT,coef_calib_zeroautohh_PNR_TRANSIT,coef_calib_zeroautohh_PNR_TRANSIT,coef_calib_zeroautohh_PNR_TRANSIT,coef_calib_zeroautohh_KNR_TRANSIT,coef_calib_zeroautohh_KNR_TRANSIT,coef_calib_zeroautohh_KNR_TRANSIT,coef_calib_zeroautohh_TNC_TRANSIT,coef_calib_zeroautohh_TNC_TRANSIT,coef_calib_zeroautohh_TNC_TRANSIT,coef_calib_zeroautohh_TAXI,coef_calib_zeroautohh_TNC_SINGLE,coef_calib_zeroautohh_TNC_SHARED,coef_calib_zeroautohh_SCH_BUS,,
#util_calib_autodeficienthh,abm2+ calibration constant,@((df.auto_ownership < df.num_adults) & (df.auto_ownership > 0)),,coef_calib_autodeficienthh_SHARED2,coef_calib_autodeficienthh_SHARED3,coef_calib_autodeficienthh_WALK,coef_calib_autodeficienthh_BIKE,coef_calib_autodeficienthh_WALK_TRANSIT,coef_calib_autodeficienthh_WALK_TRANSIT,coef_calib_autodeficienthh_WALK_TRANSIT,coef_calib_autodeficienthh_PNR_TRANSIT,coef_calib_autodeficienthh_PNR_TRANSIT,coef_calib_autodeficienthh_PNR_TRANSIT,coef_calib_autodeficienthh_KNR_TRANSIT,coef_calib_autodeficienthh_KNR_TRANSIT,coef_calib_autodeficienthh_KNR_TRANSIT,coef_calib_autodeficienthh_TNC_TRANSIT,coef_calib_autodeficienthh_TNC_TRANSIT,coef_calib_autodeficienthh_TNC_TRANSIT,coef_calib_autodeficienthh_TAXI,coef_calib_autodeficienthh_TNC_SINGLE,coef_calib_autodeficienthh_TNC_SHARED,coef_calib_autodeficienthh_SCH_BUS,,
#util_calib_autosufficienth,abm2+ calibration constant,@((df.auto_ownership >= df.num_adults) & (df.auto_ownership > 0)),,coef_calib_autosufficienthh_SHARED2,coef_calib_autosufficienthh_SHARED3,coef_calib_autosufficienthh_WALK,coef_calib_autosufficienthh_BIKE,coef_calib_autosufficienthh_WALK_TRANSIT,coef_calib_autosufficienthh_WALK_TRANSIT,coef_calib_autosufficienthh_WALK_TRANSIT,coef_calib_autosufficienthh_PNR_TRANSIT,coef_calib_autosufficienthh_PNR_TRANSIT,coef_calib_autosufficienthh_PNR_TRANSIT,coef_calib_autosufficienthh_KNR_TRANSIT,coef_calib_autosufficienthh_KNR_TRANSIT,coef_calib_autosufficienthh_KNR_TRANSIT,coef_calib_autosufficienthh_TNC_TRANSIT,coef_calib_autosufficienthh_TNC_TRANSIT,coef_calib_autosufficienthh_TNC_TRANSIT,coef_calib_autosufficienthh_TAXI,coef_calib_autosufficienthh_TNC_SINGLE,coef_calib_autosufficienthh_TNC_SHARED,coef_calib_autosufficienthh_SCH_BUS,,
util_calib_zeroautohhindiv,abm2+ calibration constant,@(df.is_indiv & (df.auto_ownership == 0)),,coef_calib_zeroautohhindivtou_SHARED2,coef_calib_zeroautohhindivtou_SHARED3,coef_calib_zeroautohhindivtou_WALK,coef_calib_zeroautohhindivtou_BIKE,coef_calib_zeroautohhindivtou_WALK_TRANSIT,coef_calib_zeroautohhindivtou_WALK_TRANSIT,coef_calib_zeroautohhindivtou_WALK_TRANSIT,coef_calib_zeroautohhindivtou_PNR_TRANSIT,coef_calib_zeroautohhindivtou_PNR_TRANSIT,coef_calib_zeroautohhindivtou_PNR_TRANSIT,coef_calib_zeroautohhindivtou_KNR_TRANSIT,coef_calib_zeroautohhindivtou_KNR_TRANSIT,coef_calib_zeroautohhindivtou_KNR_TRANSIT,coef_calib_zeroautohhindivtou_TNC_TRANSIT,coef_calib_zeroautohhindivtou_TNC_TRANSIT,coef_calib_zeroautohhindivtou_TNC_TRANSIT,coef_calib_zeroautohhindivtou_TAXI,coef_calib_zeroautohhindivtou_TNC_SINGLE,coef_calib_zeroautohhindivtou_TNC_SHARED,coef_calib_zeroautohhindivtou_SCH_BUS,coef_calib_zeroautohhindivtou_EBIKE,coef_calib_zeroautohhindivtou_ESCOOTER
util_calib_autodeficienthh,abm2+ calibration constant,@(df.is_indiv & (df.auto_ownership < df.num_adults) & (df.auto_ownership > 0)),,coef_calib_autodeficienthhind_SHARED2,coef_calib_autodeficienthhind_SHARED3,coef_calib_autodeficienthhind_WALK,coef_calib_autodeficienthhind_BIKE,coef_calib_autodeficienthhind_WALK_TRANSIT,coef_calib_autodeficienthhind_WALK_TRANSIT,coef_calib_autodeficienthhind_WALK_TRANSIT,coef_calib_autodeficienthhind_PNR_TRANSIT,coef_calib_autodeficienthhind_PNR_TRANSIT,coef_calib_autodeficienthhind_PNR_TRANSIT,coef_calib_autodeficienthhind_KNR_TRANSIT,coef_calib_autodeficienthhind_KNR_TRANSIT,coef_calib_autodeficienthhind_KNR_TRANSIT,coef_calib_autodeficienthhind_TNC_TRANSIT,coef_calib_autodeficienthhind_TNC_TRANSIT,coef_calib_autodeficienthhind_TNC_TRANSIT,coef_calib_autodeficienthhind_TAXI,coef_calib_autodeficienthhind_TNC_SINGLE,coef_calib_autodeficienthhind_TNC_SHARED,coef_calib_autodeficienthhind_SCH_BUS,coef_calib_autodeficienthhind_EBIKE,coef_calib_autodeficienthhind_ESCOOTER
util_calib_autosufficienth,abm2+ calibration constant,@(df.is_indiv & (df.auto_ownership >= df.num_adults) & (df.auto_ownership > 0)),,coef_calib_autosufficienthhin_SHARED2,coef_calib_autosufficienthhin_SHARED3,coef_calib_autosufficienthhin_WALK,coef_calib_autosufficienthhin_BIKE,coef_calib_autosufficienthhin_WALK_TRANSIT,coef_calib_autosufficienthhin_WALK_TRANSIT,coef_calib_autosufficienthhin_WALK_TRANSIT,coef_calib_autosufficienthhin_PNR_TRANSIT,coef_calib_autosufficienthhin_PNR_TRANSIT,coef_calib_autosufficienthhin_PNR_TRANSIT,coef_calib_autosufficienthhin_KNR_TRANSIT,coef_calib_autosufficienthhin_KNR_TRANSIT,coef_calib_autosufficienthhin_KNR_TRANSIT,coef_calib_autosufficienthhin_TNC_TRANSIT,coef_calib_autosufficienthhin_TNC_TRANSIT,coef_calib_autosufficienthhin_TNC_TRANSIT,coef_calib_autosufficienthhin_TAXI,coef_calib_autosufficienthhin_TNC_SINGLE,coef_calib_autosufficienthhin_TNC_SHARED,coef_calib_autosufficienthhin_SCH_BUS,coef_calib_autosufficienthhin_EBIKE,coef_calib_autosufficienthhin_ESCOOTER
util_calib_zeroautohhjoint,abm2+ calibration constant,@(df.is_joint & (df.auto_ownership == 0)),,,coef_calib_zeroautohhjointtou_SHARED3,coef_calib_zeroautohhjointtou_WALK,coef_calib_zeroautohhjointtou_BIKE,coef_calib_zeroautohhjointtou_WALK_TRANSIT,coef_calib_zeroautohhjointtou_WALK_TRANSIT,coef_calib_zeroautohhjointtou_WALK_TRANSIT,coef_calib_zeroautohhjointtou_PNR_TRANSIT,coef_calib_zeroautohhjointtou_PNR_TRANSIT,coef_calib_zeroautohhjointtou_PNR_TRANSIT,coef_calib_zeroautohhjointtou_KNR_TRANSIT,coef_calib_zeroautohhjointtou_KNR_TRANSIT,coef_calib_zeroautohhjointtou_KNR_TRANSIT,coef_calib_zeroautohhjointtou_TNC_TRANSIT,coef_calib_zeroautohhjointtou_TNC_TRANSIT,coef_calib_zeroautohhjointtou_TNC_TRANSIT,coef_calib_zeroautohhjointtou_TAXI,coef_calib_zeroautohhjointtou_TNC_SINGLE,coef_calib_zeroautohhjointtou_TNC_SHARED,,coef_calib_zeroautohhjointtou_EBIKE,coef_calib_zeroautohhjointtou_ESCOOTER
util_calib_autodeficienthh,abm2+ calibration constant,@(df.is_joint & (df.auto_ownership < df.num_adults) & (df.auto_ownership > 0)),,,coef_calib_autodeficienthhjoi_SHARED3,coef_calib_autodeficienthhjoi_WALK,coef_calib_autodeficienthhjoi_BIKE,coef_calib_autodeficienthhjoi_WALK_TRANSIT,coef_calib_autodeficienthhjoi_WALK_TRANSIT,coef_calib_autodeficienthhjoi_WALK_TRANSIT,coef_calib_autodeficienthhjoi_PNR_TRANSIT,coef_calib_autodeficienthhjoi_PNR_TRANSIT,coef_calib_autodeficienthhjoi_PNR_TRANSIT,coef_calib_autodeficienthhjoi_KNR_TRANSIT,coef_calib_autodeficienthhjoi_KNR_TRANSIT,coef_calib_autodeficienthhjoi_KNR_TRANSIT,coef_calib_autodeficienthhjoi_TNC_TRANSIT,coef_calib_autodeficienthhjoi_TNC_TRANSIT,coef_calib_autodeficienthhjoi_TNC_TRANSIT,coef_calib_autodeficienthhjoi_TAXI,coef_calib_autodeficienthhjoi_TNC_SINGLE,coef_calib_autodeficienthhjoi_TNC_SHARED,,coef_calib_autodeficienthhjoi_EBIKE,coef_calib_autodeficienthhjoi_ESCOOTER
util_calib_autosufficienth,abm2+ calibration constant,@(df.is_joint & (df.auto_ownership >= df.num_adults) & (df.auto_ownership > 0)),,,coef_calib_autosufficienthhjo_SHARED3,coef_calib_autosufficienthhjo_WALK,coef_calib_autosufficienthhjo_BIKE,coef_calib_autosufficienthhjo_WALK_TRANSIT,coef_calib_autosufficienthhjo_WALK_TRANSIT,coef_calib_autosufficienthhjo_WALK_TRANSIT,coef_calib_autosufficienthhjo_PNR_TRANSIT,coef_calib_autosufficienthhjo_PNR_TRANSIT,coef_calib_autosufficienthhjo_PNR_TRANSIT,coef_calib_autosufficienthhjo_KNR_TRANSIT,coef_calib_autosufficienthhjo_KNR_TRANSIT,coef_calib_autosufficienthhjo_KNR_TRANSIT,coef_calib_autosufficienthhjo_TNC_TRANSIT,coef_calib_autosufficienthhjo_TNC_TRANSIT,coef_calib_autosufficienthhjo_TNC_TRANSIT,coef_calib_autosufficienthhjo_TAXI,coef_calib_autosufficienthhjo_TNC_SINGLE,coef_calib_autosufficienthhjo_TNC_SHARED,,coef_calib_autosufficienthhjo_EBIKE,coef_calib_autosufficienthhjo_ESCOOTER
#util_calib_c_ivtebikeowner,abm2+ calibration constant,time_factor*(ebikeOwnership*(maxEbikeBenefit*(-1))),,,,,coef_calib_civtebikeownership_BIKE,,,,,,,,,,,,,,,,,,
util_calib_escorttour,abm2+ calibration constant,tour_type == 'escort',,,,coef_calib_escorttour_WALK,coef_calib_escorttour_BIKE,coef_calib_escorttour_WALK_TRANSIT,coef_calib_escorttour_WALK_TRANSIT,coef_calib_escorttour_WALK_TRANSIT,coef_calib_escorttour_PNR_TRANSIT,coef_calib_escorttour_PNR_TRANSIT,coef_calib_escorttour_PNR_TRANSIT,coef_calib_escorttour_KNR_TRANSIT,coef_calib_escorttour_KNR_TRANSIT,coef_calib_escorttour_KNR_TRANSIT,coef_calib_escorttour_TNC_TRANSIT,coef_calib_escorttour_TNC_TRANSIT,coef_calib_escorttour_TNC_TRANSIT,,,,,,
#, School Escorting eligibility-odd looking where/isnan is to allow this to work with numba fastmath,,,,,,,,,,,,,,,,,,,,,,,,
util_one_or_more_school_escort,No SOV if on school escort tour,"@(np.where(np.isnan(df.get('num_escortees', 0)), 0 , df.get('num_escortees', 0)) >= 1)",-999,,,,,,,,,,,,,,,,,,,,,,
util_two_or_more_school_escort,Can't take HOV2 if taking two children and yourself,"@(np.where(np.isnan(df.get('num_escortees', 0)), 0 , df.get('num_escortees', 0)) >= 2)",,-999,,,,,,,,,,,,,,,,,,,,,
#,Micromobility (e-scooter/e-bike),,,,,,,,,,,,,,,,,,,,,,,,
util_micromobility_long_access,Shut off micromobility if access time > threshold,"@((df.micro_access_out > microAccessThreshold) | (df.micro_access_inb > microAccessThreshold)|(df.get('num_escortees', 0)>0))",,,,,,,,,,,,,,,,,,,,,,-999,-999
util_micromobility_long_trip,Shut off ebike if distance > threshold,ebikeMaxDistance,,,,,,,,,,,,,,,,,,,,,,-999,
util_micromobility_long_trip,Shut off escooter if distance > threshold,escooterMaxDistance,,,,,,,,,,,,,,,,,,,,,,,-999
util_ebike_ivt,Ebike utility for in-vehicle time,@(df.ebike_time_inb + df.ebike_time_out)*df.time_factor,,,,,,,,,,,,,,,,,,,,,,coef_ivt,
util_ebike_access,Ebike utility for access/egress time,"@(microConstant + np.where(df.ebike_owner, 0, microRentTime + df.micro_access_inb + df.micro_access_out))*df.time_factor",,,,,,,,,,,,,,,,,,,,,,coef_acctime,
util_ebike_cost_inb,Ebike utility for inbound cost,@((~df.ebike_owner)&((microFixedCost + microVarCost*df.ebike_time_inb)/df.cost_sensitivity)),,,,,,,,,,,,,,,,,,,,,,coef_income,
util_ebike_cost_out,Ebike utility for outbound cost,@((~df.ebike_owner)&((microFixedCost + microVarCost*df.ebike_time_out)/df.cost_sensitivity)),,,,,,,,,,,,,,,,,,,,,,coef_income,
util_escooter_ivt,escooter utility for in-vehicle time,@(df.escooter_time_inb + df.escooter_time_out)*df.time_factor,,,,,,,,,,,,,,,,,,,,,,,coef_ivt
util_escooter_access,escooter utility for in-vehicle time,@(microConstant + microRentTime + df.micro_access_inb + df.micro_access_out)*df.time_factor,,,,,,,,,,,,,,,,,,,,,,,coef_acctime
util_escooter_cost_inb,escooter utility for inbound cost,@((microFixedCost + microVarCost*df.escooter_time_inb)/df.cost_sensitivity),,,,,,,,,,,,,,,,,,,,,,,coef_income
util_escooter_cost_out,escooter utility for outbound cost,@((microFixedCost + microVarCost*df.escooter_time_out)/df.cost_sensitivity),,,,,,,,,,,,,,,,,,,,,,,coef_income
#,Calibration from on-board survey
util_calib_onboard,Calibration coefficient to match implied number of tours from on-board survey,1,,,,,,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,coef_calib_onboard,,,,,,