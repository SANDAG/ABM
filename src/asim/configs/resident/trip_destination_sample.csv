Description,Expression,work,univ,school,escort,shopping,eatout,othmaint,social,othdiscr,atwork
,_od_DIST@od_skims['DIST'],1,1,1,1,1,1,1,1,1,1
,_dp_DIST@dp_skims['DIST'],1,1,1,1,1,1,1,1,1,1
,_op_DIST@op_skims['DIST'],1,1,1,1,1,1,1,1,1,1
,_od_bikeL@od_skims['BIKE_LOGSUM'],1,1,1,1,1,1,1,1,1,1
,_dp_bikeL@dp_skims['BIKE_LOGSUM'],1,1,1,1,1,1,1,1,1,1
# next line gets max MAZ micromobility access time in destination TAZ
,"_d_microAccTime@land_use.sort_values(by='MicroAccessTime',ascending=False).drop_duplicates('TAZ',keep='first').set_index('TAZ')['MicroAccessTime'].reindex(df.dest_taz)",1,1,1,1,1,1,1,1,1,1
#,,,,,,,,,,,
size term,"@np.log1p(size_terms.get(df.dest_taz, df.purpose))",1,1,1,1,1,1,1,1,1,1
no attractions,"@size_terms.get(df.dest_taz, df.purpose) == 0",-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
#,,,,,,,,,,,
,"@df.walkTour * (np.where(_od_DIST > df.max_walk_distance,1,0) + np.where(_dp_DIST > df.max_walk_distance,1,0))",-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
,@df.walkTour * (_od_DIST  +  _dp_DIST),-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5
#,,,,,,,,,,,
,"@df.bikeTour * (np.where(_od_DIST > df.max_bike_distance,1,0) +  np.where(_dp_DIST > df.max_bike_distance,1,0))",-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
,@df.bikeTour * (_od_DIST  +  _dp_DIST - _op_DIST),-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05
,@df.bikeTour *  (_od_bikeL < -300),-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
,@df.bikeTour * (_dp_bikeL < -300),-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
#,,,,,,,,,,,
,@(df.nonmotorTour==0) * (_od_DIST  +  _dp_DIST - _op_DIST),-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05,-0.05
,"@(df.microTour * (np.where(_d_microAccTime > df.microAccessThreshold,1,0) + np.where(df.o_MicroAccessTime > df.microAccessThreshold,1,0)))",-10,-10,-10,-10,-10,-10,-10,-10,-10,-10
