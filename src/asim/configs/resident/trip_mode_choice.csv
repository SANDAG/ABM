Label,Description,Expression,DRIVEALONE,SHARED2,SHARED3,WALK,BIKE,WALK_LOC,WALK_PRM,WALK_MIX,PNR_LOC,PNR_PRM,PNR_MIX,KNR_LOC,KNR_PRM,KNR_MIX,TNC_LOC,TNC_PRM,TNC_MIX,TAXI,TNC_SINGLE,TNC_SHARED,SCH_BUS,EBIKE,ESCOOTER
#,Drive alone,,,,,,,,,,,,,,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable,Drive alone - Unavailable,sov_available == False,-999,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - In-vehicle time,Drive alone - In-vehicle time,(da_time_skims) * autoIVTFactor * time_factor,coef_ivt,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - reliability ,Drive alone - reliability,"@df.da_rel_skims/np.maximum(df.da_dist_skims,0.1)  * df.time_factor",coef_rel,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - cost,Drive alone - cost,"@(df.auto_op_cost * df.autoCPMFactor * df.da_dist_skims + df.da_cost_skims)/(np.maximum(df.income,1000)**df.income_exponent)",coef_income,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - Parking cost ,Drive alone - Parking cost ,"@(df.parkingCost * df.autoParkingCostFactor)/(np.maximum(df.income,1000)**df.income_exponent)",coef_income,,,,,,,,,,,,,,,,,,,,,,
util_Drive alone - Terminal Time,Drive alone - Terminal Time,(oTermTime + dTermTime) * autoTermTimeFactor * time_factor,coef_acctime,,,,,,,,,,,,,,,,,,,,,,
#,Shared ride2,,,,,,,,,,,,,,,,,,,,,,,,
util_sr2_available,sr2 available,sr2_available == False,,-999,,,,,,,,,,,,,,,,,,,,,
util_sr2_tourbike_disadvantage,sr2 tourbike disadvantage,tourBike,,-30,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - In -vehicle time,Shared ride 2 - In -vehicle time,(s2_time_skims) * autoIVTFactor * time_factor,,coef_ivt,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - reliability,Shared ride 2 - reliability,"@df.s2_rel_skims/np.maximum(df.s2_dist_skims,0.1)  * df.time_factor",,coef_rel,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 -  cost,Shared ride 2 -  cost,"@((df.auto_op_cost * df.autoCPMFactor * df.s2_dist_skims) + df.s2_cost_skims)/(np.maximum(df.income,1000)**df.income_exponent)",,coef_income,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - Parking cost ,Shared ride 2 - Parking cost ,"@(df.parkingCost * df.autoParkingCostFactor * np.where(df.is_joint,1,df.costFactorS2))/(np.maximum(df.income,1000)**df.income_exponent)",,coef_income,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2  Terminal Time - acc,Shared ride 2 - Terminal Time ,(oTermTime + dTermTime) * autoTermTimeFactor * time_factor,,coef_acctime,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 _Two_person_household,Shared ride 2 - Two person household,@(df.hhsize == 2),,coef_size2_sr2,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 _Three_person_household,Shared ride 2 - Three person household,@(df.hhsize == 3),,coef_size3_sr2,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 _Four+_person_household,Shared ride 2 - Four plus person household,@(df.hhsize > 3),,coef_size4p_sr2,,,,,,,,,,,,,,,,,,,,,
util_Shared ride 2 - Female,Shared ride 2 - female,@(df.female == 1),,coef_female_sr2,,,,,,,,,,,,,,,,,,,,,
#,Shared ride 3,,,,,,,,,,,,,,,,,,,,,,,,
util_sr3_available,sr3 available,sr3_available == False,,,-999,,,,,,,,,,,,,,,,,,,,
util_sr3_tourbike_disadvantage,sr3 tourbike disadvantage,tourBike,,,-30,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - In -vehicle time,Shared ride 3 - In -vehicle time,(s3_time_skims) * autoIVTFactor * time_factor,,,coef_ivt,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - reliability,Shared ride 3 - reliability,"@df.s3_rel_skims/np.maximum(df.s3_dist_skims, 0.1)  * df.time_factor",,,coef_rel,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 -  cost ,Shared ride 3 -  cost,"@(df.auto_op_cost * df.s3_dist_skims * df.autoCPMFactor + df.s3_cost_skims)/(np.maximum(df.income,1000)**df.income_exponent)",,,coef_income,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Parking cost ,Shared ride 3 - Parking cost ,"@(df.parkingCost * df.autoParkingCostFactor * np.where(df.is_joint,1,df.costFactorS3))/(np.maximum(df.income,1000)**df.income_exponent)",,,coef_income,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Terminal Time,Shared ride 3 - Terminal Time,(oTermTime + dTermTime) * autoTermTimeFactor * time_factor,,,coef_acctime,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Two_person_household,Shared ride 3 - Two person household,@(df.hhsize == 2),,,coef_size2_sr3p,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Three_person_household,Shared ride 3 - Three person household,@(df.hhsize == 3),,,coef_size3_sr3p,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Four+_person_household,Shared ride 3 - Four plus person household,@(df.hhsize > 3),,,coef_size4p_sr3p,,,,,,,,,,,,,,,,,,,,
util_Shared ride 3 - Female,Shared ride 3 - female,@(df.female == 1),,,coef_female_sr3p,,,,,,,,,,,,,,,,,,,,
#,Walk,,,,,,,,,,,,,,,,,,,,,,,,
#,school escorting can force longer walk trips so not turning off completely if walk tour,,,,,,,,,,,,,,,,,,,,,,,,
util_Walk - Unavailable,Walk - Unavailable,(walkAvailable == 0) & (tourWalk == 0),,,,-999,,,,,,,,,,,,,,,,,,,
util_Walk - Unavailable - walkTour,Walk - Unavailable - Walk Tour,(walkAvailable == 0) & (tourWalk == 1),,,,-20,,,,,,,,,,,,,,,,,,,
util_Walk - Female,Walk - Female,@df.female,,,,coef_female_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - time,Walk - time - clipped for really long walk trips to avoid zero probs,@(df.walk_time_skims * df.time_factor).clip(upper=1000),,,,coef_walkTime,,,,,,,,,,,,,,,,,,,
util_Walk - Origin Mix,Walk - Origin Mix,oMGRAMix,,,,coef_oMix_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - Origin Intersection Density,Walk - Origin Intersection Density,oMGRATotInt,,,,coef_oIntDen_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - Destination Employment Density,Walk - Destination Employment Density,dMGRAEmpDen,,,,coef_dEmpDen_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - Age 1-5 (school only),Walk - Age 1-6,"@df.age.between(1,5)",,,,coef_age1to5_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - Age 6-12 (school only),Walk - Age 6-13,"@df.age.between(6,12)",,,,coef_age6to12_nmot,,,,,,,,,,,,,,,,,,,
util_Walk - Age 13-15 (school only),Walk - Age 13-16,"@df.age.between(13,15)",,,,coef_age13to15_nmot,,,,,,,,,,,,,,,,,,,
#,Bike,,,,,,,,,,,,,,,,,,,,,,,,
util_BIKE_Mode unavailable,Bike - Mode unavailable unless on bike tour,@(df.tourBike == 0)|(od_skims['BIKE_TIME']<=0),,,,,-999,,,,,,,,,,,,,,,,,,
util_BIKE_Female - bike,Bike - Female,@df.female,,,,,coef_female_nmot,,,,,,,,,,,,,,,,,,
util_BIKE_Bike - logsum,Bike - logsum clipped to allow for long bike trips on school escort tours,@df.bikeLS.clip(lower=-100),,,,,coef_bikeLogsum,,,,,,,,,,,,,,,,,,
#,WalktoTransit,,,,,,,,,,,,,,,,,,,,,,,,
util_WalkTransit_Unavailable,WalkTransit_Available,walk_local_available == False,,,,,,-999,,,,,,,,,,,,,,,,,
util_WALKLOC__In_vehicle_time,WALK_LOC - In-vehicle time,@(odt_skims['WALK_LOC_TOTALIVTT']) * df.time_factor,,,,,,coef_ivt,,,,,,,,,,,,,,,,,
util_WALK_LOC_iwait_time,WALK_LOC - wait time,@(odt_skims['WALK_LOC_FIRSTWAIT']) * df.time_factor,,,,,,coef_wait,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfer_wait_time,WALK_LOC - transfer wait time,@(odt_skims['WALK_LOC_XFERWAIT'])* df.time_factor,,,,,,coef_xwait,,,,,,,,,,,,,,,,,
util_WALK_LOC_Walk_access_time,WALK_LOC - Walk access time,"@np.where(df.nev_local_access_available_in & ~df.outbound, df.nev_local_access_time_in, np.where(df.microtransit_local_access_available_in & ~df.outbound, df.microtransit_local_access_time_in, df.origin_local_time))* df.time_factor",,,,,,coef_acctime,,,,,,,,,,,,,,,,,
util_WALK_LOC_wait_access_time,WALK_LOC - Access mt/nev wait time,"@np.where(df.nev_local_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_local_access_available_in & ~df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,coef_wait,,,,,,,,,,,,,,,,,
util_WALK_LOC_Walk_egress_time,WALK_LOC - Walk egress time,"@np.where(df.nev_local_egress_available_out & df.outbound, df.nev_local_egress_time_out, np.where(df.microtransit_local_egress_available_out & df.outbound, df.microtransit_local_egress_time_out, df.dest_local_time))* df.time_factor",,,,,,coef_acctime,,,,,,,,,,,,,,,,,
util_WALK_LOC_wait_egress_time,WALK_LOC - Egress mt/nev wait time,"@np.where(df.nev_local_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_local_egress_available_out & df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,coef_wait,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfer_walk_time,WALK_LOC - transfer walk time,@(odt_skims['WALK_LOC_XFERWALK'])* df.time_factor,,,,,,coef_xwalk,,,,,,,,,,,,,,,,,
util_WALK_LOC_transfers_penalty,WALK_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_LOC_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor",,,,,,coef_xfer,,,,,,,,,,,,,,,,,
util_WALK_LOC_Fare,WALK_LOC - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['WALK_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,coef_income,,,,,,,,,,,,,,,,,
util_WALK_LOC - Female,WALK_LOC - Female,@(df.female),,,,,,coef_female_tran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Origin Mix,WALK_LOC - Origin Mix,oMGRAMix,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Origin Intersection Density,WALK_LOC - Origin Intersection Density,oMGRATotInt,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,,,
util_WALK_LOC - Destination Employment Density,WALK_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,,,
#,WALK_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_WalkTransit_Unavailable,WalkTransit_Available,walk_premium_available == False,,,,,,,-999,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time,WALK_PRM - In-vehicle time,@(odt_skims['WALK_PRM_TOTALIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_LRT,WALK_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_PRM_LRTIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_CMR,WALK_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_PRM_CMRIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_LTD_EXP,WALK_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_PRM_LTDEXPIVTT'] + odt_skims['WALK_PRM_EXPIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_In_vehicle_time_on_URB,WALK_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_PRM_BRTIVTT']) * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM_wait_time,WALK_PRM - wait time,"@(odt_skims['WALK_PRM_FIRSTWAIT']) * df.time_factor * np.where(odt_skims['WALK_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,coef_wait,,,,,,,,,,,,,,,,
util_WALK_PRM_transfer_wait_time,WALK_PRM - transfer wait time,"@(odt_skims['WALK_PRM_XFERWAIT'])* df.time_factor * np.where(odt_skims['WALK_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,coef_xwait,,,,,,,,,,,,,,,,
util_WALK_PRM_transfer_waLK_time,WALK_PRM - transfer walk time,@(odt_skims['WALK_PRM_XFERWALK'])* df.time_factor,,,,,,,coef_xwalk,,,,,,,,,,,,,,,,
util_WALK_PRM_transfers_penalty,WALK_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_PRM_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor",,,,,,,coef_xfer,,,,,,,,,,,,,,,,
util_WALK_PRM_Walk_access_time,WALK_PRM - Walk access time,"@np.where(df.nev_prm_access_available_in & ~df.outbound, df.nev_prm_access_time_in, np.where(df.microtransit_prm_access_available_in & ~df.outbound, df.microtransit_prm_access_time_in, df.origin_prm_time))* df.time_factor",,,,,,,coef_acctime,,,,,,,,,,,,,,,,
util_WALK_PRM_wait_access_time,WALK_PRM - Access mt/nev wait time,"@np.where(df.nev_prm_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_prm_access_available_in & ~df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,,coef_wait,,,,,,,,,,,,,,,,
util_WALK_PRM_Walk_egress_time,WALK_PRM - Walk egress time,"@np.where(df.nev_prm_egress_available_out & df.outbound, df.nev_prm_egress_time_out, np.where(df.microtransit_prm_egress_available_out & df.outbound, df.microtransit_prm_egress_time_out, df.dest_prm_time))* df.time_factor",,,,,,,coef_acctime,,,,,,,,,,,,,,,,
util_WALK_PRM_wait_egress_time,WALK_PRM - Egress mt/nev wait time,"@np.where(df.nev_prm_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_prm_egress_available_out & df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,,coef_wait,,,,,,,,,,,,,,,,
util_WALK_PRM_Fare,WALK_PRM - Fare,"@df.transitSubsidyPassDiscount*odt_skims['WALK_PRM_FARE']*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,coef_income,,,,,,,,,,,,,,,,
util_WALK_PRM_ASC,WALK_PRM - Alternative-specific constant,@df.wlk_prm_asc * df.time_factor,,,,,,,coef_ivt,,,,,,,,,,,,,,,,
util_WALK_PRM - Female,WALK_PRM - Female,@(df.female),,,,,,,coef_female_tran,,,,,,,,,,,,,,,,
util_WALK_PRM - Origin Mix,WALK_PRM - Origin Mix,oMGRAMix,,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,,
util_WALK_PRM - Origin Intersection Density,WALK_PRM - Origin Intersection Density,oMGRATotInt,,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,,
util_WALK_PRM - Destination Employment Density,WALK_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,,
#,WALK_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_WALK_MIX_Unavailable,WALK_MIX - Unavailable,walk_mix_available == False,,,,,,,,-999,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time,WALK_MIX - In-vehicle time,@(odt_skims['WALK_MIX_TOTALIVTT'])* df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_LRT,WALK_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_MIX_LRTIVTT'])* df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_CMR,WALK_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_MIX_CMRIVTT'])* df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_LTD_EXP,WALK_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_MIX_LTDEXPIVTT'] + odt_skims['WALK_MIX_EXPIVTT'])* df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_In_vehicle_time_on_URB,WALK_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_MIX_BRTIVTT'])* df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX_FIRST_wait_time,WALK_MIX - First wait time,"@(odt_skims['WALK_MIX_FIRSTWAIT'])* df.time_factor * np.where(odt_skims['WALK_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,coef_wait,,,,,,,,,,,,,,,
util_WALK_MIX_transfer_wait_time,WALK_MIX - transfer wait time,"@(odt_skims['WALK_MIX_XFERWAIT'])* df.time_factor * np.where(odt_skims['WALK_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,coef_xwait,,,,,,,,,,,,,,,
util_WALK_MIX_number_of_transfers,WALK_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_MIX_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor",,,,,,,,coef_xfer,,,,,,,,,,,,,,,
util_WALK_MIX_Walk_access_time,WALK_MIX - Walk access time,"@np.where(df.nev_mix_access_available_in & ~df.outbound, df.nev_mix_access_time_in, np.where(df.microtransit_mix_access_available_in & ~df.outbound, df.microtransit_mix_access_time_in, df.origin_mix_time))* df.time_factor",,,,,,,,coef_acctime,,,,,,,,,,,,,,,
util_WALK_MIX_wait_access_time,WALK_MIX - Access mt/nev wait time,"@np.where(df.nev_mix_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_mix_access_available_in & ~df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,,,coef_wait,,,,,,,,,,,,,,,
util_WALK_MIX_Walk_egress_time,WALK_MIX - Walk egress time,"@np.where(df.nev_mix_egress_available_out & df.outbound, df.nev_mix_egress_time_out, np.where(df.microtransit_mix_egress_available_out & df.outbound, df.microtransit_mix_egress_time_out, df.dest_mix_time))* df.time_factor",,,,,,,,coef_acctime,,,,,,,,,,,,,,,
util_WALK_MIX_wait_egress_time,WALK_MIX - Egress mt/nev wait time,"@np.where(df.nev_mix_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_mix_egress_available_out & df.outbound, microtransitWaitTime, 0))* df.time_factor",,,,,,,,coef_wait,,,,,,,,,,,,,,,
util_WALK_MIX_Walk_other_time,WALK_MIX - Walk other time,@(odt_skims['WALK_MIX_XFERWALK'])* df.time_factor,,,,,,,,coef_xwalk,,,,,,,,,,,,,,,
util_WALK_MIX_Fare,WALK_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['WALK_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,coef_income,,,,,,,,,,,,,,,
util_WALK_MIX_ASC,WALK_MIX - Alternative-specific constant,@df.wlk_mix_asc * df.time_factor,,,,,,,,coef_ivt,,,,,,,,,,,,,,,
util_WALK_MIX - Female,WALK_MIX - Female,@(df.female),,,,,,,,coef_female_tran,,,,,,,,,,,,,,,
util_WALK_MIX - Origin Mix,WALK_MIX - Origin Mix,oMGRAMix,,,,,,,,coef_oMix_wTran,,,,,,,,,,,,,,,
util_WALK_MIX - Origin Intersection Density,WALK_MIX - Origin Intersection Density,oMGRATotInt,,,,,,,,coef_oIntDen_wTran,,,,,,,,,,,,,,,
util_WALK_MIX - Destination Employment Density,WALK_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,coef_dEmpDen_wTran,,,,,,,,,,,,,,,
#,PNR_LOC,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_LOC_Unavailable,PNR_LOC - Unavailable,(pnr_local_available == False)|(PNR_available==0),,,,,,,,,-999,,,,,,,,,,,,,,
util_PNR_LOC_In_vehicle_time,PNR_LOC - In-vehicle time,@(odt_skims['PNROUT_LOC_TOTALIVTT'])* df.time_factor * df.outbound,,,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_PNR_LOC_iwait_time,PNR_LOC - First iwait time,@(odt_skims['PNROUT_LOC_FIRSTWAIT'])* df.time_factor * df.outbound,,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNR_LOC_transfer_wait_time,PNR_LOC - transfer wait time,@(odt_skims['PNROUT_LOC_XFERWAIT'])* df.time_factor * df.outbound,,,,,,,,,coef_xwait,,,,,,,,,,,,,,
util_PNR_LOC_number_of_transfers,PNR_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_LOC_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor * df.outbound",,,,,,,,,coef_xferdrive,,,,,,,,,,,,,,
util_PNR_LOC_PNR_time,PNR_LOC - PNR time,@odt_skims['PNROUT_LOC_ACC']* df.time_factor * df.outbound,,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNR_LOC_PNR_cost,PNR_LOC - PNR cost,"@(df.auto_op_cost * (odt_skims['PNROUT_LOC_ACC']/60) *driveSpeed)* df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNRIN_LOC_PNR_cost,PNR_LOC - PNR cost,"@(df.auto_op_cost * (odt_skims['PNRIN_LOC_EGR']/60) *driveSpeed) * ~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNR_LOC_Walk_egress_time_(at_attraction_end),PNR_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available_out, df.nev_local_egress_time_out, np.where(df.microtransit_local_egress_available_out, df.microtransit_local_egress_time_out, df.dest_local_time))* df.time_factor  * df.outbound",,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNR_LOC_wait_egress_time_(at_attraction_end),PNR_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available_out, nevWaitTime, np.where(df.microtransit_local_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNR_LOC_Walk_other_time,PNR_LOC - Walk other time,@odt_skims['PNROUT_LOC_XFERWALK']* df.time_factor * df.outbound,,,,,,,,,coef_xwalk,,,,,,,,,,,,,,
util_PNR_LOC_Fare_and_operating_cost,PNR_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * df.outbound",,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNRIN_LOC_In_vehicle_time,PNRIN_LOC - In-vehicle time,@(odt_skims['PNRIN_LOC_TOTALIVTT'])* df.time_factor  * ~df.outbound,,,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_PNRIN_LOC_iwait_time,PNRIN_LOC - First iwait time,@(odt_skims['PNRIN_LOC_FIRSTWAIT']) * df.time_factor* ~df.outbound,,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNRIN_LOC_transfer_wait_time,PNRIN_LOC - transfer wait time,@(odt_skims['PNRIN_LOC_XFERWAIT'])* ~df.outbound,,,,,,,,,coef_xwait,,,,,,,,,,,,,,
util_PNRIN_LOC_number_of_transfers,PNRIN_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNRIN_LOC_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor * ~df.outbound",,,,,,,,,coef_xferdrive,,,,,,,,,,,,,,
util_PNRIN_LOC_PNRIN_time,PNRIN_LOC - PNR time,@odt_skims['PNRIN_LOC_EGR'] * df.time_factor * ~df.outbound,,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNRIN_LOC_Walk_access_time,PNRIN_LOC - Walk access time,"@np.where(df.nev_local_access_available_in, df.nev_local_access_time_in, np.where(df.microtransit_local_access_available_in, df.microtransit_local_access_time_in, df.origin_local_time)) * df.time_factor  * ~df.outbound",,,,,,,,,coef_acctime,,,,,,,,,,,,,,
util_PNRIN_LOC_wait_access_time,PNRIN_LOC - Egress mt/nev wait time,"@np.where(df.nev_local_access_available_in, nevWaitTime, np.where(df.microtransit_local_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,coef_wait,,,,,,,,,,,,,,
util_PNRIN_LOC_Walk_other_time,PNRIN_LOC - Walk other time,@odt_skims['PNRIN_LOC_XFERWALK']* df.time_factor * ~df.outbound,,,,,,,,,coef_xwalk,,,,,,,,,,,,,,
util_PNRIN_LOC_Fare_and_operating_cost,PNRIN_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['PNRIN_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * ~df.outbound",,,,,,,,,coef_income,,,,,,,,,,,,,,
util_PNRIN_LOC_Destination_zone_densityIndex,PNRIN_LOC - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_PNR_LOC - Female,PNR_LOC - Female,@(df.female),,,,,,,,,coef_female_tran,,,,,,,,,,,,,,
util_PNR_LOC - Destination Employment Density,PNR_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,,,
#,PNR_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_PRM_Unavailable,PNR_PRM - Unavailable,(pnr_premium_available == False)|(PNR_available==0),,,,,,,,,,-999,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time,PNR_PRM - In-vehicle time,@(odt_skims['PNROUT_PRM_TOTALIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_LRT,PNR_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNROUT_PRM_LRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_CMR,PNR_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNROUT_PRM_CMRIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_LTD_EXP,PNR_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNROUT_PRM_LTDEXPIVTT'] + odt_skims['PNROUT_PRM_EXPIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_In_vehicle_time_on_URB,PNR_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNROUT_PRM_BRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_FIRST_iwait_time,PNR_PRM - First iwait time,"@(odt_skims['PNROUT_PRM_FIRSTWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['PNROUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNR_PRM_transfer_wait_time,PNR_PRM - transfer wait time,"@(odt_skims['PNROUT_PRM_XFERWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['PNROUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_xwait,,,,,,,,,,,,,
util_PNR_PRM_number_of_transfers,PNR_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_PRM_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor  * df.outbound",,,,,,,,,,coef_xferdrive,,,,,,,,,,,,,
util_PNR_PRM_PNR_time,PNR_PRM - PNR time,@(odt_skims['PNROUT_PRM_ACC']) * df.time_factor  * df.outbound,,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNR_PRM_Walk_egress_time_(at_attraction_end),PNR_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available_out, df.nev_prm_egress_time_out, np.where(df.microtransit_prm_egress_available_out, df.microtransit_prm_egress_time_out, df.dest_prm_time))* df.time_factor  * df.outbound",,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNR_PRM_wait_egress_time_(at_attraction_end),PNR_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available_out, nevWaitTime, np.where(df.microtransit_prm_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNR_PRM_Walk_other_time,PNR_PRM - Walk other time,@(odt_skims['PNROUT_PRM_XFERWALK']) * df.time_factor  * df.outbound,,,,,,,,,,coef_xwalk,,,,,,,,,,,,,
util_PNR_PRM_Fare,PNR_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * df.outbound",,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNR_PRM_ASC,PNR_PRM - Alternative-specific constant,@df.pnr_prm_out_asc * df.time_factor * df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM_PNR_cost,PNR_PRM - PNR cost,"@(df.auto_op_cost * (odt_skims['PNROUT_PRM_ACC']/60) *driveSpeed) * df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNRIN_PRM_PNR_cost,PNR_PRM - PNR cost,"@(df.auto_op_cost * (odt_skims['PNRIN_PRM_EGR']/60) *driveSpeed)*~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNRIN_PRM_In_vehicle_time,PNRIN_PRM - In-vehicle time,@(odt_skims['PNRIN_PRM_TOTALIVTT']) * df.time_factor   * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNRIN_PRM_In_vehicle_time_on_LRT,PNRIN_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNRIN_PRM_LRTIVTT']) * df.time_factor    * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNRIN_PRM_In_vehicle_time_on_CMR,PNRIN_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNRIN_PRM_CMRIVTT']) * df.time_factor    * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNRIN_PRM_In_vehicle_time_on_LTD_EXP,PNRIN_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNRIN_PRM_LTDEXPIVTT'] + odt_skims['PNRIN_PRM_EXPIVTT']) * df.time_factor    * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNRIN_PRM_In_vehicle_time_on_URB,PNRIN_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNRIN_PRM_BRTIVTT']) * df.time_factor    * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNRIN_PRM_FIRST_iwait_time,PNRIN_PRM - First iwait time,"@(odt_skims['PNRIN_PRM_FIRSTWAIT'])* df.time_factor    * ~df.outbound * np.where(odt_skims['PNRIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNRIN_PRM_transfer_wait_time,PNRIN_PRM - transfer wait time,"@(odt_skims['PNRIN_PRM_XFERWAIT']) * df.time_factor   * ~df.outbound * np.where(odt_skims['PNRIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,coef_xwait,,,,,,,,,,,,,
util_PNRIN_PRM_number_of_transfers,PNRIN_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNRIN_PRM_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor   * ~df.outbound",,,,,,,,,,coef_xferdrive,,,,,,,,,,,,,
util_PNRIN_PRM_PNRIN_time,PNRIN_PRM - PNR time,@(odt_skims['PNRIN_PRM_EGR']) * df.time_factor   * ~df.outbound,,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNRIN_PRM_Walk_access_time_(at_attraction_end),PNRIN_PRM - Walk access time (at attraction end),"@np.where(df.nev_prm_access_available_in, df.nev_prm_access_time_in, np.where(df.microtransit_prm_access_available_in, df.microtransit_prm_access_time_in, df.origin_prm_time)) * df.time_factor   * ~df.outbound",,,,,,,,,,coef_acctime,,,,,,,,,,,,,
util_PNRIN_PRM_wait_access_time_(at_attraction_end),PNRIN_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_access_available_in, nevWaitTime, np.where(df.microtransit_prm_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,coef_wait,,,,,,,,,,,,,
util_PNRIN_PRM_Walk_other_time,PNRIN_PRM - Walk other time,@(odt_skims['PNRIN_PRM_XFERWALK']) * df.time_factor   * ~df.outbound,,,,,,,,,,coef_xwalk,,,,,,,,,,,,,
util_PNRIN_PRM_Fare,PNRIN_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['PNRIN_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)   * ~df.outbound",,,,,,,,,,coef_income,,,,,,,,,,,,,
util_PNRIN_PRM_ASC,PNRIN_PRM - Alternative-specific constant,@df.pnr_prm_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_PNR_PRM - Female,PNR_PRM - Female,@(df.female),,,,,,,,,,coef_female_tran,,,,,,,,,,,,,
util_PNR_PRM - Destination Employment Density,PNR_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,,
#,PNR_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_PNR_MIX_Unavailable,PNR_mix - Unavailable,(pnr_mix_available == False)|(PNR_available==0),,,,,,,,,,,-999,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time,PNR_MIX - In-vehicle time,@(odt_skims['PNROUT_MIX_TOTALIVTT']) * df.time_factor   * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_LRT,PNR_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNROUT_MIX_LRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_CMR,PNR_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNROUT_MIX_CMRIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_LTD_EXP,PNR_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNROUT_MIX_LTDEXPIVTT'] + odt_skims['PNROUT_MIX_EXPIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_In_vehicle_time_on_URB,PNR_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNROUT_MIX_BRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_FIRST_iwait_time,PNR_MIX - First iwait time,"@(odt_skims['PNROUT_MIX_FIRSTWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['PNROUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNR_MIX_transfer_wait_time,PNR_MIX - transfer wait time,"@(odt_skims['PNROUT_MIX_XFERWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['PNROUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_xwait,,,,,,,,,,,,
util_PNR_MIX_number_of_transfers,PNR_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNROUT_MIX_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor  * df.outbound",,,,,,,,,,,coef_xferdrive,,,,,,,,,,,,
util_PNR_MIX_PNR_time,PNR_MIX - PNR time,@odt_skims['PNROUT_MIX_ACC'] * df.time_factor  * df.outbound,,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNR_MIX_Walk_egress_time_(at_attraction_end),PNR_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available_out, df.nev_mix_egress_time_out, np.where(df.microtransit_mix_egress_available_out, df.microtransit_mix_egress_time_out, df.dest_mix_time))* df.time_factor  * df.outbound",,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNR_MIX_wait_egress_time_(at_attraction_end),PNR_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available_out, nevWaitTime, np.where(df.microtransit_mix_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNR_MIX_Walk_other_time,PNR_MIX - Walk other time,@(odt_skims['PNROUT_MIX_XFERWALK']) * df.time_factor  * df.outbound,,,,,,,,,,,coef_xwalk,,,,,,,,,,,,
util_PNR_MIX_Fare,PNR_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['PNROUT_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * df.outbound",,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNR_MIX_ASC,PNR_MIX - Alternative-specific constant,@df.pnr_mix_out_asc * df.time_factor * df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX_PNR_cost,PNR_MIX - PNR cost,"@(df.auto_op_cost * (odt_skims['PNROUT_MIX_ACC']/60) *driveSpeed) * df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNRIN_MIX_PNR_cost,PNR_MIX - PNR cost,"@(df.auto_op_cost * (odt_skims['PNRIN_MIX_EGR']/60) *driveSpeed)*~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNRIN_MIX_In_vehicle_time,PNRIN_MIX - In-vehicle time,@(odt_skims['PNRIN_MIX_TOTALIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNRIN_MIX_In_vehicle_time_on_LRT,PNRIN_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['PNRIN_MIX_LRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNRIN_MIX_In_vehicle_time_on_CMR,PNRIN_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['PNRIN_MIX_CMRIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNRIN_MIX_In_vehicle_time_on_LTD_EXP,PNRIN_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['PNRIN_MIX_LTDEXPIVTT'] + odt_skims['PNRIN_MIX_EXPIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNRIN_MIX_In_vehicle_time_on_URB,PNRIN_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['PNRIN_MIX_BRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNRIN_MIX_FIRST_iwait_time,PNRIN_MIX - First iwait time,"@(odt_skims['PNRIN_MIX_FIRSTWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['PNRIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNRIN_MIX_transfer_wait_time,PNRIN_MIX - transfer wait time,"@(odt_skims['PNRIN_MIX_XFERWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['PNRIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,coef_xwait,,,,,,,,,,,,
util_PNRIN_MIX_number_of_transfers,PNRIN_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['PNRIN_MIX_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor  * ~df.outbound",,,,,,,,,,,coef_xferdrive,,,,,,,,,,,,
util_PNRIN_MIX_PNRIN_time,PNRIN_MIX - PNR time,@odt_skims['PNRIN_MIX_EGR'] * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNRIN_MIX_Walk_access_time_(at_attraction_end),PNRIN_MIX - Walk access time (at attraction end),"@np.where(df.nev_mix_access_available_in, df.nev_mix_access_time_in, np.where(df.microtransit_mix_access_available_in, df.microtransit_mix_access_time_in, df.origin_mix_time)) * df.time_factor   * ~df.outbound",,,,,,,,,,,coef_acctime,,,,,,,,,,,,
util_PNRIN_MIX_wait_access_time_(at_attraction_end),PNRIN_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_access_available_in, nevWaitTime, np.where(df.microtransit_mix_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,coef_wait,,,,,,,,,,,,
util_PNRIN_MIX_Walk_other_time,PNRIN_MIX - Walk other time,@(odt_skims['PNRIN_MIX_XFERWALK']) * df.time_factor  * ~df.outbound,,,,,,,,,,,coef_xwalk,,,,,,,,,,,,
util_PNRIN_MIX_Fare,PNRIN_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['PNRIN_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * ~df.outbound",,,,,,,,,,,coef_income,,,,,,,,,,,,
util_PNRIN_MIX_ASC,PNRIN_MIX - Alternative-specific constant,@df.pnr_mix_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,,coef_ivt,,,,,,,,,,,,
util_PNR_MIX - Female,PNR_MIX - Female,@(df.female),,,,,,,,,,,coef_female_tran,,,,,,,,,,,,
util_PNR_MIX - Destination Employment Density,PNR_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_LOC_Unavailable,KNR_LOC - Unavailable,(knr_local_available == False)|(KNR_available==0),,,,,,,,,,,,-999,,,,,,,,,,,
util_KNR_LOC_In_vehicle_time,KNR_LOC - In-vehicle time,@(odt_skims['KNROUT_LOC_TOTALIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,coef_ivt,,,,,,,,,,,
util_KNR_LOC_iwait_time,KNR_LOC - First iwait time,@(odt_skims['KNROUT_LOC_FIRSTWAIT']) * df.time_factor  * df.outbound,,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNR_LOC_transfer_wait_time,KNR_LOC - transfer wait time,@(odt_skims['KNROUT_LOC_XFERWAIT']) * df.time_factor  * df.outbound,,,,,,,,,,,,coef_xwait,,,,,,,,,,,
util_KNR_LOC_number_of_transfers,KNR_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_LOC_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor  * df.outbound",,,,,,,,,,,,coef_xferdrive,,,,,,,,,,,
util_KNR_LOC_KNR_time,KNR_LOC - KNR time,@(odt_skims['KNROUT_LOC_ACC']) * df.time_factor  * df.outbound,,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNR_LOC_Walk_egress_time_(at_attraction_end),KNR_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available_out, df.nev_local_egress_time_out, np.where(df.microtransit_local_egress_available_out, df.microtransit_local_egress_time_out, df.dest_local_time)) * df.time_factor  * df.outbound",,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNR_LOC_wait_egress_time_(at_attraction_end),KNR_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available_out, nevWaitTime, np.where(df.microtransit_local_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNR_LOC_Walk_other_time,KNR_LOC - Walk other time,@(odt_skims['KNROUT_LOC_XFERWALK']) * df.time_factor  * df.outbound,,,,,,,,,,,,coef_xwalk,,,,,,,,,,,
util_KNR_LOC_Fare,KNR_LOC - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * df.outbound",,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNR_LOC_KNR_cost,KNR_LOC - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNROUT_LOC_ACC']/60) *driveSpeed )*df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNRIN_LOC_KNR_cost,KNR_LOC - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNRIN_LOC_EGR']/60) *driveSpeed)*~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNRIN_LOC_In_vehicle_time,KNRIN_LOC - In-vehicle time,@(odt_skims['KNRIN_LOC_TOTALIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,coef_ivt,,,,,,,,,,,
util_KNRIN_LOC_iwait_time,KNRIN_LOC - First iwait time,@(odt_skims['KNRIN_LOC_FIRSTWAIT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNRIN_LOC_transfer_wait_time,KNRIN_LOC - transfer wait time,@(odt_skims['KNRIN_LOC_XFERWAIT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,coef_xwait,,,,,,,,,,,
util_KNRIN_LOC_number_of_transfers,KNRIN_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNRIN_LOC_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor  * ~df.outbound",,,,,,,,,,,,coef_xferdrive,,,,,,,,,,,
util_KNRIN_LOC_KNRIN_time,KNRIN_LOC - KNR time,@odt_skims['KNRIN_LOC_EGR'] * df.time_factor  * ~df.outbound,,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNRIN_LOC_Walk_access_time,KNRIN_LOC - Walk access time,"@np.where(df.nev_local_access_available_in, df.nev_local_access_time_in, np.where(df.microtransit_local_access_available_in, df.microtransit_local_access_time_in, df.origin_local_time)) * df.time_factor  * ~df.outbound",,,,,,,,,,,,coef_acctime,,,,,,,,,,,
util_KNRIN_LOC_wait_access_time,KNRIN_LOC - Egress mt/nev wait time,"@np.where(df.nev_local_access_available_in, nevWaitTime, np.where(df.microtransit_local_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,coef_wait,,,,,,,,,,,
util_KNRIN_LOC_Walk_other_time,KNRIN_LOC - Walk other time,@(odt_skims['KNRIN_LOC_XFERWALK']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,coef_xwalk,,,,,,,,,,,
util_KNRIN_LOC_Fare_and_operating_cost,KNRIN_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['KNRIN_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * ~df.outbound",,,,,,,,,,,,coef_income,,,,,,,,,,,
util_KNR_LOC - Female,KNR_LOC - Female,@(df.female),,,,,,,,,,,,coef_female_tran,,,,,,,,,,,
util_KNR_LOC - Destination Employment Density,KNR_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,,
#,KNR_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_PRM_Unavailable,KNR_PRM - Unavailable,(knr_premium_available == False)|(KNR_available==0),,,,,,,,,,,,,-999,,,,,,,,,,
util_KNR_PRM_In_vehicle_time,KNR_PRM - In-vehicle time,@(odt_skims['KNROUT_PRM_TOTALIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_LRT,KNR_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNROUT_PRM_LRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_CMR,KNR_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNROUT_PRM_CMRIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_LTD_EXP,KNR_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNROUT_PRM_LTDEXPIVTT'] + odt_skims['KNROUT_PRM_EXPIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_In_vehicle_time_on_URB,KNR_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNROUT_PRM_BRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_FIRST_iwait_time,KNR_PRM - First iwait time,"@(odt_skims['KNROUT_PRM_FIRSTWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['KNROUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNR_PRM_transfer_wait_time,KNR_PRM - transfer wait time,"@(odt_skims['KNROUT_PRM_XFERWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['KNROUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_xwait,,,,,,,,,,
util_KNR_PRM_number_of_transfers,KNR_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_PRM_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor  * df.outbound",,,,,,,,,,,,,coef_xferdrive,,,,,,,,,,
util_KNR_PRM_KNR_time,KNR_PRM - KNR time,@(odt_skims['KNROUT_PRM_ACC']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNR_PRM_Walk_egress_time_(at_attraction_end),KNR_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available_out, df.nev_prm_egress_time_out, np.where(df.microtransit_prm_egress_available_out, df.microtransit_prm_egress_time_out, df.dest_prm_time)) * df.time_factor  * df.outbound",,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNR_PRM_wait_egress_time_(at_attraction_end),KNR_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available_out, nevWaitTime, np.where(df.microtransit_prm_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNR_PRM_Walk_other_time,KNR_PRM - Walk other time,@(odt_skims['KNROUT_PRM_XFERWALK']) * df.time_factor  * df.outbound,,,,,,,,,,,,,coef_xwalk,,,,,,,,,,
util_KNR_PRM_Fare,KNR_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * df.outbound",,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNR_PRM_ASC,PNR_PRM - Alternative-specific constant,@df.knr_prm_out_asc * df.time_factor * df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM_KNR_cost,KNR_PRM - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNROUT_PRM_ACC']/60) *driveSpeed)*df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNRIN_PRM_KNR_cost,KNR_PRM - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNRIN_PRM_EGR']/60) *driveSpeed)*~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNRIN_PRM_In_vehicle_time,KNRIN_PRM - In-vehicle time,@(odt_skims['KNRIN_PRM_TOTALIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNRIN_PRM_In_vehicle_time_on_LRT,KNRIN_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNRIN_PRM_LRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNRIN_PRM_In_vehicle_time_on_CMR,KNRIN_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNRIN_PRM_CMRIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNRIN_PRM_In_vehicle_time_on_LTD_EXP,KNRIN_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNRIN_PRM_LTDEXPIVTT'] + odt_skims['KNRIN_PRM_EXPIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNRIN_PRM_In_vehicle_time_on_URB,KNRIN_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNRIN_PRM_BRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNRIN_PRM_FIRST_iwait_time,KNRIN_PRM - First iwait time,"@(odt_skims['KNRIN_PRM_FIRSTWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['KNRIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNRIN_PRM_transfer_wait_time,KNRIN_PRM - transfer wait time,"@(odt_skims['KNRIN_PRM_XFERWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['KNRIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,coef_xwait,,,,,,,,,,
util_KNRIN_PRM_number_of_transfers,KNRIN_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNRIN_PRM_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor  * ~df.outbound",,,,,,,,,,,,,coef_xferdrive,,,,,,,,,,
util_KNRIN_PRM_KNRIN_time,KNRIN_PRM - KNR time,@(odt_skims['KNRIN_PRM_EGR']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNRIN_PRM_Walk_access_time_(at_attraction_end),KNRIN_PRM - Walk access time (at attraction end),"@np.where(df.nev_prm_access_available_in, df.nev_prm_access_time_in, np.where(df.microtransit_prm_access_available_in, df.microtransit_prm_access_time_in, df.origin_prm_time)) * df.time_factor  * ~df.outbound",,,,,,,,,,,,,coef_acctime,,,,,,,,,,
util_KNRIN_PRM_wait_access_time_(at_attraction_end),KNRIN_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_access_available_in, nevWaitTime, np.where(df.microtransit_prm_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,coef_wait,,,,,,,,,,
util_KNRIN_PRM_Walk_other_time,KNRIN_PRM - Walk other time,@(odt_skims['KNRIN_PRM_XFERWALK']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,coef_xwalk,,,,,,,,,,
util_KNRIN_PRM_Fare,KNRIN_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['KNRIN_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * ~df.outbound",,,,,,,,,,,,,coef_income,,,,,,,,,,
util_KNRIN_PRM_ASC,KNRIN_PRM - Alternative-specific constant,@df.knr_prm_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,,,,coef_ivt,,,,,,,,,,
util_KNR_PRM - Female,KNR_PRM - Female,@(df.female),,,,,,,,,,,,,coef_female_tran,,,,,,,,,,
util_KNR_PRM - Destination Employment Density,KNR_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,,
#,KNR_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_KNR_MIX_Unavailable,KNR_mix - Unavailable,(knr_mix_available == False)|(KNR_available==0),,,,,,,,,,,,,,-999,,,,,,,,,
util_KNR_MIX_In_vehicle_time,KNR_MIX - In-vehicle time,@(odt_skims['KNROUT_MIX_TOTALIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_LRT,KNR_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNROUT_MIX_LRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_CMR,KNR_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNROUT_MIX_CMRIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_LTD_EXP,KNR_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNROUT_MIX_LTDEXPIVTT'] + odt_skims['KNROUT_MIX_EXPIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_In_vehicle_time_on_URB,KNR_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNROUT_MIX_BRTIVTT']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_FIRST_iwait_time,KNR_MIX - First iwait time,"@(odt_skims['KNROUT_MIX_FIRSTWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['KNROUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNR_MIX_transfer_wait_time,KNR_MIX - transfer wait time,"@(odt_skims['KNROUT_MIX_XFERWAIT']) * df.time_factor  * df.outbound * np.where(odt_skims['KNROUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_xwait,,,,,,,,,
util_KNR_MIX_number_of_transfers,KNR_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_MIX_XFERS'] + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor  * df.outbound",,,,,,,,,,,,,,coef_xferdrive,,,,,,,,,
util_KNR_MIX_KNR_time,KNR_MIX - KNR time,@(odt_skims['KNROUT_MIX_ACC']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNR_MIX_Walk_egress_time_(at_attraction_end),KNR_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available_out, df.nev_mix_egress_time_out, np.where(df.microtransit_mix_egress_available_out, df.microtransit_mix_egress_time_out, df.dest_mix_time)) * df.time_factor  * df.outbound",,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNR_MIX_wait_egress_time_(at_attraction_end),KNR_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available_out, nevWaitTime, np.where(df.microtransit_mix_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNR_MIX_Walk_other_time,KNR_MIX - Walk other time,@(odt_skims['KNROUT_MIX_XFERWALK']) * df.time_factor  * df.outbound,,,,,,,,,,,,,,coef_xwalk,,,,,,,,,
util_KNR_MIX_Fare,KNR_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['KNROUT_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * df.outbound",,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNR_MIX_ASC,PNR_MIX - Alternative-specific constant,@df.knr_mix_out_asc * df.time_factor * df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX_KNR_cost,KNR_MIX - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNROUT_MIX_ACC']/60) *driveSpeed)*df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNRIN_MIX_KNR_cost,KNR_MIX - KNR cost,"@(df.auto_op_cost * df.autoCPMFactor * (odt_skims['KNRIN_MIX_EGR']/60) *driveSpeed)*~df.outbound/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNRIN_MIX_In_vehicle_time,KNRIN_MIX - In-vehicle time,@(odt_skims['KNRIN_MIX_TOTALIVTT']) * df.time_factor,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNRIN_MIX_In_vehicle_time_on_LRT,KNRIN_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['KNRIN_MIX_LRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNRIN_MIX_In_vehicle_time_on_CMR,KNRIN_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['KNRIN_MIX_CMRIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNRIN_MIX_In_vehicle_time_on_LTD_EXP,KNRIN_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['KNRIN_MIX_LTDEXPIVTT'] + odt_skims['KNRIN_MIX_EXPIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNRIN_MIX_In_vehicle_time_on_URB,KNRIN_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['KNRIN_MIX_BRTIVTT']) * df.time_factor  * ~df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNRIN_MIX_FIRST_iwait_time,KNRIN_MIX - First iwait time,"@(odt_skims['KNRIN_MIX_FIRSTWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['KNRIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNRIN_MIX_transfer_wait_time,KNRIN_MIX - transfer wait time,"@(odt_skims['KNRIN_MIX_XFERWAIT']) * df.time_factor  * ~df.outbound * np.where(odt_skims['KNRIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,coef_xwait,,,,,,,,,
util_KNRIN_MIX_number_of_transfers,KNRIN_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNRIN_MIX_XFERS'] + df.mtnev_acc_xfer_in, a_min=None,a_max=4))) * df.time_factor  * ~df.outbound",,,,,,,,,,,,,,coef_xferdrive,,,,,,,,,
util_KNRIN_MIX_KNRIN_time,KNRIN_MIX - KNR time,@(odt_skims['KNRIN_MIX_EGR']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNRIN_MIX_Walk_access_time_(at_attraction_end),KNRIN_MIX - Walk access time (at attraction end),"@np.where(df.nev_mix_access_available_in, df.nev_mix_access_time_in, np.where(df.microtransit_mix_access_available_in, df.microtransit_mix_access_time_in, df.origin_mix_time)) * df.time_factor  * ~df.outbound",,,,,,,,,,,,,,coef_acctime,,,,,,,,,
util_KNRIN_MIX_wait_access_time_(at_attraction_end),KNRIN_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_access_available_in, nevWaitTime, np.where(df.microtransit_mix_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,coef_wait,,,,,,,,,
util_KNRIN_MIX_Walk_other_time,KNRIN_MIX - Walk other time,@(odt_skims['KNRIN_MIX_XFERWALK'])  * ~df.outbound,,,,,,,,,,,,,,coef_xwalk,,,,,,,,,
util_KNRIN_MIX_Fare,KNRIN_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['KNRIN_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent)  * ~df.outbound",,,,,,,,,,,,,,coef_income,,,,,,,,,
util_KNRIN_MIX_ASC,KNRIN_MIX - Alternative-specific constant,@df.knr_mix_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,,,,,coef_ivt,,,,,,,,,
util_KNR_MIX - Female,KNR_MIX - Female,@(df.female),,,,,,,,,,,,,,coef_female_tran,,,,,,,,,
util_KNR_MIX - Destination Employment Density,KNR_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_LOC_Unavailable,TNC_LOC - Unavailable,(tnc_local_available == False)|(TNR_available==0),,,,,,,,,,,,,,,-999,,,,,,,,
util_TNC_LOC_Unavailable_for_persons_less_than_16,TNC_LOC - Unavailable for persons less than 16,age < 12,,,,,,,,,,,,,,,-999,,,,,,,,
util_TNC_LOC_In_vehicle_time,TNC_LOC - In-vehicle time,@(odt_skims['TNCOUT_LOC_TOTALIVTT'])* df.time_factor * df.outbound,,,,,,,,,,,,,,,coef_ivt,,,,,,,,
util_TNC_LOC_iwait_time,TNC_LOC - First iwait time,@(odt_skims['TNCOUT_LOC_FIRSTWAIT'])* df.time_factor * df.outbound,,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_transfer_wait_time,TNC_LOC - transfer wait time,@odt_skims['TNCOUT_LOC_XFERWAIT']* df.time_factor * df.outbound,,,,,,,,,,,,,,,coef_xwait,,,,,,,,
util_TNC_LOC_number_of_transfers,TNC_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_LOC_XFERS'] + df.mtnev_acc_xfer_out + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor * df.outbound",,,,,,,,,,,,,,,coef_xferdrive,,,,,,,,
util_TNC_LOC_TNC_time,TNC_LOC - TNC time,"@np.where(df.nev_local_access_available_out, df.nev_local_access_time_out, np.where(df.microtransit_local_access_available_out, df.microtransit_local_access_time_out, odt_skims['TNCOUT_LOC_ACC'])) * df.time_factor * df.outbound",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_TNC_wait_time,TNC_LOC - TNC wait time,"@np.where(df.nev_local_access_available_out, nevWaitTime, np.where(df.microtransit_local_access_available_out, microtransitWaitTime, df.origSingleTNCWaitTime)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_TNC_fare,TNC_LOC - TNC fare,"@(~df.nev_local_access_available_out) * (~df.microtransit_local_access_available_out) * (df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCOUT_LOC_ACC']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCOUT_LOC_ACC'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC_Walk_egress_time_(at_attraction_end),TNC_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_egress_available_out, df.nev_local_egress_time_out, np.where(df.microtransit_local_egress_available_out, df.microtransit_local_egress_time_out, df.dest_local_time)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_wait_egress_time_(at_attraction_end),TNC_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_egress_available_out, nevWaitTime, np.where(df.microtransit_local_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_Walk_other_time,TNC_LOC - Walk other time,@odt_skims['TNCOUT_LOC_XFERWALK']* df.time_factor * df.outbound,,,,,,,,,,,,,,,coef_xwalk,,,,,,,,
util_TNC_LOC_Fare_and_operating_cost,TNC_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * df.outbound",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC_In_vehicle_time,TNC_LOC - In-vehicle time,@(odt_skims['TNCIN_LOC_TOTALIVTT'])* df.time_factor * ~df.outbound,,,,,,,,,,,,,,,coef_ivt,,,,,,,,
util_TNC_LOC_iwait_time,TNC_LOC - First iwait time,@(odt_skims['TNCIN_LOC_FIRSTWAIT'])* df.time_factor * ~df.outbound,,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_transfer_wait_time,TNC_LOC - transfer wait time,@odt_skims['TNCIN_LOC_XFERWAIT']* df.time_factor * ~df.outbound,,,,,,,,,,,,,,,coef_xwait,,,,,,,,
util_TNC_LOC_number_of_transfers,TNC_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCIN_LOC_XFERS'] + df.mtnev_acc_xfer_in + df.mtnev_egr_xfer_in, a_min=None,a_max=4))) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,coef_xferdrive,,,,,,,,
util_TNC_LOC_TNC_time,TNC_LOC - TNC time,"@np.where(df.nev_local_egress_available_in, df.nev_local_egress_time_in, np.where(df.microtransit_local_egress_available_in, df.microtransit_local_egress_time_in, odt_skims['TNCIN_LOC_EGR'])) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_TNC_wait_time,TNC_LOC - TNC wait time,"@np.where(df.nev_local_egress_available_in, nevWaitTime, np.where(df.microtransit_local_egress_available_in, microtransitWaitTime, df.destSingleTNCWaitTime)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_TNC_fare,TNC_LOC - TNC fare,"@(~df.nev_local_egress_available_in) * (~df.microtransit_local_egress_available_in) * (~df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCIN_LOC_EGR']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCIN_LOC_EGR'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC_Walk_egress_time_(at_attraction_end),TNC_LOC - Walk egress time (at attraction end),"@np.where(df.nev_local_access_available_in, df.nev_local_access_time_in, np.where(df.microtransit_local_access_available_in, df.microtransit_local_access_time_in, df.origin_local_time)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,coef_acctime,,,,,,,,
util_TNC_LOC_wait_egress_time_(at_attraction_end),TNC_LOC - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_local_access_available_in, nevWaitTime, np.where(df.microtransit_local_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,coef_wait,,,,,,,,
util_TNC_LOC_Walk_other_time,TNC_LOC - Walk other time,@odt_skims['TNCIN_LOC_XFERWALK']* df.time_factor * ~df.outbound,,,,,,,,,,,,,,,coef_xwalk,,,,,,,,
util_TNC_LOC_Fare,TNC_LOC - Fare ,"@df.transitSubsidyPassDiscount*(odt_skims['TNCIN_LOC_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * ~df.outbound",,,,,,,,,,,,,,,coef_income,,,,,,,,
util_TNC_LOC - Female,TNC_LOC - Female,@(df.female),,,,,,,,,,,,,,,coef_female_tran,,,,,,,,
util_TNC_LOC - Destination Employment Density,TNC_LOC - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,,
#,TNC_PRM,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_PRM_Unavailable,TNC_PRM - Unavailable,(tnc_premium_available == False)|(TNR_available==0),,,,,,,,,,,,,,,,-999,,,,,,,
util_TNC_PRM_Unavailable_for_persons_less_than_16,TNC_PRM - Unavailable for persons less than 16,@df.age < 12,,,,,,,,,,,,,,,,-999,,,,,,,
util_TNC_PRM_In_vehicle_time,TNC_PRM - In-vehicle time,@(odt_skims['TNCOUT_PRM_TOTALIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_LRT,TNC_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCOUT_PRM_LRTIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_CMR,TNC_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCOUT_PRM_CMRIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_LTD_EXP,TNC_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCOUT_PRM_LTDEXPIVTT'] + odt_skims['TNCOUT_PRM_EXPIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_In_vehicle_time_on_URB,TNC_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCOUT_PRM_BRTIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM_FIRST_iwait_time,TNC_PRM - First iwait time,"@(odt_skims['TNCOUT_PRM_FIRSTWAIT']) * df.time_factor * df.outbound * np.where(odt_skims['TNCOUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_transfer_wait_time,TNC_PRM - transfer wait time,"@(odt_skims['TNCOUT_PRM_XFERWAIT']) * df.time_factor * df.outbound * np.where(odt_skims['TNCOUT_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_xwait,,,,,,,
util_TNC_PRM_number_of_transfers,TNC_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_PRM_XFERS'] + df.mtnev_acc_xfer_out + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,coef_xferdrive,,,,,,,
util_TNC_PRM_TNC_time,TNC_PRM - TNC time,"@np.where(df.nev_prm_access_available_out, df.nev_prm_access_time_out, np.where(df.microtransit_prm_access_available_out, df.microtransit_prm_access_time_out, odt_skims['TNCOUT_PRM_ACC'])) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNC_PRM_TNC_wait_time,TNC_PRM - TNC wait time,"@np.where(df.nev_prm_access_available_out, nevWaitTime, np.where(df.microtransit_prm_access_available_out, microtransitWaitTime, df.origSingleTNCWaitTime)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_TNC_fare,TNC_PRM - TNC fare,"@(~df.nev_prm_access_available_out) * (~df.microtransit_prm_access_available_out) * (df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCOUT_PRM_ACC']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCOUT_PRM_ACC'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNC_PRM_Walk_egress_time_(at_attraction_end),TNC_PRM - Walk egress time (at attraction end),"@np.where(df.nev_prm_egress_available_out, df.nev_prm_egress_time_out, np.where(df.microtransit_prm_egress_available_out, df.microtransit_prm_egress_time_out, df.dest_prm_time)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNC_PRM_wait_egress_time_(at_attraction_end),TNC_PRM - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_prm_egress_available_out, nevWaitTime, np.where(df.microtransit_prm_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNC_PRM_Walk_other_time,TNC_PRM - Walk other time,@(odt_skims['TNCOUT_PRM_XFERWALK']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_xwalk,,,,,,,
util_TNC_PRM_Fare,TNC_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * df.outbound",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNC_PRM_ASC,TNC_PRM - Alternative-specific constant,@df.tnc_prm_out_asc * df.time_factor * df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_In_vehicle_time,TNCIN_PRM - In-vehicle time,@(odt_skims['TNCIN_PRM_TOTALIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_In_vehicle_time_on_LRT,TNCIN_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCIN_PRM_LRTIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_In_vehicle_time_on_CMR,TNCIN_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCIN_PRM_CMRIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_In_vehicle_time_on_LTD_EXP,TNCIN_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCIN_PRM_LTDEXPIVTT'] + odt_skims['TNCIN_PRM_EXPIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_In_vehicle_time_on_URB,TNCIN_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCIN_PRM_BRTIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNCIN_PRM_FIRST_iwait_time,TNCIN_PRM - First iwait time,"@(odt_skims['TNCIN_PRM_FIRSTWAIT']) * df.time_factor * ~df.outbound * np.where(odt_skims['TNCIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNCIN_PRM_transfer_wait_time,TNCIN_PRM - transfer wait time,"@(odt_skims['TNCIN_PRM_XFERWAIT']) * df.time_factor * ~df.outbound * np.where(odt_skims['TNCIN_PRM_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,coef_xwait,,,,,,,
util_TNCIN_PRM_number_of_transfers,TNCIN_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCIN_PRM_XFERS'] + df.mtnev_acc_xfer_in + df.mtnev_egr_xfer_in, a_min=None,a_max=4))) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,coef_xferdrive,,,,,,,
util_TNCIN_PRM_TNCIN_time,TNCIN_PRM - TNC time,"@np.where(df.nev_prm_egress_available_in, df.nev_prm_egress_time_in, np.where(df.microtransit_prm_egress_available_in, df.microtransit_prm_egress_time_in, odt_skims['TNCIN_PRM_EGR'])) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNCIN_PRM_TNCIN_wait_time,TNCIN_PRM - TNC wait time,"@np.where(df.nev_prm_egress_available_in, nevWaitTime, np.where(df.microtransit_prm_egress_available_in, microtransitWaitTime, df.destSingleTNCWaitTime)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNCIN_PRM_TNCIN_fare,TNCIN_PRM - TNC fare,"@(~df.nev_prm_egress_available_in) * (~df.microtransit_prm_egress_available_in) * (~df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCIN_PRM_EGR']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCIN_PRM_EGR'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNCIN_PRM_Walk_access_time_(at_attraction_end),TNCIN_PRM - Walk access time (at attraction end),"@np.where(df.nev_prm_access_available_in, df.nev_prm_access_time_in, np.where(df.microtransit_prm_access_available_in, df.microtransit_prm_access_time_in, df.origin_prm_time)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,coef_acctime,,,,,,,
util_TNCIN_PRM_wait_access_time_(at_attraction_end),TNCIN_PRM - Access mt/nev wait time (at attraction end),"@np.where(df.nev_prm_access_available_in, nevWaitTime, np.where(df.microtransit_prm_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,coef_wait,,,,,,,
util_TNCIN_PRM_Walk_other_time,TNCIN_PRM - Walk other time,@(odt_skims['TNCOUT_PRM_XFERWALK']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_xwalk,,,,,,,
util_TNCIN_PRM_Fare,TNCIN_PRM - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCIN_PRM_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * ~df.outbound",,,,,,,,,,,,,,,,coef_income,,,,,,,
util_TNCIN_PRM_ASC,TNCIN_PRM - Alternative-specific constant,@df.tnc_prm_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,coef_ivt,,,,,,,
util_TNC_PRM - Female,TNC_PRM - Female,@(df.female),,,,,,,,,,,,,,,,coef_female_tran,,,,,,,
util_TNC_PRM - Destination Employment Density,TNC_PRM - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,,
#,TNC_MIX,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC_MIX_Unavailable,TNC_mix - Unavailable,(tnc_mix_available == False)|(TNR_available==0),,,,,,,,,,,,,,,,,-999,,,,,,
util_TNC_PRM_Unavailable_for_persons_less_than_16,TNC_mix - Unavailable for persons less than 16,@df.age < 12,,,,,,,,,,,,,,,,,-999,,,,,,
util_TNC_MIX_In_vehicle_time,TNC_MIX - In-vehicle time,@(odt_skims['TNCOUT_MIX_TOTALIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_LRT,TNC_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCOUT_MIX_LRTIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_CMR,TNC_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCOUT_MIX_CMRIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_LTD_EXP,TNC_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCOUT_MIX_LTDEXPIVTT']+ odt_skims['TNCOUT_MIX_EXPIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_In_vehicle_time_on_URB,TNC_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCOUT_MIX_BRTIVTT']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX_FIRST_iwait_time,TNC_MIX - First iwait time,"@(odt_skims['TNCOUT_MIX_FIRSTWAIT']) * df.time_factor * df.outbound * np.where(odt_skims['TNCOUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_transfer_wait_time,TNC_MIX - transfer wait time,"@ (odt_skims['TNCOUT_MIX_XFERWAIT']) * df.time_factor * df.outbound * np.where(odt_skims['TNCOUT_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_xwait,,,,,,
util_TNC_MIX_number_of_transfers,TNC_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCOUT_MIX_XFERS'] + df.mtnev_acc_xfer_out + df.mtnev_egr_xfer_out, a_min=None,a_max=4))) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,,coef_xferdrive,,,,,,
util_TNC_MIX_TNC_time,TNC_MIX - TNC time,"@np.where(df.nev_mix_access_available_out, df.nev_mix_access_time_out, np.where(df.microtransit_mix_access_available_out, df.microtransit_mix_access_time_out, odt_skims['TNCOUT_MIX_ACC'])) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNC_MIX_TNC_wait_time,TNC_MIX - TNC wait time,"@np.where(df.nev_mix_access_available_out, nevWaitTime, np.where(df.microtransit_mix_access_available_out, microtransitWaitTime, df.origSingleTNCWaitTime)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_TNC_fare,TNC_MIX - TNC fare,"@(~df.nev_mix_access_available_out) * (~df.microtransit_mix_access_available_out) * (df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCOUT_MIX_ACC']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCOUT_MIX_ACC'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNC_MIX_Walk_egress_time_(at_attraction_end),TNC_MIX - Walk egress time (at attraction end),"@np.where(df.nev_mix_egress_available_out, df.nev_mix_egress_time_out, np.where(df.microtransit_mix_egress_available_out, df.microtransit_mix_egress_time_out, df.dest_mix_time)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNC_MIX_wait_egress_time_(at_attraction_end),TNC_MIX - Egress mt/nev wait time (at attraction end),"@np.where(df.nev_mix_egress_available_out, nevWaitTime, np.where(df.microtransit_mix_egress_available_out, microtransitWaitTime, 0)) * df.time_factor * df.outbound",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNC_MIX_Walk_other_time,TNC_MIX - Walk other time,@(odt_skims['TNCOUT_MIX_XFERWALK']) * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_xwalk,,,,,,
util_TNC_MIX_Fare,TNC_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCOUT_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * df.outbound",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNC_MIX_ASC,TNC_MIX - Alternative-specific constant,@df.tnc_mix_out_asc * df.time_factor * df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_In_vehicle_time,TNCIN_MIX - In-vehicle time,@(odt_skims['TNCIN_MIX_TOTALIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_In_vehicle_time_on_LRT,TNCIN_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['TNCIN_MIX_LRTIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_In_vehicle_time_on_CMR,TNCIN_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['TNCIN_MIX_CMRIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_In_vehicle_time_on_LTD_EXP,TNCIN_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['TNCIN_MIX_LTDEXPIVTT'] + odt_skims['TNCIN_MIX_EXPIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_In_vehicle_time_on_URB,TNCIN_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['TNCIN_MIX_BRTIVTT']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNCIN_MIX_FIRST_iwait_time,TNCIN_MIX - First iwait time,"@(odt_skims['TNCIN_MIX_FIRSTWAIT']) * df.time_factor * ~df.outbound * np.where(odt_skims['TNCIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNCIN_MIX_transfer_wait_time,TNCIN_MIX - transfer wait time,"@(odt_skims['TNCIN_MIX_XFERWAIT']) * df.time_factor * ~df.outbound * np.where(odt_skims['TNCIN_MIX_BRTIVTT'] > 0,WAIT_TIME_DISC,1)",,,,,,,,,,,,,,,,,coef_xwait,,,,,,
util_TNCIN_MIX_number_of_transfers,TNCIN_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['TNCIN_MIX_XFERS'] + df.mtnev_acc_xfer_in + df.mtnev_egr_xfer_in, a_min=None,a_max=4))) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,,coef_xferdrive,,,,,,
util_TNCIN_MIX_TNCIN_time,TNCIN_MIX - TNC time,"@np.where(df.nev_mix_egress_available_in, df.nev_mix_egress_time_in, np.where(df.microtransit_mix_egress_available_in, df.microtransit_mix_egress_time_in, odt_skims['TNCIN_MIX_EGR'])) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNCIN_MIX_TNCIN_wait_time,TNCIN_MIX - TNC wait time,"@np.where(df.nev_mix_egress_available_in, nevWaitTime, np.where(df.microtransit_mix_egress_available_in, microtransitWaitTime, df.destSingleTNCWaitTime)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNCIN_MIX_TNCIN_fare,TNCIN_MIX - TNC fare,"@(~df.nev_mix_egress_available_in) * (~df.microtransit_mix_egress_available_in) * (~df.outbound) * ((np.maximum(TNC_single_baseFare + (odt_skims['TNCIN_MIX_EGR']/60 * driveSpeed) * TNC_single_costPerMile + odt_skims['TNCIN_MIX_EGR'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100) / (np.maximum(df.income,1000)**df.income_exponent))",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNCIN_MIX_Walk_access_time_(at_attraction_end),TNCIN_MIX - Walk access time (at attraction end),"@np.where(df.nev_mix_access_available_in, df.nev_mix_access_time_in, np.where(df.microtransit_mix_access_available_in, df.microtransit_mix_access_time_in, df.origin_mix_time)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,,coef_acctime,,,,,,
util_TNCIN_MIX_wait_access_time_(at_attraction_end),TNCIN_MIX - Access mt/nev wait time (at attraction end),"@np.where(df.nev_mix_access_available_in, nevWaitTime, np.where(df.microtransit_mix_access_available_in, microtransitWaitTime, 0)) * df.time_factor * ~df.outbound",,,,,,,,,,,,,,,,,coef_wait,,,,,,
util_TNCIN_MIX_Walk_other_time,TNCIN_MIX - Walk other time,@(odt_skims['TNCIN_MIX_XFERWALK']) * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_xwalk,,,,,,
util_TNCIN_MIX_Fare,TNCIN_MIX - Fare,"@df.transitSubsidyPassDiscount*(odt_skims['TNCIN_MIX_FARE'])*100*df.number_of_participants/(np.maximum(df.income,1000)**df.income_exponent) * ~df.outbound",,,,,,,,,,,,,,,,,coef_income,,,,,,
util_TNCIN_MIX_ASC,TNCIN_MIX - Alternative-specific constant,@df.tnc_mix_inb_asc * df.time_factor * ~df.outbound,,,,,,,,,,,,,,,,,coef_ivt,,,,,,
util_TNC_MIX - Female,TNC_MIX - Female,@(df.female),,,,,,,,,,,,,,,,,coef_female_tran,,,,,,
util_TNC_MIX - Destination Employment Density,TNC_MIX - Destination Employment Density,dMGRAEmpDen,,,,,,,,,,,,,,,,,coef_dEmpDen_dTran,,,,,,
#,Taxi,,,,,,,,,,,,,,,,,,,,,,,,
util_Taxi_Unavailable,Taxi - Unavailable,RideHail_available==0,,,,,,,,,,,,,,,,,,-999,,,,,
util_Taxi - In-vehicle time,Taxi - In-vehicle time,(s2_time_skims) * time_factor,,,,,,,,,,,,,,,,,,coef_ivt,,,,,
util_Taxi - Wait time,Taxi - Wait time,origTaxiWaitTime * time_factor,,,,,,,,,,,,,,,,,,coef_wait,,,,,
util_Taxi - Fare,Taxi - Fare,"@(((Taxi_baseFare + df.s2_dist_skims * Taxi_costPerMile + df.s2_time_skims * Taxi_costPerMinute) * 100 + df.s2_cost_skims)) / (np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,,,,,,coef_income,,,,,
#,TNC Single,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC Single_Unavailable,TNC Single - Unavailable,RideHail_available==0,,,,,,,,,,,,,,,,,,,-999,,,,
util_TNC Single - In-vehicle time,TNC Single - In-vehicle time,(s2_time_skims) * time_factor,,,,,,,,,,,,,,,,,,,coef_ivt,,,,
util_TNC Single - Wait time,TNC Single - Wait time,origSingleTNCWaitTime *  time_factor,,,,,,,,,,,,,,,,,,,coef_wait,,,,
util_TNC Single - Cost,TNC Single - Cost,"@((np.maximum(TNC_single_baseFare + df.s2_dist_skims * TNC_single_costPerMile + df.s2_time_skims * TNC_single_costPerMinute, TNC_single_costMinimum) * 100 + df.s2_cost_skims)) / (np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,,,,,,,coef_income,,,,
#,TNC Shared,,,,,,,,,,,,,,,,,,,,,,,,
util_TNC Shared_switch,TNC Shared - switch turn-off (depends on data availability),@(((~df.nev_available) & (~df.microtransit_available) & (scenarioYear==2022)) | (df.RideHail_available==0)),,,,,,,,,,,,,,,,,,,,-999,,,
util_TNC Shared - In-vehicle time,TNC Shared - In-vehicle time,"@(np.where(df.nev_available, df.nev_time, np.where(df.microtransit_available, df.microtransit_time, df.s3_time_skims))) * TNC_shared_IVTFactor * df.time_factor",,,,,,,,,,,,,,,,,,,,coef_ivt,,,
util_TNC Shared - Wait time,TNC Shared - Wait time,"@np.where(df.nev_available, nevWaitTime, np.where(df.microtransit_available, microtransitWaitTime, df.origSharedTNCWaitTime)) * df.time_factor",,,,,,,,,,,,,,,,,,,,coef_wait,,,
util_TNC Shared - Cost,TNC Shared - Cost,"@np.where(df.nev_available, nevCost, np.where(df.microtransit_available, microtransitCost, (np.maximum(TNC_shared_baseFare + df.s3_dist_skims * TNC_shared_costPerMile + df.s3_time_skims * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100 + df.s3_cost_skims))) / (np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,,,,,,,,,,coef_income,,,
util_calib_flexfleet,Calibration for flexible fleets,"microtransit_available | nev_available",,,,,,,,,,,,,,,,,,,,coef_calib_flexfleet,,,
#,School bus,,,,,,,,,,,,,,,,,,,,,,,,
util_School Bus - Unavailable,School Bus - Unavailable,SCHBUS_available==0,,,,,,,,,,,,,,,,,,,,,-999,,
util_School Bus - In-vehicle Time at 20 miles per hour,School Bus - In-vehicle Time at 20 miles per hour,(da_dist_skims)* 3 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_ivt,,
util_School Bus - Wait Time (asserted),School Bus - Wait Time (asserted),10 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_wait,,
util_School Bus - Walk Time (asserted),School Bus - Walk Time (asserted),10 * time_factor,,,,,,,,,,,,,,,,,,,,,coef_acctime,,
util_School Bus - Age 6 to 12,School Bus - Age 6 to 12,@(df.age > 5) * (df.age < 13),,,,,,,,,,,,,,,,,,,,,coef_age6to12_schb,,
#,Escooter,,,,,,,,,,,,,,,,,,,,,,,,
util_Escooter - Unavailable,Escooter - Unavailable,Escooter_available==0,,,,,,,,,,,,,,,,,,,,,,,-999
#,Ebike,,,,,,,,,,,,,,,,,,,,,,,,
util_Ebike - Unavailable,Ebike - Unavailable,Ebike_available==0,,,,,,,,,,,,,,,,,,,,,,-999,
#,indiv tour ASCs,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_numberofparticipan,abm 2+ calibration,(numberOfParticipantsInJointTour<=2)&(jointTour==1),,,coef_calib_numberofparticipants_SHARED3,,,,,,,,,,,,,,,,,,,,
util_calib_KNR Transit - Distance Parameter,abm 2+ calibration,"@df.c_ivt*5*np.maximum((10-df.da_dist_skims),0)*0.5",,,,,,,,,,,,coef_calib_civt5max10sovdistski_KNR_TRANSIT,coef_calib_civt5max10sovdistski_KNR_TRANSIT,coef_calib_civt5max10sovdistski_KNR_TRANSIT,coef_calib_civt5max10sovdistski_TNC_TRANSIT,coef_calib_civt5max10sovdistski_TNC_TRANSIT,coef_calib_civt5max10sovdistski_TNC_TRANSIT,,,,,,
util_calib_Walk-Transit - Distance Parameter,abm 2+ calibration,"@df.c_ivt*np.maximum((200+(-133*df.da_dist_skims)),0)*0.5",,,,,,coef_calib_civtmax200133sovdist_WALK_TRANSIT,coef_calib_civtmax200133sovdist_WALK_TRANSIT,coef_calib_civtmax200133sovdist_WALK_TRANSIT,,,,,,,,,,,,,,,
util_calib_PNR-Transit - Distance Parameter,abm 2+ calibration,"@df.c_ivt*np.maximum((45+(-2.5*df.da_dist_skims)),0)*0.5",,,,,,,,,coef_calib_civtmax4525sovdistsk_PNR_TRANSIT,coef_calib_civtmax4525sovdistsk_PNR_TRANSIT,coef_calib_civtmax4525sovdistsk_PNR_TRANSIT,,,,,,,,,,,,
util_calib_esctour1,abm 2+ calibration,tour_type=='escort',,,,coef_calib_esctour1_WALK,,,,,,,,,,,,,,,,,,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_tourda,abm 2+ calibration,tourDA,,coef_calib_tourda_SHARED2,coef_calib_tourda_SHARED3,coef_calib_tourda_WALK,coef_calib_tourda_BIKE,coef_calib_tourda_WALK_TRANSIT,coef_calib_tourda_WALK_TRANSIT,coef_calib_tourda_WALK_TRANSIT,coef_calib_tourda_PNR_TRANSIT,coef_calib_tourda_PNR_TRANSIT,coef_calib_tourda_PNR_TRANSIT,coef_calib_tourda_KNR_TRANSIT,coef_calib_tourda_KNR_TRANSIT,coef_calib_tourda_KNR_TRANSIT,coef_calib_tourda_TNC_TRANSIT,coef_calib_tourda_TNC_TRANSIT,coef_calib_tourda_TNC_TRANSIT,coef_calib_tourda_TAXI,coef_calib_tourda_TNC_SINGLE,coef_calib_tourda_TNC_SHARED,coef_calib_tourda_SCH_BUS,-999,-999
util_calib_tours2,abm 2+ calibration,tourS2,coef_calib_tours2_DRIVEALONE,coef_calib_tours2_SHARED2,coef_calib_tours2_SHARED3,coef_calib_tours2_WALK,coef_calib_tours2_BIKE,coef_calib_tours2_WALK_TRANSIT,coef_calib_tours2_WALK_TRANSIT,coef_calib_tours2_WALK_TRANSIT,coef_calib_tours2_PNR_TRANSIT,coef_calib_tours2_PNR_TRANSIT,coef_calib_tours2_PNR_TRANSIT,coef_calib_tours2_KNR_TRANSIT,coef_calib_tours2_KNR_TRANSIT,coef_calib_tours2_KNR_TRANSIT,coef_calib_tours2_TNC_TRANSIT,coef_calib_tours2_TNC_TRANSIT,coef_calib_tours2_TNC_TRANSIT,coef_calib_tours2_TAXI,coef_calib_tours2_TNC_SINGLE,coef_calib_tours2_TNC_SHARED,coef_calib_tours2_SCH_BUS,0,0
util_calib_tours3,abm 2+ calibration,tourS3,coef_calib_tours3_DRIVEALONE,coef_calib_tours3_SHARED2,coef_calib_tours3_SHARED3,coef_calib_tours3_WALK,coef_calib_tours3_BIKE,coef_calib_tours3_WALK_TRANSIT,coef_calib_tours3_WALK_TRANSIT,coef_calib_tours3_WALK_TRANSIT,coef_calib_tours3_PNR_TRANSIT,coef_calib_tours3_PNR_TRANSIT,coef_calib_tours3_PNR_TRANSIT,coef_calib_tours3_KNR_TRANSIT,coef_calib_tours3_KNR_TRANSIT,coef_calib_tours3_KNR_TRANSIT,coef_calib_tours3_TNC_TRANSIT,coef_calib_tours3_TNC_TRANSIT,coef_calib_tours3_TNC_TRANSIT,coef_calib_tours3_TAXI,coef_calib_tours3_TNC_SINGLE,coef_calib_tours3_TNC_SHARED,coef_calib_tours3_SCH_BUS,0,0
util_calib_tourwalk,abm 2+ calibration,tourWalk,coef_calib_tourwalk_DRIVEALONE,coef_calib_tourwalk_SHARED2,coef_calib_tourwalk_SHARED3,0,coef_calib_tourwalk_BIKE,coef_calib_tourwalk_WALK_TRANSIT,coef_calib_tourwalk_WALK_TRANSIT,coef_calib_tourwalk_WALK_TRANSIT,coef_calib_tourwalk_PNR_TRANSIT,coef_calib_tourwalk_PNR_TRANSIT,coef_calib_tourwalk_PNR_TRANSIT,coef_calib_tourwalk_KNR_TRANSIT,coef_calib_tourwalk_KNR_TRANSIT,coef_calib_tourwalk_KNR_TRANSIT,coef_calib_tourwalk_TNC_TRANSIT,coef_calib_tourwalk_TNC_TRANSIT,coef_calib_tourwalk_TNC_TRANSIT,coef_calib_tourwalk_TAXI,coef_calib_tourwalk_TNC_SINGLE,coef_calib_tourwalk_TNC_SHARED,coef_calib_tourwalk_SCH_BUS,-999,-999
util_calib_tourbike,abm 2+ calibration,tourBike,coef_calib_tourbike_DRIVEALONE,coef_calib_tourbike_SHARED2,coef_calib_tourbike_SHARED3,coef_calib_tourbike_WALK,coef_calib_tourbike_BIKE,coef_calib_tourbike_WALK_TRANSIT,coef_calib_tourbike_WALK_TRANSIT,coef_calib_tourbike_WALK_TRANSIT,coef_calib_tourbike_PNR_TRANSIT,coef_calib_tourbike_PNR_TRANSIT,coef_calib_tourbike_PNR_TRANSIT,coef_calib_tourbike_KNR_TRANSIT,coef_calib_tourbike_KNR_TRANSIT,coef_calib_tourbike_KNR_TRANSIT,coef_calib_tourbike_TNC_TRANSIT,coef_calib_tourbike_TNC_TRANSIT,coef_calib_tourbike_TNC_TRANSIT,coef_calib_tourbike_TAXI,coef_calib_tourbike_TNC_SINGLE,coef_calib_tourbike_TNC_SHARED,coef_calib_tourbike_SCH_BUS,-999,-999
util_calib_tourwtran,abm 2+ calibration,tourWTran,coef_calib_tourwtran_DRIVEALONE,coef_calib_tourwtran_SHARED2,coef_calib_tourwtran_SHARED3,coef_calib_tourwtran_WALK,coef_calib_tourwtran_BIKE,coef_calib_tourwtran_WALK_TRANSIT,coef_calib_tourwtran_WALK_TRANSIT,coef_calib_tourwtran_WALK_TRANSIT,coef_calib_tourwtran_PNR_TRANSIT,coef_calib_tourwtran_PNR_TRANSIT,coef_calib_tourwtran_PNR_TRANSIT,coef_calib_tourwtran_KNR_TRANSIT,coef_calib_tourwtran_KNR_TRANSIT,coef_calib_tourwtran_KNR_TRANSIT,coef_calib_tourwtran_TNC_TRANSIT,coef_calib_tourwtran_TNC_TRANSIT,coef_calib_tourwtran_TNC_TRANSIT,coef_calib_tourwtran_TAXI,coef_calib_tourwtran_TNC_SINGLE,coef_calib_tourwtran_TNC_SHARED,coef_calib_tourwtran_SCH_BUS,0,0
util_calib_tourpnr,abm 2+ calibration,tourPNR,coef_calib_tourpnr_DRIVEALONE,coef_calib_tourpnr_SHARED2,coef_calib_tourpnr_SHARED3,coef_calib_tourpnr_WALK,coef_calib_tourpnr_BIKE,coef_calib_tourpnr_WALK_TRANSIT,coef_calib_tourpnr_WALK_TRANSIT,coef_calib_tourpnr_WALK_TRANSIT,coef_calib_tourpnr_PNR_TRANSIT,coef_calib_tourpnr_PNR_TRANSIT,coef_calib_tourpnr_PNR_TRANSIT,coef_calib_tourpnr_KNR_TRANSIT,coef_calib_tourpnr_KNR_TRANSIT,coef_calib_tourpnr_KNR_TRANSIT,coef_calib_tourpnr_TNC_TRANSIT,coef_calib_tourpnr_TNC_TRANSIT,coef_calib_tourpnr_TNC_TRANSIT,coef_calib_tourpnr_TAXI,coef_calib_tourpnr_TNC_SINGLE,coef_calib_tourpnr_TNC_SHARED,coef_calib_tourpnr_SCH_BUS,-999,-999
util_calib_tourknr,abm 2+ calibration,tourKNR,coef_calib_tourknr_DRIVEALONE,coef_calib_tourknr_SHARED2,coef_calib_tourknr_SHARED3,coef_calib_tourknr_WALK,coef_calib_tourknr_BIKE,coef_calib_tourknr_WALK_TRANSIT,coef_calib_tourknr_WALK_TRANSIT,coef_calib_tourknr_WALK_TRANSIT,coef_calib_tourknr_PNR_TRANSIT,coef_calib_tourknr_PNR_TRANSIT,coef_calib_tourknr_PNR_TRANSIT,coef_calib_tourknr_KNR_TRANSIT,coef_calib_tourknr_KNR_TRANSIT,coef_calib_tourknr_KNR_TRANSIT,coef_calib_tourknr_TNC_TRANSIT,coef_calib_tourknr_TNC_TRANSIT,coef_calib_tourknr_TNC_TRANSIT,coef_calib_tourknr_TAXI,coef_calib_tourknr_TNC_SINGLE,coef_calib_tourknr_TNC_SHARED,coef_calib_tourknr_SCH_BUS,-999,-999
util_calib_tourtnr,abm 2+ calibration,tourTNR,coef_calib_tourtnr_DRIVEALONE,0,0,0,coef_calib_tourtnr_BIKE,0,0,0,coef_calib_tourtnr_PNR_TRANSIT,coef_calib_tourtnr_PNR_TRANSIT,coef_calib_tourtnr_PNR_TRANSIT,0,0,0,0,0,0,0,0,0,coef_calib_tourtnr_SCH_BUS,-999,-999
util_calib_tourmaas,abm 2+ calibration,tourMaaS,coef_calib_tourmaas_DRIVEALONE,coef_calib_tourmaas_SHARED2,coef_calib_tourmaas_SHARED3,coef_calib_tourmaas_WALK,coef_calib_tourmaas_BIKE,coef_calib_tourmaas_WALK_TRANSIT,coef_calib_tourmaas_WALK_TRANSIT,coef_calib_tourmaas_WALK_TRANSIT,coef_calib_tourmaas_PNR_TRANSIT,coef_calib_tourmaas_PNR_TRANSIT,coef_calib_tourmaas_PNR_TRANSIT,coef_calib_tourmaas_KNR_TRANSIT,coef_calib_tourmaas_KNR_TRANSIT,coef_calib_tourmaas_KNR_TRANSIT,coef_calib_tourmaas_TNC_TRANSIT,coef_calib_tourmaas_TNC_TRANSIT,coef_calib_tourmaas_TNC_TRANSIT,coef_calib_tourmaas_TAXI,coef_calib_tourmaas_TNC_SINGLE,coef_calib_tourmaas_TNC_SHARED,coef_calib_tourmaas_TNC_SCH_BUS,0,0
util_calib_tourschbus,abm 2+ calibration,tourSchBus,coef_calib_tourschbus_DRIVEALONE,coef_calib_tourschbus_SHARED2,coef_calib_tourschbus_SHARED3,coef_calib_tourschbus_WALK,coef_calib_tourschbus_BIKE,coef_calib_tourschbus_WALK_TRANSIT,coef_calib_tourschbus_WALK_TRANSIT,coef_calib_tourschbus_WALK_TRANSIT,coef_calib_tourschbus_PNR_TRANSIT,coef_calib_tourschbus_PNR_TRANSIT,coef_calib_tourschbus_PNR_TRANSIT,coef_calib_tourschbus_KNR_TRANSIT,coef_calib_tourschbus_KNR_TRANSIT,coef_calib_tourschbus_KNR_TRANSIT,coef_calib_tourschbus_TNC_TRANSIT,coef_calib_tourschbus_TNC_TRANSIT,coef_calib_tourschbus_TNC_TRANSIT,coef_calib_tourschbus_TAXI,coef_calib_tourschbus_TNC_SINGLE,coef_calib_tourschbus_TNC_SHARED,0,-999,-999
util_availability_tourebike,,tourEbike,-999,-999,-999,0,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,0,-999
util_availability_tourescooter,,tourEscooter,-999,-999,-999,0,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,0
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_jointtour1,abm 2+ calibration,jointTour==1,0,0,0,coef_calib_jointtour1_WALK,0,coef_calib_jointtour1_WALK_TRANSIT,coef_calib_jointtour1_WALK_TRANSIT,coef_calib_jointtour1_WALK_TRANSIT,coef_calib_jointtour1_PNR_TRANSIT,coef_calib_jointtour1_PNR_TRANSIT,coef_calib_jointtour1_PNR_TRANSIT,coef_calib_jointtour1_KNR_TRANSIT,coef_calib_jointtour1_KNR_TRANSIT,coef_calib_jointtour1_KNR_TRANSIT,coef_calib_jointtour1_TNC_TRANSIT,coef_calib_jointtour1_TNC_TRANSIT,coef_calib_jointtour1_TNC_TRANSIT,0,0,0,0,,
util_calib_tourbikejointtour0,abm 2+ calibration,tourBike*(jointTour==0),coef_calib_tourbikejointtour0_DRIVEALONE,coef_calib_tourbikejointtour0_SHARED2,coef_calib_tourbikejointtour0_SHARED3,coef_calib_tourbikejointtour0_WALK,coef_calib_tourbikejointtour0_BIKE,coef_calib_tourbikejointtour0_WALK_TRANSIT,coef_calib_tourbikejointtour0_WALK_TRANSIT,coef_calib_tourbikejointtour0_WALK_TRANSIT,coef_calib_tourbikejointtour0_PNR_TRANSIT,coef_calib_tourbikejointtour0_PNR_TRANSIT,coef_calib_tourbikejointtour0_PNR_TRANSIT,coef_calib_tourbikejointtour0_KNR_TRANSIT,coef_calib_tourbikejointtour0_KNR_TRANSIT,coef_calib_tourbikejointtour0_KNR_TRANSIT,coef_calib_tourbikejointtour0_TNC_TRANSIT,coef_calib_tourbikejointtour0_TNC_TRANSIT,coef_calib_tourbikejointtour0_TNC_TRANSIT,coef_calib_tourbikejointtour0_TAXI,coef_calib_tourbikejointtour0_TNC_SINGLE,coef_calib_tourbikejointtour0_TNC_SHARED,0,,
util_calib_tourbikejointtour1,abm 2+ calibration,tourBike*(jointTour==1),0,0,0,0,coef_calib_tourbikejointtour1_BIKE,0,0,0,0,0,0,0,0,0,0,0,0,coef_calib_tourbikejointtour1_TAXI,coef_calib_tourbikejointtour1_TNC_SINGLE,coef_calib_tourbikejointtour1_TNC_SHARED,0,,
util_calib_tourdajointtour0,abm 2+ calibration,tourDA*(jointTour==0),coef_calib_tourdajointtour0_DRIVEALONE,coef_calib_tourdajointtour0_SHARED2,coef_calib_tourdajointtour0_SHARED3,coef_calib_tourdajointtour0_WALK,coef_calib_tourdajointtour0_BIKE,coef_calib_tourdajointtour0_WALK_TRANSIT,coef_calib_tourdajointtour0_WALK_TRANSIT,coef_calib_tourdajointtour0_WALK_TRANSIT,coef_calib_tourdajointtour0_PNR_TRANSIT,coef_calib_tourdajointtour0_PNR_TRANSIT,coef_calib_tourdajointtour0_PNR_TRANSIT,coef_calib_tourdajointtour0_KNR_TRANSIT,coef_calib_tourdajointtour0_KNR_TRANSIT,coef_calib_tourdajointtour0_KNR_TRANSIT,coef_calib_tourdajointtour0_TNC_TRANSIT,coef_calib_tourdajointtour0_TNC_TRANSIT,coef_calib_tourdajointtour0_TNC_TRANSIT,coef_calib_tourdajointtour0_TAXI,coef_calib_tourdajointtour0_TNC_SINGLE,coef_calib_tourdajointtour0_TNC_SHARED,0,,
util_calib_tourdajointtour1,abm 2+ calibration,tourDA*(jointTour==1),0,coef_calib_tourdajointtour1_SHARED2,coef_calib_tourdajointtour1_SHARED3,coef_calib_tourdajointtour1_WALK,coef_calib_tourdajointtour1_BIKE,coef_calib_tourdajointtour1_WALK_TRANSIT,coef_calib_tourdajointtour1_WALK_TRANSIT,coef_calib_tourdajointtour1_WALK_TRANSIT,coef_calib_tourdajointtour1_PNR_TRANSIT,coef_calib_tourdajointtour1_PNR_TRANSIT,coef_calib_tourdajointtour1_PNR_TRANSIT,coef_calib_tourdajointtour1_KNR_TRANSIT,coef_calib_tourdajointtour1_KNR_TRANSIT,coef_calib_tourdajointtour1_KNR_TRANSIT,coef_calib_tourdajointtour1_TNC_TRANSIT,coef_calib_tourdajointtour1_TNC_TRANSIT,coef_calib_tourdajointtour1_TNC_TRANSIT,coef_calib_tourdajointtour1_TAXI,coef_calib_tourdajointtour1_TNC_SINGLE,coef_calib_tourdajointtour1_TNC_SHARED,0,,
util_calib_tourknrjointtour0,abm 2+ calibration,tourKNR*(jointTour==0),coef_calib_tourknrjointtour0_DRIVEALONE,coef_calib_tourknrjointtour0_SHARED2,coef_calib_tourknrjointtour0_SHARED3,coef_calib_tourknrjointtour0_WALK,coef_calib_tourknrjointtour0_BIKE,coef_calib_tourknrjointtour0_WALK_TRANSIT,coef_calib_tourknrjointtour0_WALK_TRANSIT,coef_calib_tourknrjointtour0_WALK_TRANSIT,coef_calib_tourknrjointtour0_PNR_TRANSIT,coef_calib_tourknrjointtour0_PNR_TRANSIT,coef_calib_tourknrjointtour0_PNR_TRANSIT,coef_calib_tourknrjointtour0_KNR_TRANSIT,coef_calib_tourknrjointtour0_KNR_TRANSIT,coef_calib_tourknrjointtour0_KNR_TRANSIT,coef_calib_tourknrjointtour0_TNC_TRANSIT,coef_calib_tourknrjointtour0_TNC_TRANSIT,coef_calib_tourknrjointtour0_TNC_TRANSIT,coef_calib_tourknrjointtour0_TAXI,coef_calib_tourknrjointtour0_TNC_SINGLE,coef_calib_tourknrjointtour0_TNC_SHARED,0,,
util_calib_tourknrjointtour1,abm 2+ calibration,tourKNR*(jointTour==1),coef_calib_tourknrjointtour1_DRIVEALONE,0,0,0,coef_calib_tourknrjointtour1_BIKE,0,0,0,coef_calib_tourknrjointtour1_PNR_TRANSIT,coef_calib_tourknrjointtour1_PNR_TRANSIT,coef_calib_tourknrjointtour1_PNR_TRANSIT,0,0,0,coef_calib_tourknrjointtour1_TNC_TRANSIT,coef_calib_tourknrjointtour1_TNC_TRANSIT,coef_calib_tourknrjointtour1_TNC_TRANSIT,coef_calib_tourknrjointtour1_TAXI,coef_calib_tourknrjointtour1_TNC_SINGLE,coef_calib_tourknrjointtour1_TNC_SHARED,0,,
util_calib_tourknrtotstops0,abm 2+ calibration,tourKNR*(totStops==0),coef_calib_tourknrtotstops0_DRIVEALONE,coef_calib_tourknrtotstops0_SHARED2,coef_calib_tourknrtotstops0_SHARED3,coef_calib_tourknrtotstops0_WALK,coef_calib_tourknrtotstops0_BIKE,coef_calib_tourknrtotstops0_WALK_TRANSIT,coef_calib_tourknrtotstops0_WALK_TRANSIT,coef_calib_tourknrtotstops0_WALK_TRANSIT,coef_calib_tourknrtotstops0_PNR_TRANSIT,coef_calib_tourknrtotstops0_PNR_TRANSIT,coef_calib_tourknrtotstops0_PNR_TRANSIT,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourknrtotstops>0,abm 2+ calibration,tourKNR*(totStops>0),coef_calib_tourknrtotstopsm0_DRIVEALONE,0,0,0,coef_calib_tourknrtotstopsm0_BIKE,0,0,0,coef_calib_tourknrtotstopsm0_PNR_TRANSIT,coef_calib_tourknrtotstopsm0_PNR_TRANSIT,coef_calib_tourknrtotstopsm0_PNR_TRANSIT,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourknrfirstofmult,abm 2+ calibration,tourKNR*firstOfMultipleTrips,coef_calib_tourknrfirstofmultip_DRIVEALONE,0,0,0,coef_calib_tourknrfirstofmultip_BIKE,0,0,0,coef_calib_tourknrfirstofmultip_PNR_TRANSIT,coef_calib_tourknrfirstofmultip_PNR_TRANSIT,coef_calib_tourknrfirstofmultip_PNR_TRANSIT,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourknrlastofmulti,abm 2+ calibration,tourKNR*lastofMultipleTrips,coef_calib_tourknrlastofmultipl_DRIVEALONE,0,0,0,coef_calib_tourknrlastofmultipl_BIKE,0,0,0,coef_calib_tourknrlastofmultipl_PNR_TRANSIT,coef_calib_tourknrlastofmultipl_PNR_TRANSIT,coef_calib_tourknrlastofmultipl_PNR_TRANSIT,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourebikejointtour0,,tourEbike*(jointTour==0),,,,coef_calib_tourebikejointtour0_WALK,,,,,,,,,,,,,,,,,,coef_calib_tourebikejointtour0_EBIKE,
util_calib_tourebikejointtour1,,tourEbike*(jointTour==1),,,,coef_calib_tourebikejointtour1_WALK,,,,,,,,,,,,,,,,,,coef_calib_tourebikejointtour1_EBIKE,
util_calib_tourescooterjointtour0,,tourEscooter*(jointTour==0),,,,coef_calib_tourescooterjointtour0_WALK,,,,,,,,,,,,,,,,,,,coef_calib_tourescooterjointtour0_ESCOOTER
util_calib_tourescooterjointtour1,,tourEscooter*(jointTour==1),,,,coef_calib_tourescooterjointtour1_WALK,,,,,,,,,,,,,,,,,,,coef_calib_tourescooterjointtour1_ESCOOTER
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_tourmaasjointtour0,abm 2+ calibration,tourMaaS*(jointTour==0),0,coef_calib_tourmaasjointtour0_SHARED2,coef_calib_tourmaasjointtour0_SHARED3,coef_calib_tourmaasjointtour0_WALK,0,0,0,0,0,0,0,0,0,0,0,0,0,coef_calib_tourmaasjointtour0_TAXI,coef_calib_tourmaasjointtour0_TNC_SINGLE,coef_calib_tourmaasjointtour0_TNC_SHARED,0,,
util_calib_tourmaasjointtour1,abm 2+ calibration,tourMaaS*(jointTour==1),0,coef_calib_tourmaasjointtour1_SHARED2,coef_calib_tourmaasjointtour1_SHARED3,coef_calib_tourmaasjointtour1_WALK,0,0,0,0,0,0,0,0,0,0,0,0,0,0,coef_calib_tourmaasjointtour1_TNC_SINGLE,coef_calib_tourmaasjointtour1_TNC_SHARED,0,,
util_calib_tourpnrjointtour0,abm 2+ calibration,tourPNR*(jointTour==0),coef_calib_tourpnrjointtour0_DRIVEALONE,coef_calib_tourpnrjointtour0_SHARED2,coef_calib_tourpnrjointtour0_SHARED3,coef_calib_tourpnrjointtour0_WALK,coef_calib_tourpnrjointtour0_BIKE,coef_calib_tourpnrjointtour0_WALK_TRANSIT,coef_calib_tourpnrjointtour0_WALK_TRANSIT,coef_calib_tourpnrjointtour0_WALK_TRANSIT,coef_calib_tourpnrjointtour0_PNR_TRANSIT,coef_calib_tourpnrjointtour0_PNR_TRANSIT,coef_calib_tourpnrjointtour0_PNR_TRANSIT,coef_calib_tourpnrjointtour0_KNR_TRANSIT,coef_calib_tourpnrjointtour0_KNR_TRANSIT,coef_calib_tourpnrjointtour0_KNR_TRANSIT,coef_calib_tourpnrjointtour0_TNC_TRANSIT,coef_calib_tourpnrjointtour0_TNC_TRANSIT,coef_calib_tourpnrjointtour0_TNC_TRANSIT,coef_calib_tourpnrjointtour0_TAXI,coef_calib_tourpnrjointtour0_TNC_SINGLE,coef_calib_tourpnrjointtour0_TNC_SHARED,0,,
util_calib_tourpnrjointtour1,abm 2+ calibration,tourPNR*(jointTour==1),0,0,0,0,coef_calib_tourpnrjointtour1_BIKE,0,0,0,0,0,0,coef_calib_tourpnrjointtour1_KNR_TRANSIT,coef_calib_tourpnrjointtour1_KNR_TRANSIT,coef_calib_tourpnrjointtour1_KNR_TRANSIT,coef_calib_tourpnrjointtour1_TNC_TRANSIT,coef_calib_tourpnrjointtour1_TNC_TRANSIT,coef_calib_tourpnrjointtour1_TNC_TRANSIT,coef_calib_tourpnrjointtour1_TAXI,coef_calib_tourpnrjointtour1_TNC_SINGLE,coef_calib_tourpnrjointtour1_TNC_SHARED,0,,
util_calib_tourpnrtotstops0,abm 2+ calibration,tourPNR*(totStops==0),coef_calib_tourpnrtotstops0_DRIVEALONE,coef_calib_tourpnrtotstops0_SHARED2,coef_calib_tourpnrtotstops0_SHARED3,coef_calib_tourpnrtotstops0_WALK,coef_calib_tourpnrtotstops0_BIKE,coef_calib_tourpnrtotstops0_WALK_TRANSIT,coef_calib_tourpnrtotstops0_WALK_TRANSIT,coef_calib_tourpnrtotstops0_WALK_TRANSIT,0,0,0,coef_calib_tourpnrtotstops0_KNR_TRANSIT,coef_calib_tourpnrtotstops0_KNR_TRANSIT,coef_calib_tourpnrtotstops0_KNR_TRANSIT,coef_calib_tourpnrtotstops0_TNC_TRANSIT,coef_calib_tourpnrtotstops0_TNC_TRANSIT,coef_calib_tourpnrtotstops0_TNC_TRANSIT,0,0,0,0,,
util_calib_tourpnrtotstops>0,abm 2+ calibration,tourPNR*(totStops>0),0,0,0,0,coef_calib_tourpnrtotstopsm0_BIKE,coef_calib_tourpnrtotstopsm0_WALK_TRANSIT,coef_calib_tourpnrtotstopsm0_WALK_TRANSIT,coef_calib_tourpnrtotstopsm0_WALK_TRANSIT,0,0,0,coef_calib_tourpnrtotstopsm0_KNR_TRANSIT,coef_calib_tourpnrtotstopsm0_KNR_TRANSIT,coef_calib_tourpnrtotstopsm0_KNR_TRANSIT,coef_calib_tourpnrtotstopsm0_TNC_TRANSIT,coef_calib_tourpnrtotstopsm0_TNC_TRANSIT,coef_calib_tourpnrtotstopsm0_TNC_TRANSIT,0,0,0,0,,
util_calib_tourpnrfirstofmult,abm 2+ calibration,tourPNR*firstOfMultipleTrips,0,0,0,0,coef_calib_tourpnrfirstofmultip_BIKE,0,0,0,0,0,0,coef_calib_tourpnrfirstofmultip_KNR_TRANSIT,coef_calib_tourpnrfirstofmultip_KNR_TRANSIT,coef_calib_tourpnrfirstofmultip_KNR_TRANSIT,coef_calib_tourpnrfirstofmultip_TNC_TRANSIT,coef_calib_tourpnrfirstofmultip_TNC_TRANSIT,coef_calib_tourpnrfirstofmultip_TNC_TRANSIT,0,0,0,0,,
util_calib_tourpnrlastofmulti,abm 2+ calibration,tourPNR*lastofMultipleTrips,0,0,0,0,coef_calib_tourpnrlastofmultipl_BIKE,0,0,0,0,0,0,coef_calib_tourpnrlastofmultipl_KNR_TRANSIT,coef_calib_tourpnrlastofmultipl_KNR_TRANSIT,coef_calib_tourpnrlastofmultipl_KNR_TRANSIT,coef_calib_tourpnrlastofmultipl_TNC_TRANSIT,coef_calib_tourpnrlastofmultipl_TNC_TRANSIT,coef_calib_tourpnrlastofmultipl_TNC_TRANSIT,0,0,0,0,,
util_calib_tours2jointtour0,abm 2+ calibration,tourS2*(jointTour==0),coef_calib_tours2jointtour0_DRIVEALONE,coef_calib_tours2jointtour0_SHARED2,coef_calib_tours2jointtour0_SHARED3,coef_calib_tours2jointtour0_WALK,coef_calib_tours2jointtour0_BIKE,coef_calib_tours2jointtour0_WALK_TRANSIT,coef_calib_tours2jointtour0_WALK_TRANSIT,coef_calib_tours2jointtour0_WALK_TRANSIT,coef_calib_tours2jointtour0_PNR_TRANSIT,coef_calib_tours2jointtour0_PNR_TRANSIT,coef_calib_tours2jointtour0_PNR_TRANSIT,coef_calib_tours2jointtour0_KNR_TRANSIT,coef_calib_tours2jointtour0_KNR_TRANSIT,coef_calib_tours2jointtour0_KNR_TRANSIT,coef_calib_tours2jointtour0_TNC_TRANSIT,coef_calib_tours2jointtour0_TNC_TRANSIT,coef_calib_tours2jointtour0_TNC_TRANSIT,coef_calib_tours2jointtour0_TAXI,coef_calib_tours2jointtour0_TNC_SINGLE,coef_calib_tours2jointtour0_TNC_SHARED,0,,
util_calib_tours2jointtour1,abm 2+ calibration,tourS2*(jointTour==1),coef_calib_tours2jointtour1_DRIVEALONE,coef_calib_tours2jointtour1_SHARED2,coef_calib_tours2jointtour1_SHARED3,coef_calib_tours2jointtour1_WALK,coef_calib_tours2jointtour1_BIKE,coef_calib_tours2jointtour1_WALK_TRANSIT,coef_calib_tours2jointtour1_WALK_TRANSIT,coef_calib_tours2jointtour1_WALK_TRANSIT,coef_calib_tours2jointtour1_PNR_TRANSIT,coef_calib_tours2jointtour1_PNR_TRANSIT,coef_calib_tours2jointtour1_PNR_TRANSIT,coef_calib_tours2jointtour1_KNR_TRANSIT,coef_calib_tours2jointtour1_KNR_TRANSIT,coef_calib_tours2jointtour1_KNR_TRANSIT,coef_calib_tours2jointtour1_TNC_TRANSIT,coef_calib_tours2jointtour1_TNC_TRANSIT,coef_calib_tours2jointtour1_TNC_TRANSIT,coef_calib_tours2jointtour1_TAXI,coef_calib_tours2jointtour1_TNC_SINGLE,coef_calib_tours2jointtour1_TNC_SHARED,0,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_tours2totstops0,abm 2+ calibration,tourS2*(totStops==0),coef_calib_tours2totstops0_DRIVEALONE,0,coef_calib_tours2totstops0_SHARED3,coef_calib_tours2totstops0_WALK,coef_calib_tours2totstops0_BIKE,coef_calib_tours2totstops0_WALK_TRANSIT,coef_calib_tours2totstops0_WALK_TRANSIT,coef_calib_tours2totstops0_WALK_TRANSIT,coef_calib_tours2totstops0_PNR_TRANSIT,coef_calib_tours2totstops0_PNR_TRANSIT,coef_calib_tours2totstops0_PNR_TRANSIT,coef_calib_tours2totstops0_KNR_TRANSIT,coef_calib_tours2totstops0_KNR_TRANSIT,coef_calib_tours2totstops0_KNR_TRANSIT,coef_calib_tours2totstops0_TNC_TRANSIT,coef_calib_tours2totstops0_TNC_TRANSIT,coef_calib_tours2totstops0_TNC_TRANSIT,0,0,0,0,,
util_calib_tours2firstofmulti,abm 2+ calibration,tourS2*firstOfMultipleTrips,coef_calib_tours2firstofmultipl_DRIVEALONE,0,coef_calib_tours2firstofmultipl_SHARED3,coef_calib_tours2firstofmultipl_WALK,coef_calib_tours2firstofmultipl_BIKE,coef_calib_tours2firstofmultipl_WALK_TRANSIT,coef_calib_tours2firstofmultipl_WALK_TRANSIT,coef_calib_tours2firstofmultipl_WALK_TRANSIT,coef_calib_tours2firstofmultipl_PNR_TRANSIT,coef_calib_tours2firstofmultipl_PNR_TRANSIT,coef_calib_tours2firstofmultipl_PNR_TRANSIT,coef_calib_tours2firstofmultipl_KNR_TRANSIT,coef_calib_tours2firstofmultipl_KNR_TRANSIT,coef_calib_tours2firstofmultipl_KNR_TRANSIT,coef_calib_tours2firstofmultipl_TNC_TRANSIT,coef_calib_tours2firstofmultipl_TNC_TRANSIT,coef_calib_tours2firstofmultipl_TNC_TRANSIT,0,0,0,0,,
util_calib_tours2lastofmultip,abm 2+ calibration,tourS2*lastofMultipleTrips,coef_calib_tours2lastofmultiple_DRIVEALONE,0,coef_calib_tours2lastofmultiple_SHARED3,coef_calib_tours2lastofmultiple_WALK,coef_calib_tours2lastofmultiple_BIKE,coef_calib_tours2lastofmultiple_WALK_TRANSIT,coef_calib_tours2lastofmultiple_WALK_TRANSIT,coef_calib_tours2lastofmultiple_WALK_TRANSIT,coef_calib_tours2lastofmultiple_PNR_TRANSIT,coef_calib_tours2lastofmultiple_PNR_TRANSIT,coef_calib_tours2lastofmultiple_PNR_TRANSIT,coef_calib_tours2lastofmultiple_KNR_TRANSIT,coef_calib_tours2lastofmultiple_KNR_TRANSIT,coef_calib_tours2lastofmultiple_KNR_TRANSIT,coef_calib_tours2lastofmultiple_TNC_TRANSIT,coef_calib_tours2lastofmultiple_TNC_TRANSIT,coef_calib_tours2lastofmultiple_TNC_TRANSIT,0,0,0,0,,
util_calib_tours3jointtour0,abm 2+ calibration,tourS3*(jointTour==0),coef_calib_tours3jointtour0_DRIVEALONE,coef_calib_tours3jointtour0_SHARED2,coef_calib_tours3jointtour0_SHARED3,coef_calib_tours3jointtour0_WALK,coef_calib_tours3jointtour0_BIKE,coef_calib_tours3jointtour0_WALK_TRANSIT,coef_calib_tours3jointtour0_WALK_TRANSIT,coef_calib_tours3jointtour0_WALK_TRANSIT,coef_calib_tours3jointtour0_PNR_TRANSIT,coef_calib_tours3jointtour0_PNR_TRANSIT,coef_calib_tours3jointtour0_PNR_TRANSIT,coef_calib_tours3jointtour0_KNR_TRANSIT,coef_calib_tours3jointtour0_KNR_TRANSIT,coef_calib_tours3jointtour0_KNR_TRANSIT,coef_calib_tours3jointtour0_TNC_TRANSIT,coef_calib_tours3jointtour0_TNC_TRANSIT,coef_calib_tours3jointtour0_TNC_TRANSIT,coef_calib_tours3jointtour0_TAXI,coef_calib_tours3jointtour0_TNC_SINGLE,coef_calib_tours3jointtour0_TNC_SHARED,0,,
util_calib_tours3jointtour1,abm 2+ calibration,tourS3*(jointTour==1),coef_calib_tours3jointtour1_DRIVEALONE,coef_calib_tours3jointtour1_SHARED2,coef_calib_tours3jointtour1_SHARED3,coef_calib_tours3jointtour1_WALK,coef_calib_tours3jointtour1_BIKE,coef_calib_tours3jointtour1_WALK_TRANSIT,coef_calib_tours3jointtour1_WALK_TRANSIT,coef_calib_tours3jointtour1_WALK_TRANSIT,coef_calib_tours3jointtour1_PNR_TRANSIT,coef_calib_tours3jointtour1_PNR_TRANSIT,coef_calib_tours3jointtour1_PNR_TRANSIT,coef_calib_tours3jointtour1_KNR_TRANSIT,coef_calib_tours3jointtour1_KNR_TRANSIT,coef_calib_tours3jointtour1_KNR_TRANSIT,coef_calib_tours3jointtour1_TNC_TRANSIT,coef_calib_tours3jointtour1_TNC_TRANSIT,coef_calib_tours3jointtour1_TNC_TRANSIT,coef_calib_tours3jointtour1_TAXI,coef_calib_tours3jointtour1_TNC_SINGLE,coef_calib_tours3jointtour1_TNC_SHARED,0,,
util_calib_tours3totstops0,abm 2+ calibration,tourS3*(totStops==0),coef_calib_tours3totstops0_DRIVEALONE,coef_calib_tours3totstops0_SHARED2,0,coef_calib_tours3totstops0_WALK,coef_calib_tours3totstops0_BIKE,coef_calib_tours3totstops0_WALK_TRANSIT,coef_calib_tours3totstops0_WALK_TRANSIT,coef_calib_tours3totstops0_WALK_TRANSIT,coef_calib_tours3totstops0_PNR_TRANSIT,coef_calib_tours3totstops0_PNR_TRANSIT,coef_calib_tours3totstops0_PNR_TRANSIT,coef_calib_tours3totstops0_KNR_TRANSIT,coef_calib_tours3totstops0_KNR_TRANSIT,coef_calib_tours3totstops0_KNR_TRANSIT,coef_calib_tours3totstops0_TNC_TRANSIT,coef_calib_tours3totstops0_TNC_TRANSIT,coef_calib_tours3totstops0_TNC_TRANSIT,0,0,0,0,,
util_calib_tours3autodeficien,abm 2+ calibration,tourS3*autoDeficientHH,0,coef_calib_tours3autodeficienth_SHARED2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,
util_calib_tours3firstofmulti,abm 2+ calibration,tourS3*firstOfMultipleTrips,coef_calib_tours3firstofmultipl_DRIVEALONE,coef_calib_tours3firstofmultipl_SHARED2,0,coef_calib_tours3firstofmultipl_WALK,coef_calib_tours3firstofmultipl_BIKE,coef_calib_tours3firstofmultipl_WALK_TRANSIT,coef_calib_tours3firstofmultipl_WALK_TRANSIT,coef_calib_tours3firstofmultipl_WALK_TRANSIT,coef_calib_tours3firstofmultipl_PNR_TRANSIT,coef_calib_tours3firstofmultipl_PNR_TRANSIT,coef_calib_tours3firstofmultipl_PNR_TRANSIT,coef_calib_tours3firstofmultipl_KNR_TRANSIT,coef_calib_tours3firstofmultipl_KNR_TRANSIT,coef_calib_tours3firstofmultipl_KNR_TRANSIT,coef_calib_tours3firstofmultipl_TNC_TRANSIT,coef_calib_tours3firstofmultipl_TNC_TRANSIT,coef_calib_tours3firstofmultipl_TNC_TRANSIT,0,0,0,0,,
util_calib_tours3lastofmultip,abm 2+ calibration,tourS3*lastofMultipleTrips,coef_calib_tours3lastofmultiple_DRIVEALONE,coef_calib_tours3lastofmultiple_SHARED2,0,coef_calib_tours3lastofmultiple_WALK,coef_calib_tours3lastofmultiple_BIKE,coef_calib_tours3lastofmultiple_WALK_TRANSIT,coef_calib_tours3lastofmultiple_WALK_TRANSIT,coef_calib_tours3lastofmultiple_WALK_TRANSIT,coef_calib_tours3lastofmultiple_PNR_TRANSIT,coef_calib_tours3lastofmultiple_PNR_TRANSIT,coef_calib_tours3lastofmultiple_PNR_TRANSIT,coef_calib_tours3lastofmultiple_KNR_TRANSIT,coef_calib_tours3lastofmultiple_KNR_TRANSIT,coef_calib_tours3lastofmultiple_KNR_TRANSIT,coef_calib_tours3lastofmultiple_TNC_TRANSIT,coef_calib_tours3lastofmultiple_TNC_TRANSIT,coef_calib_tours3lastofmultiple_TNC_TRANSIT,0,0,0,0,,
util_calib_tours3zeroautohh,abm 2+ calibration,tourS3*zeroAutoHH,0,coef_calib_tours3zeroautohh_SHARED2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_tourtnrjointtour0,abm 2+ calibration,tourTNR*(jointTour==0),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourtnrjointtour1,abm 2+ calibration,tourTNR*(jointTour==1),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourwtranjointtour0,abm 2+ calibration,tourWTran*(jointTour==0),coef_calib_tourwtranjointtour0_DRIVEALONE,coef_calib_tourwtranjointtour0_SHARED2,coef_calib_tourwtranjointtour0_SHARED3,coef_calib_tourwtranjointtour0_WALK,coef_calib_tourwtranjointtour0_BIKE,coef_calib_tourwtranjointtour0_WALK_TRANSIT,coef_calib_tourwtranjointtour0_WALK_TRANSIT,coef_calib_tourwtranjointtour0_WALK_TRANSIT,coef_calib_tourwtranjointtour0_PNR_TRANSIT,coef_calib_tourwtranjointtour0_PNR_TRANSIT,coef_calib_tourwtranjointtour0_PNR_TRANSIT,coef_calib_tourwtranjointtour0_KNR_TRANSIT,coef_calib_tourwtranjointtour0_KNR_TRANSIT,coef_calib_tourwtranjointtour0_KNR_TRANSIT,coef_calib_tourwtranjointtour0_TNC_TRANSIT,coef_calib_tourwtranjointtour0_TNC_TRANSIT,coef_calib_tourwtranjointtour0_TNC_TRANSIT,0,coef_calib_tourwtranjointtour0_TNC_SINGLE,coef_calib_tourwtranjointtour0_TNC_SHARED,0,,
util_calib_tourwtranjointtour1,abm 2+ calibration,tourWTran*(jointTour==1),coef_calib_tourwtranjointtour1_DRIVEALONE,coef_calib_tourwtranjointtour1_SHARED2,coef_calib_tourwtranjointtour1_SHARED3,coef_calib_tourwtranjointtour1_WALK,coef_calib_tourwtranjointtour1_BIKE,coef_calib_tourwtranjointtour1_WALK_TRANSIT,coef_calib_tourwtranjointtour1_WALK_TRANSIT,coef_calib_tourwtranjointtour1_WALK_TRANSIT,coef_calib_tourwtranjointtour1_PNR_TRANSIT,coef_calib_tourwtranjointtour1_PNR_TRANSIT,coef_calib_tourwtranjointtour1_PNR_TRANSIT,coef_calib_tourwtranjointtour1_KNR_TRANSIT,coef_calib_tourwtranjointtour1_KNR_TRANSIT,coef_calib_tourwtranjointtour1_KNR_TRANSIT,coef_calib_tourwtranjointtour1_TNC_TRANSIT,coef_calib_tourwtranjointtour1_TNC_TRANSIT,coef_calib_tourwtranjointtour1_TNC_TRANSIT,coef_calib_tourwtranjointtour1_TAXI,coef_calib_tourwtranjointtour1_TNC_SINGLE,coef_calib_tourwtranjointtour1_TNC_SHARED,0,,
util_calib_tourwtrantotstops0,abm 2+ calibration,tourWTran*(totStops==0),coef_calib_tourwtrantotstops0_DRIVEALONE,coef_calib_tourwtrantotstops0_SHARED2,coef_calib_tourwtrantotstops0_SHARED3,coef_calib_tourwtrantotstops0_WALK,coef_calib_tourwtrantotstops0_BIKE,0,0,0,coef_calib_tourwtrantotstops0_PNR_TRANSIT,coef_calib_tourwtrantotstops0_PNR_TRANSIT,coef_calib_tourwtrantotstops0_PNR_TRANSIT,coef_calib_tourwtrantotstops0_KNR_TRANSIT,coef_calib_tourwtrantotstops0_KNR_TRANSIT,coef_calib_tourwtrantotstops0_KNR_TRANSIT,coef_calib_tourwtrantotstops0_TNC_TRANSIT,coef_calib_tourwtrantotstops0_TNC_TRANSIT,coef_calib_tourwtrantotstops0_TNC_TRANSIT,0,0,0,coef_calib_tourwtrantotstops0_SCH_BUS,,
#,,,,,,,,,,,,,,,,,,,,,,,,,
util_calib_tourwtranfirstofmu,abm 2+ calibration,tourWTran*firstOfMultipleTrips,coef_calib_tourwtranfirstofmult_DRIVEALONE,coef_calib_tourwtranfirstofmult_SHARED2,coef_calib_tourwtranfirstofmult_SHARED3,coef_calib_tourwtranfirstofmult_WALK,coef_calib_tourwtranfirstofmult_BIKE,0,0,0,coef_calib_tourwtranfirstofmult_PNR_TRANSIT,coef_calib_tourwtranfirstofmult_PNR_TRANSIT,coef_calib_tourwtranfirstofmult_PNR_TRANSIT,coef_calib_tourwtranfirstofmult_KNR_TRANSIT,coef_calib_tourwtranfirstofmult_KNR_TRANSIT,coef_calib_tourwtranfirstofmult_KNR_TRANSIT,coef_calib_tourwtranfirstofmult_TNC_TRANSIT,coef_calib_tourwtranfirstofmult_TNC_TRANSIT,coef_calib_tourwtranfirstofmult_TNC_TRANSIT,0,0,0,coef_calib_tourwtranfirstofmult_SCH_BUS,,
util_calib_tourwtranlastofmul,abm 2+ calibration,tourWTran*lastofMultipleTrips,coef_calib_tourwtranlastofmulti_DRIVEALONE,coef_calib_tourwtranlastofmulti_SHARED2,coef_calib_tourwtranlastofmulti_SHARED3,coef_calib_tourwtranlastofmulti_WALK,coef_calib_tourwtranlastofmulti_BIKE,0,0,0,coef_calib_tourwtranlastofmulti_PNR_TRANSIT,coef_calib_tourwtranlastofmulti_PNR_TRANSIT,coef_calib_tourwtranlastofmulti_PNR_TRANSIT,coef_calib_tourwtranlastofmulti_KNR_TRANSIT,coef_calib_tourwtranlastofmulti_KNR_TRANSIT,coef_calib_tourwtranlastofmulti_KNR_TRANSIT,coef_calib_tourwtranlastofmulti_TNC_TRANSIT,coef_calib_tourwtranlastofmulti_TNC_TRANSIT,coef_calib_tourwtranlastofmulti_TNC_TRANSIT,0,0,0,coef_calib_tourwtranlastofmulti_SCH_BUS,,
util_calib_tourwtranzeroautoh,abm 2+ calibration,tourWTran*zeroAutoHH,0,0,0,coef_calib_tourwtranzeroautohh_WALK,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,,
util_calib_tourwalkjointtour0,abm 2+ calibration,tourWalk*(jointTour==0),coef_calib_tourwalkjointtour0_DRIVEALONE,coef_calib_tourwalkjointtour0_SHARED2,coef_calib_tourwalkjointtour0_SHARED3,coef_calib_tourwalkjointtour0_WALK,coef_calib_tourwalkjointtour0_BIKE,coef_calib_tourwalkjointtour0_WALK_TRANSIT,coef_calib_tourwalkjointtour0_WALK_TRANSIT,coef_calib_tourwalkjointtour0_WALK_TRANSIT,coef_calib_tourwalkjointtour0_PNR_TRANSIT,coef_calib_tourwalkjointtour0_PNR_TRANSIT,coef_calib_tourwalkjointtour0_PNR_TRANSIT,coef_calib_tourwalkjointtour0_KNR_TRANSIT,coef_calib_tourwalkjointtour0_KNR_TRANSIT,coef_calib_tourwalkjointtour0_KNR_TRANSIT,coef_calib_tourwalkjointtour0_TNC_TRANSIT,coef_calib_tourwalkjointtour0_TNC_TRANSIT,coef_calib_tourwalkjointtour0_TNC_TRANSIT,coef_calib_tourwalkjointtour0_TAXI,coef_calib_tourwalkjointtour0_TNC_SINGLE,coef_calib_tourwalkjointtour0_TNC_SHARED,0,,
util_calib_tourwalkjointtour1,abm 2+ calibration,tourWalk*(jointTour==1),coef_calib_tourwalkjointtour1_DRIVEALONE,coef_calib_tourwalkjointtour1_SHARED2,coef_calib_tourwalkjointtour1_SHARED3,0,coef_calib_tourwalkjointtour1_BIKE,coef_calib_tourwalkjointtour1_WALK_TRANSIT,coef_calib_tourwalkjointtour1_WALK_TRANSIT,coef_calib_tourwalkjointtour1_WALK_TRANSIT,coef_calib_tourwalkjointtour1_PNR_TRANSIT,coef_calib_tourwalkjointtour1_PNR_TRANSIT,coef_calib_tourwalkjointtour1_PNR_TRANSIT,coef_calib_tourwalkjointtour1_KNR_TRANSIT,coef_calib_tourwalkjointtour1_KNR_TRANSIT,coef_calib_tourwalkjointtour1_KNR_TRANSIT,coef_calib_tourwalkjointtour1_TNC_TRANSIT,coef_calib_tourwalkjointtour1_TNC_TRANSIT,coef_calib_tourwalkjointtour1_TNC_TRANSIT,coef_calib_tourwalkjointtour1_TAXI,coef_calib_tourwalkjointtour1_TNC_SINGLE,coef_calib_tourwalkjointtour1_TNC_SHARED,0,,
#,Micromobility,,,,,,,,,,,,,,,,,,,,,,,,
util_micromobility_long_access,Shut off micromobility if access time > threshold and not micromobility tour,@((df.MicroAccessTime > microAccessThreshold)& ~(df.tourEbike | df.tourEscooter)),,,,,,,,,,,,,,,,,,,,,,-999,-999
util_micromobility_long_access_microTour,Decrease micromobility if access time > threshold but tour is micromobility,@((df.MicroAccessTime > microAccessThreshold) & (df.tourEbike | df.tourEscooter)),,,,,,,,,,,,,,,,,,,,,,-20,-20
#util_micromobility_long_trip,Shut off ebike if distance > threshold,ebikeMaxDistance,,,,,,,,,,,,,,,,,,,,,,-999,
#util_micromobility_long_trip,Shut off escooter if distance > threshold,escooterMaxDistance,,,,,,,,,,,,,,,,,,,,,,,-999
util_ebike_ivt,Ebike utility for in-vehicle time,@(df.ebike_time * df.time_factor),,,,,,,,,,,,,,,,,,,,,,coef_ivt,
util_ebike_access,Ebike utility for access time time,@(microConstant + ((~df.ebike_owner)&(microRentTime + df.MicroAccessTime)))*df.time_factor,,,,,,,,,,,,,,,,,,,,,,coef_acctime,
util_ebike_cost_inb,Ebike utility for inbound cost,@((~df.ebike_owner) & ((microFixedCost + microVarCost*df.ebike_time)/df.cost_sensitivity)),,,,,,,,,,,,,,,,,,,,,,coef_income,
util_escooter_ivt,Escooter utility for in-vehicle time,@(df.escooter_time)*df.time_factor,,,,,,,,,,,,,,,,,,,,,,,coef_ivt
util_escooter_access,Escooter utility for access time,@(microRentTime + microConstant + df.MicroAccessTime) *df.time_factor,,,,,,,,,,,,,,,,,,,,,,,coef_acctime
util_escooter_cost_inb,Escooter utility for inbound cost,@(microFixedCost + microVarCost*df.escooter_time)/df.cost_sensitivity,,,,,,,,,,,,,,,,,,,,,,,coef_income