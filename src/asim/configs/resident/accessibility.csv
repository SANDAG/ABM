Description,Target,Expression
#,,
#,, auto peak
#,,
#,, assume peak occurs in AM for outbound and PM for inbound
peak round trip distance,_auPkTime,"skim_od[('SOV_TR_M_TIME', 'AM')] + skim_do[('SOV_TR_M_TIME', 'PM')]"
decay function,_decay, exp(_auPkTime * dispersion_parameter_automobile)
auto peak retail,auPkRetail,df.emp_retail * _decay
auto peak total,auPkTotal,df.emp_total * _decay
#,,
#,, auto off-peak
#,,
#,, assume midday occurs entirely in the midday period
off-peak round trip distance,_auOpTime,"skim_od[('SOV_TR_M_TIME', 'MD')] + skim_do[('SOV_TR_M_TIME', 'MD')]"
decay function,_decay, exp(_auOpTime * dispersion_parameter_automobile)
auto off-peak retail,auOpRetail,df.emp_retail * _decay
auto off-peak total,auOpTotal,df.emp_total * _decay
#,,
#,, transit peak
#,,
#,, FIXME - don't need WLK_TRN_WLK_WACC and WLK_TRN_WLK_WEGR as we are using walk_time?
#,, assume peak outbound transit occurs in AM
o-d peak transit time,_trPkTime_od,"skim_od[('WALK_MIX_TOTALIVTT', 'AM')]"
#,, assume peak inbound transit occurs in PM
o-d peak transit time,_trPkTime_do,"skim_do[('WALK_MIX_TOTALIVTT', 'PM')]"
peak transit time,_trPkTime,(_trPkTime_od + _trPkTime_do).clip(0)
round trip path is available,_rt_available,(_trPkTime_od > 0) & (_trPkTime_do > 0)
decay function,_decay,_rt_available * exp(_trPkTime * dispersion_parameter_transit)
transit peak retail,trPkRetail,df.emp_retail * _decay
transit peak total,trPkTotal,df.emp_total * _decay
transit peak total,trPkHH,df.hh * _decay
####,,
####,, transit off-peak
####,,
####,, assume off-peak inbound and outbound transit occurs in the MD time period
o-d off-peak transit time,_trOpTime_od,"skim_od[('WALK_MIX_TOTALIVTT', 'MD')]"
d-o off-peak transit time,_trOpTime_do,"skim_do[('WALK_MIX_TOTALIVTT', 'MD')]"
off-peak transit time,_trOpTime,(_trOpTime_od + _trPkTime_do).clip(0)
round trip path is available,_rt_available,(_trOpTime_od > 0) & (_trOpTime_do > 0)
decay function,_decay,_rt_available * exp(_trOpTime * dispersion_parameter_transit)
transit off-peak retail,trOpRetail,df.emp_retail * _decay
transit off-peak total,trOpTotal,df.emp_total * _decay
#,,
#,, non motorized
#,,
non-motorized round trip distance,_nmDist,skim_od['DIST'] + skim_do['DIST']
round trip path is available,_rt_available,_nmDist <= maximum_walk_distance
decay function,_decay,_rt_available * exp(_nmDist * dispersion_parameter_walk)
retail accessibility,nmRetail,df.emp_retail * _decay
total accessibility,nmTotal,df.emp_total * _decay
