Label,Description,Expression,DRIVEALONE,SHARED2,SHARED3,WALK,BIKE,WALK_LOC,WALK_PRM,WALK_MIX,TAXI,TNC_SINGLE,TNC_SHARED
#,drivealone,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,DRIVEALONE - Unavailable,autoAvailable == 0,-999,,,,,,,,,,
util_DRIVEALONE_Unavailable_for_zero_auto_households,DRIVEALONE - Unavailable if number of participants not 1,@(df.number_of_participants > 1),-999,,,,,,,,,,
util_Drive alone - In-vehicle time,Drive alone - In-vehicle time,(da_time_skims_inb + da_time_skims_out) * autoIVTFactor,coef_ivt,,,,,,,,,,
util_Drive alone - cost - inb,Drive alone - cost - inbound,@((costPerMile* df.autoCPMFactor * df.da_dist_skims_inb + df.da_cost_skims_inb) * df.coef_cost),coef_one,,,,,,,,,,
util_Drive alone - cost - out,Drive alone - cost - outbound,@((costPerMile * df.autoCPMFactor * df.da_dist_skims_out + df.da_cost_skims_out) * df.coef_cost),coef_one,,,,,,,,,,
util_Drive alone - Parking cost ,Drive alone - Parking cost ,@(df.parkingCost * df.autoParkingCostFactor * df.coef_cost),coef_one,,,,,,,,,,
util_Drive alone - Terminal Time - acc,Drive alone - Terminal Time - access,oTermTime * autoTermTimeFactor,coef_wacc,,,,,,,,,,
util_Drive alone - Terminal Time - egr,Drive alone - Terminal Time - egress,dTermTime * autoTermTimeFactor,coef_wegr,,,,,,,,,,
#,Shared ride2,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,Shared ride 2 HOV - Unavailable,autoAvailable == 0,,-999,,,,,,,,,
util_DRIVEALONE_Unavailable_for_zero_auto_households,Shared ride 2 HOV - Unavailable if number of participants not 2,@(df.number_of_participants != 2),,-999,,,,,,,,,
util_Shared ride 2 HOV - In -vehicle time,Shared ride 2 HOV - In -vehicle time,(s2_time_skims_inb + s2_time_skims_out) * autoIVTFactor,,coef_ivt,,,,,,,,,
util_Shared ride 2 HOV -  cost - inb,Shared ride 2 HOV -  cost - inbound,@(((costPerMile * df.autoCPMFactor * df.s2_dist_skims_inb + df.s2_cost_skims_inb) / OCC_SHARED2) * df.coef_cost),,coef_one,,,,,,,,,
util_Shared ride 2 HOV -  cost - out,Shared ride 2 HOV -  cost - outbound,@(((costPerMile * df.autoCPMFactor * df.s2_dist_skims_out + df.s2_cost_skims_out) / OCC_SHARED2) * df.coef_cost),,coef_one,,,,,,,,,
util_Shared ride 2 HOV - Parking cost ,Shared ride 2 HOV - Parking cost ,@((df.parkingCost * df.autoParkingCostFactor / OCC_SHARED2) * df.coef_cost),,coef_one,,,,,,,,,
util_Shared ride 2 HOV - Terminal Time - acc,Shared ride 2 HOV - Terminal Time - access,oTermTime * autoTermTimeFactor,,coef_wacc,,,,,,,,,
util_Shared ride 2 HOV - Terminal Time - egr,Shared ride 2 HOV - Terminal Time - egress,dTermTime * autoTermTimeFactor,,coef_wegr,,,,,,,,,
#,shared ride 3,,,,,,,,,,,,
util_DRIVEALONE_Unavailable,Shared ride 3 HOV - Unavailable,autoAvailable == 0,,,-999,,,,,,,,
util_DRIVEALONE_Unavailable_for_zero_auto_households,Shared ride 3 HOV - Unavailable if number of participants not 3 or more,@(df.number_of_participants < 3),,,-999,,,,,,,,
util_Shared ride 3 HOV - In -vehicle time,Shared ride 3 HOV - In -vehicle time,(s3_time_skims_out+s3_time_skims_inb) * autoIVTFactor,,,coef_ivt,,,,,,,,
util_Shared ride 3 HOV -  cost - inb,Shared ride 3 HOV -  cost - inbound,@(((costPerMile * df.s3_dist_skims_inb * df.autoCPMFactor + df.s3_cost_skims_inb) / OCC_SHARED3) * df.coef_cost),,,coef_one,,,,,,,,
util_Shared ride 3 HOV -  cost - out,Shared ride 3 HOV -  cost - outbound,@(((costPerMile* df.s3_dist_skims_out * df.autoCPMFactor + df.s3_cost_skims_out) / OCC_SHARED3) * df.coef_cost),,,coef_one,,,,,,,,
util_Shared ride 3 HOV - Parking cost ,Shared ride 3 HOV - Parking cost ,@(((df.parkingCost * df.autoParkingCostFactor) / OCC_SHARED3) * df.coef_cost),,,coef_one,,,,,,,,
util_Shared ride 3 HOV - Terminal Time - acc,Shared ride 3 HOV - Terminal Time - acc,oTermTime * autoTermTimeFactor,,,coef_wacc,,,,,,,,
util_Shared ride 3 HOV - Terminal Time - egr,Shared ride 3 HOV - Terminal Time - egr,dTermTime * autoTermTimeFactor,,,coef_wegr,,,,,,,,
#,Walk,,,,,,,,,,,,
util_Walk - Unavailable (in/outbound in preprocessor),Walk - Unavailable,walkAvailable==0,,,,-999,,,,,,,
util_Walk - time coefficient,Walk - time coefficient,(walk_time_skims_inb + walk_time_skims_out),,,,coef_walkTime,,,,,,,
util_Walk - Origin Mix,Walk - Origin Mix,oMGRAMix,,,,coef_oMix_nmot,,,,,,,
util_Walk - Origin Intersection Density,Walk - Origin Intersection Density,oMGRATotInt,,,,coef_oIntDen_nmot,,,,,,,
#,Bike,,,,,,,,,,,,
util_BIKE_Mode unavailable (in/outbound in preprocessor),Bike - Mode unavailable,bikeAvailable == 0,,,,,-999,,,,,,
util_Bike - time coefficient,Bike - time coefficient,(bike_time_skims_inb + bike_time_skims_out),,,,,coef_bikeTime,,,,,,
util_Bike - Origin Mix,BIke - Origin Mix,oMGRAMix,,,,,coef_oMix_nmot,,,,,,
util_Bike - Origin Intersection Density,Bike - Origin Intersection Density,oMGRATotInt,,,,,coef_oIntDen_nmot,,,,,,
#,WalktoTransit,,,,,,,,,,,,
util_Walk_LOC_Unavailable,Walk_LOC_Available,walk_LOC_available == 0,,,,,,-999,,,,,
util_Walk_LOC_In_vehicle_time,Walk_LOC - In-vehicle time,@(odt_skims['WALK_LOC_TOTALIVTT'] + dot_skims['WALK_LOC_TOTALIVTT']),,,,,,coef_ivt,,,,,
util_Walk_LOC_FIRST_wait_time,Walk_LOC - First wait time,@(odt_skims['WALK_LOC_FIRSTWAIT'] + dot_skims['WALK_LOC_FIRSTWAIT']),,,,,,coef_fwt,,,,,
util_Walk_LOC_transfer_wait_time,Walk_LOC - transfer wait time,@(odt_skims['WALK_LOC_XFERWAIT'] + dot_skims['WALK_LOC_XFERWAIT']),,,,,,coef_xwt,,,,,
util_WALK_LOC_transfer_waLK_time,WALK_LOC - transfer walk time,@(odt_skims['WALK_LOC_XFERWALK'] + dot_skims['WALK_LOC_XFERWALK']),,,,,,coef_waux,,,,,
util_Walk_LOC_number_of_transfers,Walk_LOC - number of transfers,@((odt_skims['WALK_LOC_XFERS'] + df.mtnev_egr_xfer).clip(0) + (dot_skims['WALK_LOC_XFERS'] + df.mtnev_egr_xfer).clip(0)),,,,,,coef_xfers,,,,,
util_Walk_LOC_Walk_access_time,Walk_LOC - Walk access time,@2 * df.origin_loc_time,,,,,,coef_wacc,,,,,
util_Walk_LOC_Walk_egress_time,Walk_LOC - Walk egress time,"@np.where(df.nev_local_egress_available, df.nev_local_egress_time, np.where(df.microtransit_local_egress_available, df.microtransit_local_egress_time, 2*df.dest_loc_time))",,,,,,coef_wegr,,,,,
util_Walk_LOC_wait_egress_time,Walk_LOC - Egress mt/nev wait time,"@1.5*np.where(df.nev_local_egress_available, 2*nevWaitTime, np.where(df.microtransit_local_egress_available, 2*microtransitWaitTime, 0))",,,,,,coef_ivt,,,,,
util_Walk_LOC_Fare,Walk_LOC - Fare,@(odt_skims['WALK_LOC_FARE'] + dot_skims['WALK_LOC_FARE'])* 100 * df.coef_cost,,,,,,coef_one,,,,,
#,,,,,,,,,,,,,
util_Walk_PRM_Unavailable,Walk_PRM_Available,walk_PRM_available == 0,,,,,,,-999,,,,
util_Walk_PRM_In_vehicle_time,Walk_PRM - In-vehicle time,@(odt_skims['WALK_PRM_TOTALIVTT'] + dot_skims['WALK_PRM_TOTALIVTT']),,,,,,,coef_ivt,,,,
util_Walk_PRM_In_vehicle_time_on_LRT,Walk_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_PRM_LRTIVTT'] + dot_skims['WALK_PRM_LRTIVTT']),,,,,,,coef_ivt,,,,
util_Walk_PRM_In_vehicle_time_on_CMR,Walk_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_PRM_CMRIVTT'] + dot_skims['WALK_PRM_CMRIVTT']),,,,,,,coef_ivt,,,,
util_Walk_PRM_In_vehicle_time_on_LTD_EXP,Walk_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_PRM_LTDEXPIVTT'] + dot_skims['WALK_PRM_LTDEXPIVTT'] + odt_skims['WALK_PRM_EXPIVTT'] + dot_skims['WALK_PRM_EXPIVTT']),,,,,,,coef_ivt,,,,
util_Walk_PRM_In_vehicle_time_on_URB,Walk_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_PRM_BRTIVTT'] + dot_skims['WALK_PRM_BRTIVTT']),,,,,,,coef_ivt,,,,
util_Walk_PRM_FIRST_wait_time,Walk_PRM - First wait time,@(odt_skims['WALK_PRM_FIRSTWAIT'] + dot_skims['WALK_PRM_FIRSTWAIT']),,,,,,,coef_fwt,,,,
util_Walk_PRM_transfer_wait_time,Walk_PRM - transfer wait time,@(odt_skims['WALK_PRM_XFERWAIT'] + dot_skims['WALK_PRM_XFERWAIT']),,,,,,,coef_xwt,,,,
util_WALK_PRM_transfer_waLK_time,WALK_PRM - transfer walk time,@(odt_skims['WALK_PRM_XFERWALK'] + dot_skims['WALK_PRM_XFERWALK']),,,,,,,coef_waux,,,,
util_Walk_PRM_number_of_transfers,Walk_PRM - number of transfers,@((odt_skims['WALK_PRM_XFERS'] + df.mtnev_egr_xfer).clip(0) + (dot_skims['WALK_PRM_XFERS'] + df.mtnev_egr_xfer).clip(0)),,,,,,,coef_xfers,,,,
util_Walk_PRM_Walk_access_time,Walk_PRM - Walk access time,@2 * df.origin_prm_time,,,,,,,coef_wacc,,,,
util_Walk_PRM_Walk_egress_time,Walk_PRM - Walk egress time,"@np.where(df.nev_prm_egress_available, df.nev_prm_egress_time, np.where(df.microtransit_prm_egress_available, df.microtransit_prm_egress_time, 2*df.dest_prm_time))",,,,,,,coef_wegr,,,,
util_Walk_PRM_wait_egress_time,Walk_PRM - Egress mt/nev wait time,"@1.5*np.where(df.nev_prm_egress_available, 2*nevWaitTime, np.where(df.microtransit_prm_egress_available, 2*microtransitWaitTime, 0))",,,,,,,coef_ivt,,,,
util_Walk_PRM_Fare,Walk_PRM - Fare,@(odt_skims['WALK_PRM_FARE'] + dot_skims['WALK_PRM_FARE'])* 100 * df.coef_cost,,,,,,,coef_one,,,,
util_WALK_PRM_ASC,WALK_PRM - Alternative-specific constant,(wlk_prm_out_asc + wlk_prm_inb_asc),,,,,,,coef_ivt,,,,
#,,,,,,,,,,,,,
util_Walk_MIX_Unavailable,Walk_MIX_Available,walk_MIX_available == 0,,,,,,,,-999,,,
util_Walk_MIX_In_vehicle_time,Walk_MIX - In-vehicle time,@(odt_skims['WALK_MIX_TOTALIVTT'] + dot_skims['WALK_MIX_TOTALIVTT']),,,,,,,,coef_ivt,,,
util_Walk_MIX_In_vehicle_time_on_LRT,Walk_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_MIX_LRTIVTT'] + dot_skims['WALK_MIX_LRTIVTT']),,,,,,,,coef_ivt,,,
util_Walk_MIX_In_vehicle_time_on_CMR,Walk_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_MIX_CMRIVTT'] + dot_skims['WALK_MIX_CMRIVTT']),,,,,,,,coef_ivt,,,
util_Walk_MIX_In_vehicle_time_on_LTD_EXP,Walk_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_MIX_LTDEXPIVTT'] + dot_skims['WALK_MIX_LTDEXPIVTT'] + odt_skims['WALK_MIX_EXPIVTT'] + dot_skims['WALK_MIX_EXPIVTT']),,,,,,,,coef_ivt,,,
util_Walk_MIX_In_vehicle_time_on_URB,Walk_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_MIX_BRTIVTT'] + dot_skims['WALK_MIX_BRTIVTT']),,,,,,,,coef_ivt,,,
util_Walk_MIX_FIRST_wait_time,Walk_MIX - First wait time,@(odt_skims['WALK_MIX_FIRSTWAIT'] + dot_skims['WALK_MIX_FIRSTWAIT']),,,,,,,,coef_fwt,,,
util_Walk_MIX_transfer_wait_time,Walk_MIX - transfer wait time,@(odt_skims['WALK_MIX_XFERWAIT'] + dot_skims['WALK_MIX_XFERWAIT']),,,,,,,,coef_xwt,,,
util_WALK_PRM_transfer_waLK_time,WALK_MIX - transfer walk time,@(odt_skims['WALK_MIX_XFERWALK'] + dot_skims['WALK_MIX_XFERWALK']),,,,,,,,coef_waux,,,
util_Walk_MIX_number_of_transfers,Walk_MIX - number of transfers,@((odt_skims['WALK_MIX_XFERS'] + df.mtnev_egr_xfer).clip(0) + (dot_skims['WALK_MIX_XFERS'] + df.mtnev_egr_xfer).clip(0)),,,,,,,,coef_xfers,,,
util_Walk_MIX_Walk_access_time,Walk_MIX - Walk access time,@2 * df.origin_mix_time,,,,,,,,coef_wacc,,,
util_Walk_MIX_Walk_egress_time,Walk_MIX - Walk egress time,"@np.where(df.nev_mix_egress_available, df.nev_mix_egress_time, np.where(df.microtransit_mix_egress_available, df.microtransit_mix_egress_time, 2*df.dest_mix_time))",,,,,,,,coef_wegr,,,
util_Walk_MIX_wait_egress_time,Walk_MIX - Egress mt/nev wait time,"@1.5*np.where(df.nev_mix_egress_available, 2*nevWaitTime, np.where(df.microtransit_mix_egress_available, 2*microtransitWaitTime, 0))",,,,,,,,coef_ivt,,,
util_Walk_MIX_Fare,Walk_MIX - Fare,@(odt_skims['WALK_MIX_FARE'] + dot_skims['WALK_MIX_FARE'])*100 * df.coef_cost,,,,,,,,coef_one,,,
util_WALK_MIX_ASC,WALK_MIX - Alternative-specific constant,(wlk_mix_out_asc + wlk_mix_inb_asc),,,,,,,,coef_ivt,,,
#,Taxi,,,,,,,,,,,,
util_Taxi - In-vehicle time,Taxi - In-vehicle time,(s2_time_skims_inb + s2_time_skims_out),,,,,,,,,coef_ivt,,
util_Taxi - Wait time,Taxi - Wait time,1.5*totalWaitTaxi,,,,,,,,,coef_ivt,,
util_Taxi - Fare,Taxi - Fare,@((((Taxi_baseFare*2 + (df.s2_dist_skims_out + df.s2_dist_skims_inb) * Taxi_costPerMile + (df.s2_time_skims_out + df.s2_time_skims_inb) * Taxi_costPerMinute)*100 + df.s2_cost_skims_out + df.s2_cost_skims_inb) / OCC_TAXI) * df.coef_cost),,,,,,,,,coef_one,,
#,TNC Single,,,,,,,,,,,,
util_TNC Single - In-vehicle time,TNC Single - In-vehicle time,(s2_time_skims_out + s2_time_skims_inb),,,,,,,,,,coef_ivt,
util_TNC Single - Wait time,TNC Single - Wait time,1.5*totalWaitSingleTNC,,,,,,,,,,coef_ivt,
util_TNC Single - Cost,TNC Single - Cost,"@(((np.maximum(TNC_single_baseFare*2 + (df.s2_dist_skims_out + df.s2_dist_skims_inb) * TNC_single_costPerMile + (df.s2_time_skims_out + df.s2_time_skims_inb) * TNC_single_costPerMinute, TNC_shared_costMinimum*2)*100 + df.s2_cost_skims_out + df.s2_cost_skims_inb) / OCC_TNC_SINGLE) * df.coef_cost)",,,,,,,,,,coef_one,
#,TNC Shared,,,,,,,,,,,,
util_TNC Shared_switch,TNC Shared - switch turn-off (depends on data availability),@((~df.nev_available) & (~df.microtransit_available) & (scenarioYear==2022)),,,,,,,,,,,-999
util_TNC Shared - In-vehicle time,TNC Shared - In-vehicle time,"@(np.where(df.nev_available, df.nev_time, np.where(df.microtransit_available, df.microtransit_time, (df.s3_time_skims_out + df.s3_time_skims_inb)))) * TNC_shared_IVTFactor",,,,,,,,,,,coef_ivt
util_TNC Shared - Wait time,TNC Shared - Wait time,"@1.5*np.where(df.nev_available, 2*nevWaitTime, np.where(df.microtransit_available, 2*microtransitWaitTime, df.totalWaitSharedTNC))",,,,,,,,,,,coef_ivt
util_TNC Shared - Cost,TNC Shared - Cost,"@np.where(df.nev_available, 2*nevCost, np.where(df.microtransit_available, 2*microtransitCost, ((np.maximum(TNC_shared_baseFare*2 + (df.s3_dist_skims_out + df.s3_dist_skims_inb) * TNC_shared_costPerMile + (df.s3_time_skims_out + df.s3_time_skims_inb)* TNC_shared_costPerMinute, TNC_shared_costMinimum*2)))*100 + df.s3_cost_skims_out + df.s3_cost_skims_inb) * df.coef_cost)",,,,,,,,,,,coef_one
Calibration work tour with auto,Work Tour with auto,is_work*autoAvailable,-0.4839,,0.8409,-0.0425,,-3,,,-0.191,-0.191,-999
Calibration recreation tour with auto,Recreation Tour with auto,is_recreation*autoAvailable,1.8714,,0.0491,0.8952,,-1.5518,,,1.3906,1.3906,-999
Calibration dining tour with auto,Dining Tour with auto,is_dining*autoAvailable,-0.0646,,6.496,9.7582,,0.7504,,,-5.8495,-5.8495,-999
Calibration work tour without auto,Work Tour without auto,is_work*(1-autoAvailable),-1.6299,,-0.4656,1.7654,,-3,,,-0.5247,-0.5247,-999
Calibration recreation tour without auto,Recreation Tour without auto,is_recreation*(1-autoAvailable),2.6609,,0.8791,3.1171,,-2.1633,,,4.9268,4.9268,-999
Calibration dining tour withou auto,Dining Tour without auto,is_dining*(1-autoAvailable),1.9729,,0.9246,3.129,,-2.268,,,2.2652,2.2652,-999
Calibration - transit,ABM2 Calibration - Transit,-1.8,,,,,,1,1,1,,,
Calibration,ABM2+ Calibration,1,0.0512,0,-0.0313,-0.085,0,-0.803,-0.903,-0.903,-0.4487,0.122,0
