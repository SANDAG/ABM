Label,Description,Expression,DRIVEALONE,SHARED2,SHARED3,WALK,BIKE,TAXI,TNC_SINGLE,TNC_SHARED,WALK_LOC,WALK_PRM,WALK_MIX
util_DA_unavailable,Drive alone - unavailable,da_available==0,coef_unavail,,,,,,,,,,
util_DA_IVT,Drive alone - In-vehicle time,da_time_skims * autoIVTFactor,coef_ivt,,,,,,,,,,
util_DA_op_cost,Drive alone - Operating cost,@df.coef_cost * (costPerMile * df.autoCPMFactor * df.da_dist_skims + df.da_cost_skims),coef_one,,,,,,,,,,
util_DA_park_cost,Drive alone - Parking cost,@df.coef_cost * df.parking_cost * df.autoParkingCostFactor,coef_one,,,,,,,,,,
#,,,,,,,,,,,,,
util_S2_unavailable,Shared ride 2 HOV - unavailable,s2_available==0,,coef_unavail,,,,,,,,,
util_S2_IVT,Shared ride 2 HOV - In -vehicle time,s2_time_skims * autoIVTFactor,,coef_ivt,,,,,,,,,
util_S2_op_cost,Shared ride 2 HOV - Operating cost,@df.coef_cost * (costPerMile * df.autoCPMFactor * df.s2_dist_skims + df.s2_cost_skims),,coef_one,,,,,,,,,
util_S2_park_cost,Shared ride 2 HOV - Parking cost,@df.coef_cost * df.autoParkingCostFactor * df.parking_cost,,coef_one,,,,,,,,,
#,,,,,,,,,,,,,
util_S3_unavailable,Shared ride 3 HOV - unavailable,s3_available==0,,,coef_unavail,,,,,,,,
util_S3_IVT,Shared ride 3+ HOV - In-vehicle time,s3_time_skims * autoIVTFactor,,,coef_ivt,,,,,,,,
util_S3_op_cost,Shared ride 3+ HOV - Operating cost,@df.coef_cost * (costPerMile * df.autoCPMFactor * df.s3_dist_skims + df.s3_cost_skims),,,coef_one,,,,,,,,
util_S3_park_cost,Shared ride 3+ HOV - Parking cost,@df.coef_cost * df.autoParkingCostFactor * df.parking_cost,,,coef_one,,,,,,,,
#,,,,,,,,,,,,,
util_WALK_unavail,Walk - Mode unavailable,walk_available==0,,,,coef_unavail,,,,,,,
util_WALK_time,Walk - Time,@coef_walkTime * df.walk_time,,,,coef_one,,,,,,,
# Bike mode not in CTRAMP!,,,,,,,,,,,,,
util_BIKE_unavail,Bike - Mode unavailable,1,,,,,coef_unavail,,,,,,
#util_BIKE_unavail,Bike - Mode unavailable,bike_available==0,,,,,coef_unavail,,,,,,
#util_BIKE_time,Bike - Time,@coef_bikeTime * df.bike_time,,,,,coef_one,,,,,,
#,,,,,,,,,,,,,
util_TAXI_IVT,Taxi - In-vehicle time,s2_time_skims,,,,,,coef_ivt,,,,,
util_TAXI_wait,Taxi - Wait time,1.5*taxi_wait_time,,,,,,coef_ivt,,,,,
util_TAXI_cost,Taxi - Fare,@df.coef_cost * ((Taxi_baseFare + (df.s2_dist_skims * Taxi_costPerMile) + (df.s2_time_skims * Taxi_costPerMinute)) * 100 + df.s2_cost_skims),,,,,,coef_one,,,,,
#,,,,,,,,,,,,,
util_TNC_SINGLE_IVT,TNC Single - In-vehicle time,s2_time_skims,,,,,,,coef_ivt,,,,
util_TNC_SINGLE_wait,TNC Single - Wait time,1.5 * tnc_single_wait_time,,,,,,,coef_ivt,,,,
util_TNC_SINGLE_cost,TNC Single - Cost,"@df.coef_cost * (np.maximum(TNC_single_baseFare + (df.s2_dist_skims * TNC_single_costPerMile) + (df.s2_time_skims * TNC_single_costPerMinute), TNC_single_costMinimum) * 100 + df.s2_cost_skims)",,,,,,,coef_one,,,,
#,,,,,,,,,,,,,
util_TNC Shared_switch,TNC Shared - switch turn-off (depends on data availability),@((~df.nev_available) & (~df.microtransit_available) & (scenarioYear==2022)),,,,,,,,-999,,,
util_TNC_SHARED_IVT,TNC Shared - In-vehicle time,"@np.where(df.nev_available, df.nev_time, np.where(df.microtransit_available, df.microtransit_time, df.s3_time_skims)) * TNC_shared_IVTFactor",,,,,,,,coef_ivt,,,
util_TNC_SHARED_wait,TNC Shared - Wait time,"@1.5 * np.where(df.nev_available, nevWaitTime, np.where(df.microtransit_available, microtransitWaitTime, df.tnc_shared_wait_time))",,,,,,,,coef_ivt,,,
util_TNC_SHARED_cost,TNC Shared - Cost,"@df.coef_cost * np.where(df.nev_available, nevCost, np.where(df.microtransit_available, microtransitCost, (np.maximum(TNC_shared_baseFare + (df.s3_dist_skims * TNC_shared_costPerMile) + (df.s3_time_skims * TNC_shared_costPerMinute), TNC_shared_costMinimum))) * 100 + df.s3_cost_skims)",,,,,,,,coef_one,,,
#,,,,,,,,,,,,,
ASC - Tour Mode DA,ASC - Tour Mode DA,tourDA,,-999,-999,,-999,,,-999,-999,-999,-999
ASC - Tour Mode S2,ASC - Tour Mode S2,tourS2,-999,,-999,,-999,,,-999,-999,-999,-999
ASC - Tour Mode S3,ASC - Tour Mode S3,tourS3,-999,-999,,,-999,,,-999,-999,-999,-999
ASC - Tour Mode Walk,ASC - Tour Mode Walk,tourWalk,-999,-999,-999,,-999,,,-999,-999,-999,-999
ASC - Tour Mode Bike,ASC - Tour Mode Bike,tourBike,-999,-999,-999,-999,,,,-999,-999,-999,-999
ASC - Tour Mode Walk-Transit,ASC - Tour Mode Walk-Transit,tourWalkTransit,-999,-999,-999,,-999,,,-999,,,
ASC - Tour MaaS,ASC - Tour MaaS,tourMaaS,-999,-999,-999,,-999,,,-999,-999,-999,-999
Work Tour,,is_work*autoAvailable,,,,,,,,,,,
Recreation Tour,,is_recreation*autoAvailable,,,,,,,,,,,
Dining Tour,,is_dining*autoAvailable,,,,,,,,,,,
Work Tour,,is_work*(1-autoAvailable),,,,,,,,,,,
Recreation Tour,,is_recreation*(1-autoAvailable),,,,,,,,,,,
Dining Tour,,is_dining*(1-autoAvailable),,,,,,,,,,,
Calibration,ABM2+ Calibration,,0.1356,0,0.0474,0.4619,0,-1.653630067,-1.343352214,0,-0.9328,-0.9328,-0.9328
#,,,,,,,,,,,,,
util_WALK_LOC_unavail,Walk-LOCtransit unavailable,walk_local_available==False,,,,,,,,,coef_unavail,,
util_WALK_LOC_Walk_access_time,WALK_LOC - Walk access time,"@np.where(df.nev_local_access_available_in & ~df.outbound, df.nev_local_access_time_in, np.where(df.microtransit_local_access_available_in & ~df.outbound, df.microtransit_local_access_time_in, df.origin_local_time)) * df.time_factor",,,,,,,,,coef_wacc,,
util_WALK_LOC_wait_access_time,WALK_LOC - Access mt/nev wait time,"@1.5 * np.where(df.nev_local_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_local_access_available_in & ~df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,coef_ivt,,
util_WALK_LOC_In_vehicle_time,WALK_LOC - In-vehicle time,@(odt_skims['WALK_LOC_TOTALIVTT'])  * df.time_factor,,,,,,,,,coef_ivt,,
util_WALK_LOC_iwait_time,WALK_LOC - wait time,@(odt_skims['WALK_LOC_FIRSTWAIT'])  * df.time_factor,,,,,,,,,coef_fwt,,
util_WALK_LOC_transfer_wait_time,WALK_LOC - transfer wait time,@(odt_skims['WALK_LOC_XFERWAIT']) * df.time_factor,,,,,,,,,coef_xwt,,
util_WALK_LOC_transfer_waLK_time,WALK_LOC - transfer walk time,@(odt_skims['WALK_LOC_XFERWALK']) * df.time_factor,,,,,,,,,coef_waux,,
util_WALK_LOC_transfers_penalty,WALK_LOC - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_LOC_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in, a_min=None,a_max=4)))  * df.time_factor",,,,,,,,,coef_xfers,,
util_WALK_LOC_Fare,WALK_LOC - Fare,@(odt_skims['WALK_LOC_FARE'])* 100 *df.number_of_participants * df.coef_cost,,,,,,,,,coef_one,,
util_WALK_LOC_Walk_egress_time,WALK_LOC - Walk egress time,"@np.where(df.nev_local_egress_available_out & df.outbound, df.nev_local_egress_time_out, np.where(df.microtransit_local_egress_available_out & df.outbound, df.microtransit_local_egress_time_out, df.dest_local_time)) * df.time_factor",,,,,,,,,coef_wegr,,
util_WALK_LOC_wait_egress_time,WALK_LOC - Egress mt/nev wait time,"@1.5 * np.where(df.nev_local_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_local_egress_available_out & df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,coef_ivt,,
##,,,,,,,,,,,,,
util_WalkTransit_Unavailable,WalkTransit_Available,walk_premium_available ==False ,,,,,,,,,,-999,
util_WALK_PRM_In_vehicle_time,WALK_PRM - In-vehicle time,@(odt_skims['WALK_PRM_TOTALIVTT'])  * df.time_factor,,,,,,,,,,coef_ivt,
util_WALK_PRM_In_vehicle_time_on_LRT,WALK_PRM - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_PRM_LRTIVTT'])  * df.time_factor,,,,,,,,,,coef_ivt,
util_WALK_PRM_In_vehicle_time_on_CMR,WALK_PRM - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_PRM_CMRIVTT'])  * df.time_factor,,,,,,,,,,coef_ivt,
util_WALK_PRM_In_vehicle_time_on_LTD_EXP,WALK_PRM - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_PRM_LTDEXPIVTT'] ) * df.time_factor,,,,,,,,,,coef_ivt,
util_WALK_PRM_In_vehicle_time_on_URB,WALK_PRM - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_PRM_BRTIVTT'])  * df.time_factor,,,,,,,,,,coef_ivt,
util_WALK_PRM_wait_time,WALK_PRM - wait time,@(odt_skims['WALK_PRM_FIRSTWAIT'])  * df.time_factor,,,,,,,,,,coef_fwt,
util_WALK_PRM_transfer_wait_time,WALK_PRM - transfer wait time,@(odt_skims['WALK_PRM_XFERWAIT']) * df.time_factor,,,,,,,,,,coef_xwt,
util_WALK_PRM_transfer_waLK_time,WALK_PRM - transfer walk time,@(odt_skims['WALK_PRM_XFERWALK']) * df.time_factor,,,,,,,,,,coef_waux,
util_WALK_PRM_transfers_penalty,WALK_PRM - number of transfers,"@(-23+23*np.exp(0.414*np.clip((odt_skims['WALK_PRM_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in), a_min=None,a_max=4)))  * df.time_factor",,,,,,,,,,coef_xfers,
util_WALK_PRM_Fare,WALK_PRM - Fare,@(odt_skims['WALK_PRM_FARE'])* 100 *df.number_of_participants * df.coef_cost,,,,,,,,,,coef_one,
util_WALK_PRM_Walk_access_time,WALK_PRM - Walk access time,"@np.where(df.nev_prm_access_available_in & ~df.outbound, df.nev_prm_access_time_in, np.where(df.microtransit_prm_access_available_in & ~df.outbound, df.microtransit_prm_access_time_in, df.origin_prm_time)) * df.time_factor",,,,,,,,,,coef_wacc,
util_WALK_PRM_wait_access_time,WALK_PRM - Access mt/nev wait time,"@1.5 * np.where(df.nev_prm_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_prm_access_available_in & ~df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,coef_ivt,
util_WALK_PRM_Walk_egress_time,WALK_PRM - Walk egress time,"@np.where(df.nev_prm_egress_available_out & df.outbound, df.nev_prm_egress_time_out, np.where(df.microtransit_prm_egress_available_out & df.outbound, df.microtransit_prm_egress_time_out, df.dest_prm_time)) * df.time_factor",,,,,,,,,,coef_wegr,
util_WALK_PRM_wait_egress_time,WALK_PRM - Egress mt/nev wait time,"@1.5 * np.where(df.nev_prm_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_prm_egress_available_out & df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,coef_ivt,
util_WALK_PRM_ASC,WALK_PRM - Alternative-specific constant,wlk_prm_asc,,,,,,,,,,coef_ivt,
##,,,,,,,,,,,,,
util_WALK_MIX_Unavailable,WALK_MIX - Unavailable,walk_mix_available ==False ,,,,,,,,,,,-999
util_WALK_MIX_In_vehicle_time,WALK_MIX - In-vehicle time,@(odt_skims['WALK_MIX_TOTALIVTT']) * df.time_factor,,,,,,,,,,,coef_ivt
util_WALK_MIX_In_vehicle_time_on_LRT,WALK_MIX - In-vehicle time on LRT,@(ivt_lrt_multiplier - 1) * (odt_skims['WALK_MIX_LRTIVTT']) * df.time_factor,,,,,,,,,,,coef_ivt
util_WALK_MIX_In_vehicle_time_on_CMR,WALK_MIX - In-vehicle time on CMR,@(ivt_cmr_multiplier - 1) * (odt_skims['WALK_MIX_CMRIVTT']) * df.time_factor,,,,,,,,,,,coef_ivt
util_WALK_MIX_In_vehicle_time_on_LTD_EXP,WALK_MIX - In-vehicle time on LTD and EXP,@(ivt_ltd_multiplier - 1) * (odt_skims['WALK_MIX_LTDEXPIVTT']) * df.time_factor,,,,,,,,,,,coef_ivt
util_WALK_MIX_In_vehicle_time_on_URB,WALK_MIX - In-vehicle time on BRT,@(ivt_brt_multiplier - 1) * (odt_skims['WALK_MIX_BRTIVTT']) * df.time_factor,,,,,,,,,,,coef_ivt
util_WALK_MIX_FIRST_wait_time,WALK_MIX - First wait time,@(odt_skims['WALK_MIX_FIRSTWAIT']) * df.time_factor,,,,,,,,,,,coef_fwt
util_WALK_MIX_transfer_wait_time,WALK_MIX - transfer wait time,@(odt_skims['WALK_MIX_XFERWAIT']) * df.time_factor,,,,,,,,,,,coef_xwt
util_WALK_MIX_number_of_transfers,WALK_MIX - number of transfers,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_MIX_XFERS'] + df.outbound*df.mtnev_egr_xfer_out + ~df.outbound*df.mtnev_acc_xfer_in, a_min=None,a_max=4)))  * df.time_factor",,,,,,,,,,,coef_xfers
util_WALK_MIX_transfer_waLK_time,WALK_MIX - transfer walk time,@(odt_skims['WALK_MIX_XFERWALK']) * df.time_factor,,,,,,,,,,,coef_waux
util_WALK_MIX_Fare,WALK_MIX - Fare,@(odt_skims['WALK_MIX_FARE'])* 100 *df.number_of_participants * df.coef_cost,,,,,,,,,,,coef_one
util_WALK_MIX_Walk_access_time,WALK_MIX - Walk access time,"@np.where(df.nev_mix_access_available_in & ~df.outbound, df.nev_mix_access_time_in, np.where(df.microtransit_mix_access_available_in & ~df.outbound, df.microtransit_mix_access_time_in, df.origin_mix_time)) * df.time_factor",,,,,,,,,,,coef_wacc
util_WALK_MIX_wait_access_time,WALK_MIX - Access mt/nev wait time,"@1.5 * np.where(df.nev_mix_access_available_in & ~df.outbound, nevWaitTime, np.where(df.microtransit_mix_access_available_in & ~df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,coef_ivt
util_WALK_MIX_Walk_egress_time,WALK_MIX - Walk egress time,"@np.where(df.nev_mix_egress_available_out & df.outbound, df.nev_mix_egress_time_out, np.where(df.microtransit_mix_egress_available_out & df.outbound, df.microtransit_mix_egress_time_out, df.dest_mix_time)) * df.time_factor",,,,,,,,,,,coef_wegr
util_WALK_MIX_wait_egress_time,WALK_MIX - Egress mt/nev wait time,"@1.5 * np.where(df.nev_mix_egress_available_out & df.outbound, nevWaitTime, np.where(df.microtransit_mix_egress_available_out & df.outbound, microtransitWaitTime, 0)) * df.time_factor",,,,,,,,,,,coef_ivt
util_WALK_MIX_ASC,WALK_MIX - Alternative-specific constant,wlk_mix_asc,,,,,,,,,,,coef_ivt