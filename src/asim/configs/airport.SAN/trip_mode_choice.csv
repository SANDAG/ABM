Label,Description,Expression,PARK_LOC1,PARK_LOC4,RIDEHAIL_LOC1,TAXI_LOC1,CURB_LOC1,RENTAL,SHUTTLEVAN,WALK_LOC,KNR_LOC
,,,,,,,,,,,
taxi_unavailable,Taxi availability,@taxi_available == 0,,,,-999,,,,,
parkloc1_av,Parking location 1 availability,@df['parkloc1_av'],-999,,,,,,,,
parkloc4_av,Parking location 2 availability,@df['parkloc4_av'],,-999,,,,,,,
curbloc1_av,Curb location 1 availability,@df['curbloc1_av'],,,,,-999,,,,
ridehailloc1_av,Ridehail location 1 availability,@df['ridehailloc1_av'],,,-999,-999,,,,,
util_WalkTransit_Unavailable,WalkTransit_Available,walk_local_available == False,,,,,,,,-999,
util_KNR_LOC_Unavailable,KNR_LOC_unavailable,knr_local_available == False,,,,,,,,,-999
res_modes,remove modes not available to residents,resident == True,,,,,,-999,-999,,
vis_modes,remove modes not available to visitors,visitor == True,-999,-999,,,,,,,
constant_asc,ASC,"@np.repeat(True,len(df))",coef_asc_parked_onsite,coef_asc_parked_offsite,coef_asc_tnc,coef_asc_taxi,0,coef_asc_rental,coef_asc_shuttle,coef_asc_transit,coef_asc_transit
,,,,,,,,,,,
util_park1_ivt,IVT to parking location 1 - Business,"@np.nan_to_num(np.log(1 + df['partySizeParkLocation1AutoIVT']), posinf=999, neginf=0)",coef_ivt,,,,,,,,
util_park1_cost,Driving cost to parking location 1 - Business,@np.log(1 + df['partySizeParkLocation1AutoDist']*costPerMile + df['partySizeParkLocation1AutoToll']),coef_cost,,,,,,,,
util_park1_parkcost,Parking cost at parking location 1 - Business,"@np.log(1 + (np.maximum(df['nights'],0)*parkLocation1CostDay + parkLocation1CostDay)*100)",coef_cost,,,,,,,,
parkloc1_acc_ivt,IVT for access park loc 1 to terminal - Business,"@np.nan_to_num(np.log(1 + parkLocation1InVehicleTime), posinf=999, neginf=0)",coef_ivt,,,,,,,,
parkloc1_acc_ovt,OVT for access park loc 1 to terminal - Business,@np.log(1 + parkLocation1WalkTime + parkLocation1WaitTime),coef_ovt,,,,,,,,
parkloc1_acc_cost,Cost for access park loc 1 to terminal - Business,"@np.nan_to_num(np.log(1 + parkLocation1AccessCost*100), posinf=999, neginf=0)",coef_cost,,,,,,,,
,,,,,,,,,,,
util_park2_ivt,IVT to parking location 2 - Business,"@np.nan_to_num(np.log(1 + df['partySizeParkLocation2AutoIVT']), posinf=999, neginf=0)",,coef_ivt,,,,,,,
util_park2_cost,Driving cost to parking location 2 - Business,"@np.nan_to_num(np.log(1 + df['partySizeParkLocation2AutoDist']*costPerMile + df['partySizeParkLocation2AutoToll']), posinf=999, neginf=0)",,coef_cost,,,,,,,
util_park2_parkcost,Parking cost at parking location 2 - Business,"@np.nan_to_num(np.log(1 + (np.maximum(df['nights'],0)*parkLocation2CostDay + parkLocation2CostDay)*100), posinf=999, neginf=0)",,coef_cost,,,,,,,
parkloc4_acc_ivt,IVT for access park loc 2 to terminal - Business,"@np.nan_to_num(np.log(1 + parkLocation2InVehicleTime), posinf=999, neginf=0)",,coef_ivt,,,,,,,
parkloc4_acc_ovt,OVT for access park loc 2 to terminal - Business,"@np.nan_to_num(np.log(1 + parkLocation2WalkTime + parkLocation2WaitTime), posinf=999, neginf=0)",,coef_ovt,,,,,,,
parkloc4_acc_cost,Cost for access park loc 2 to terminal - Business,"@np.nan_to_num(np.log(1 + parkLocation2AccessCost*100), posinf=999, neginf=0)",,coef_cost,,,,,,,
,,,,,,,,,,,
util_curb1_ivt,IVT to curb location 1 - Business,"@np.nan_to_num(np.log(1 + df['partySizeCurbLocation1AutoIVT']), posinf=999, neginf=0)",,,,,coef_ivt,,,,
util_curb1_cost,Driving cost to curb location 1 - Business,"@np.nan_to_num(np.log(1 + df['partySizeCurbLocation1AutoDist']*costPerMile + df['partySizeCurbLocation1AutoToll']), posinf=999, neginf=0)",,,,,coef_cost,,,,
curbloc1_acc_ivt,IVT for access curb loc 1 to terminal - Business,"@np.nan_to_num(np.log(1 + curbLocation1InVehicleTime), posinf=999, neginf=0)",,,,,coef_ivt,,,,
curbloc1_acc_ovt,OVT for access curb loc 1 to terminal - Business,"@np.nan_to_num(np.log(1 + curbLocation1WalkTime + curbLocation1WaitTime), posinf=999, neginf=0)",,,,,coef_ovt,,,,
,,,,,,,,,,,
util_ridehail1_ivt,IVT to ridehail location 1 - Business,@np.log(1 + df['partySizeRideHailLocation1AutoIVT']),,,coef_ivt,,,,,,
util_ridehail1_cost,Driving cost to ridehail location 1 - Business,"@np.log(1 + np.maximum((df['partySizeRideHailLocation1AutoIVT']*ridehailCostPerMinute + df['partySizeRideHailLocation1AutoDist']*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 + df['partySizeRideHailLocation1AutoToll'])",,,coef_cost,,,,,,
util_ridehail1_ovt,ridehail wait + walk access time - Business,@np.log(1 + ridehailWaitTime + ridehailLocation1AccessWalkTime),,,coef_ovt,,,,,,
util_taxi1_ivt,IVT to taxi location 1 - Business,@np.log(1 + df['partySizeRideHailLocation1AutoIVT']),,,,coef_ivt,,,,,
util_taxi1_cost,Cost to Taxi location 1 - Business,"@np.log(1 + np.maximum((df['partySizeRideHailLocation1AutoIVT']*taxiCostPerMinute + df['partySizeRideHailLocation1AutoDist']*taxiCostPerMile + taxiCostInitial),taxiCostMinimum) * 100 + df['partySizeRideHailLocation1AutoToll'])",,,,coef_cost,,,,,
util_taxi1_ovt,Taxi wait time & Taxi location 1 access time - Business,@np.log(1 + taxiWaitTime + taxiLocation1AccessWalkTime),,,,coef_ovt,,,,,
,,,,,,,,,,,
util_rental_ivt,IVT to curb location 6,@np.log(df['partySizeRentalLocationAutoIVT'] + rentalCarInVehicleTime),,,,,,coef_ivt,,,
util_rental_cost,Driving cost to curb location 6,@np.log(1+df['partySizeRentalLocationAutoDist']*costPerMile + df['partySizeRentalLocationAutoToll']),,,,,,coef_cost,,,
util_rental_walk,rental car walk time,@np.log(rentalCarWalkTime + rentalCarWaitTime),,,,,,coef_ovt,,,
,,,,,,,,,,,
util_ShuttleVanLocation_cost,Driving cost to shuttle van location,@np.log(1+df['partySizeShuttleVanLocationAutoDist']*costPerMile + df['partySizeShuttleVanLocationAutoToll']),,,,,,,coef_cost,,
util_ShuttleVanLocation_ivt,IVT to shuttle van location,@np.log(1+df['partySizeShuttleVanLocationAutoIVT']),,,,,,,coef_ivt,,
util_courtesy_wait,Wait time,@np.log(terminalWaitTime + terminalWalkTime + hotelCourtesyWalkTime),,,,,,,coef_ovt,,
,,,,,,,,,,,
#,WALK_LOC,,,,,,,,,,
util_WALK_LOC_ivt,WALK_LOC - IVT - Business,"@np.nan_to_num(np.log(1 + odt_skims['WALK_LOC_TOTALIVTT']), posinf=999, neginf=0)",,,,,,,,coef_ivt,
util_WALK_LOC_ovt,WALK_LOC - wait + transfer wait/walk + access/egress - Business,@np.log(1 + (odt_skims['WALK_LOC_FIRSTWAIT']*c_fwt) + (odt_skims['WALK_LOC_XFERWAIT']*(c_xwt+c_waux)) + (df.origin_local_time)*c_walk + (df.dest_local_time)*c_walk),,,,,,,,coef_ovt,
util_WALK_LOC_cost,WALK_LOC - Fare - Business,"@np.nan_to_num(np.log(1 + (odt_skims['WALK_LOC_FARE']) * df.party_size *100), posinf=999, neginf=0)",,,,,,,,coef_cost,
util_WALK_LOC_transfers_penalty,WALK_LOC - number of transfers - Business,"@(-23+23*np.exp(0.414*np.clip(odt_skims['WALK_LOC_XFERS'], a_min=None,a_max=4)))*1.5",,,,,,,,coef_ovt,
,,,,,,,,,,,
#,KNR_LOC,,,,,,,,,,
util_KNR_LOC_ivt,KNR_LOC - IVT - Business,"@np.nan_to_num(np.log(1 + odt_skims['KNROUT_LOC_TOTALIVTT']), posinf=999, neginf=0)",,,,,,,,,coef_ivt
util_KNR_LOC_ovt,KNR_LOC - wait + transfer wait/walk + access/egress - Business,@np.log(1 + (odt_skims['KNROUT_LOC_FIRSTWAIT']*c_fwt) + (odt_skims['KNROUT_LOC_XFERWAIT']*(c_xwt+c_waux)) + (df.origin_local_time)*c_walk + (df.dest_local_time)*c_walk),,,,,,,,,coef_ovt
util_KNR_LOC_cost,KNR_LOC - Fare - Business,"@np.nan_to_num(np.log(1 + (odt_skims['KNROUT_LOC_FARE']) * df.party_size *100), posinf=999, neginf=0)",,,,,,,,,coef_cost
util_KNR_LOC_transfers_penalty,KNR_LOC - number of transfers - Business,"@(-23+23*np.exp(0.414*np.clip(odt_skims['KNROUT_LOC_XFERS'], a_min=None,a_max=4)))*1.5",,,,,,,,,coef_ovt
