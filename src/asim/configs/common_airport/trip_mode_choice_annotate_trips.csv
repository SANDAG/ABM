Description,Target,Expression
,_origin_local_dist,"reindex(land_use.walk_dist_local_bus, df.origin)"
,_origin_prm_dist,"reindex(land_use.walk_dist_premium_transit, df.origin)"
,_origin_mix_dist,"np.minimum(_origin_local_dist, _origin_prm_dist)"
,_dest_local_dist,"reindex(land_use.walk_dist_local_bus, df.destination)"
,_dest_prm_dist,"reindex(land_use.walk_dist_premium_transit, df.destination)"
,_dest_mix_dist,"np.minimum(_dest_local_dist, _dest_prm_dist)"
,_origin_local_time,_origin_local_dist * 60/walkSpeed
,_origin_prm_time,_origin_prm_dist * 60/walkSpeed
,_origin_mix_time,_origin_mix_dist * 60/walkSpeed
,_dest_local_time,_dest_local_dist * 60/walkSpeed
,_dest_prm_time,_dest_prm_dist * 60/walkSpeed
,_dest_mix_time,_dest_mix_dist * 60/walkSpeed
,_party,df.tour_id.map(tours.number_of_participants)
,_tour_participants,"np.where(df.trip_num ==2, 1, _party)"
# resetting trip origin and destination based on mode,,
# this is done after the above caluclations so walk dist is the value used in utility calcs,,
,_destination,df.destination
,_destination,"np.where((df.trip_mode == 'PARK_LOC1') & (df.outbound == False), parkLocation1Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'PARK_LOC2') & (df.outbound == False), parkLocation2Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'PARK_LOC3') & (df.outbound == False), parkLocation3Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'PARK_LOC4') & (df.outbound == False), parkLocation4Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'PARK_LOC5') & (df.outbound == False), parkLocation5Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'PARK_ESCORT') & (df.outbound == False), parkEscortLocationMgra, _destination)"
,_destination,"np.where((df.trip_mode == 'RENTAL') & (df.outbound == False), rentalLocationMgra, _destination)"
,_destination,"np.where((df.trip_mode == 'SHUTTLEVAN') & (df.outbound == False), shuttleVanLocation, _destination)"
,_destination,"np.where((df.trip_mode == 'HOTEL_COURTESY') & (df.outbound == False), hotelCourtesyLocation, _destination)"
,_destination,"np.where((df.trip_mode == 'RIDEHAIL_LOC1') & (df.outbound == False), ridehailLocation1Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'RIDEHAIL_LOC2') & (df.outbound == False), ridehailLocation2Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'TAXI_LOC1') & (df.outbound == False), ridehailLocation1Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'TAXI_LOC2') & (df.outbound == False), ridehailLocation2Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'CURB_LOC1') & (df.outbound == False), curbLocation1Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'CURB_LOC2') & (df.outbound == False), curbLocation2Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'CURB_LOC3') & (df.outbound == False), curbLocation3Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'CURB_LOC4') & (df.outbound == False), curbLocation4Mgra, _destination)"
,_destination,"np.where((df.trip_mode == 'CURB_LOC5') & (df.outbound == False), curbLocation5Mgra, _destination)"
,_destination,"np.where(df.trip_mode.isin(['WALK_LOC', 'WALK_PRM', 'WALK_MIX', 'KNR_LOC', 'KNR_PRM', 'KNR_MIX', 'TNC_LOC', 'TNC_PRM', 'TNC_MIX']) & (df.outbound == False), transitMgra, _destination)"
,_destination,"np.where((df.trip_mode == 'WALK') & (df.outbound == False), terminalMgra, _destination)"
,destination,_destination
,_origin,df.origin
,_origin,"np.where((df.trip_mode == 'PARK_LOC1') & (df.outbound == True), parkLocation1Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'PARK_LOC2') & (df.outbound == True), parkLocation2Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'PARK_LOC3') & (df.outbound == True), parkLocation3Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'PARK_LOC4') & (df.outbound == True), parkLocation4Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'PARK_LOC5') & (df.outbound == True), parkLocation5Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'PARK_ESCORT') & (df.outbound == True), parkEscortLocationMgra, _origin)"
,_origin,"np.where((df.trip_mode == 'RENTAL') & (df.outbound == True), rentalLocationMgra, _origin)"
,_origin,"np.where((df.trip_mode == 'SHUTTLEVAN') & (df.outbound == True), shuttleVanLocation, _origin)"
,_origin,"np.where((df.trip_mode == 'HOTEL_COURTESY') & (df.outbound == True), hotelCourtesyLocation, _origin)"
,_origin,"np.where((df.trip_mode == 'RIDEHAIL_LOC1') & (df.outbound == True), ridehailLocation1Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'RIDEHAIL_LOC2') & (df.outbound == True), ridehailLocation2Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'TAXI_LOC1') & (df.outbound == True), ridehailLocation1Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'TAXI_LOC2') & (df.outbound == True), ridehailLocation2Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'CURB_LOC1') & (df.outbound == True), curbLocation1Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'CURB_LOC2') & (df.outbound == True), curbLocation2Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'CURB_LOC3') & (df.outbound == True), curbLocation3Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'CURB_LOC4') & (df.outbound == True), curbLocation4Mgra, _origin)"
,_origin,"np.where((df.trip_mode == 'CURB_LOC5') & (df.outbound == True), curbLocation5Mgra, _origin)"
,_origin,"np.where(df.trip_mode.isin(['WALK_LOC', 'WALK_PRM', 'WALK_MIX', 'KNR_LOC', 'KNR_PRM', 'KNR_MIX', 'TNC_LOC', 'TNC_PRM', 'TNC_MIX']) & (df.outbound == True), transitMgra, _origin)"
,_origin,"np.where((df.trip_mode == 'WALK') & (df.outbound == True), terminalMgra, _origin)"
,origin,_origin
#,,
,_cost_parking,0
,_cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_LOC1']) * (((df['nights']*parkLocation1CostDay + parkLocation1CostDay)*100) / df.party_size)"
,_cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_LOC2']) * (((df['nights']*parkLocation2CostDay + parkLocation2CostDay)*100) / df.party_size)"
,_cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_LOC3']) * (((df['nights']*parkLocation3CostDay + parkLocation3CostDay)*100) / df.party_size)"
,_cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_LOC4']) * (((df['nights']*parkLocation4CostDay + parkLocation4CostDay)*100) / df.party_size)"
,_cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_LOC5']) * (((df['nights']*parkLocation5CostDay + parkLocation5CostDay)*100) / df.party_size)"
,cost_parking,"_cost_parking + df.trip_mode.isin(['PARK_ESCORT']) * (parkEscortCostHour*100 / (df.party_size + 1))"
#,,
,_cost_fare_drive,0
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['RIDEHAIL_LOC1']) * (np.minimum((df['partySizeRideHailLocation1AutoIVT']*ridehailCostPerMinute + df['partySizeRideHailLocation1AutoDist']*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100) / df.party_size"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['RIDEHAIL_LOC2']) * (np.minimum((df['partySizeRideHailLocation2AutoIVT']*ridehailCostPerMinute + df['partySizeRideHailLocation2AutoDist']*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100) / df.party_size"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TAXI_LOC1']) * (np.minimum((df['partySizeRideHailLocation1AutoIVT']*taxiCostPerMinute + df['partySizeRideHailLocation1AutoDist']*taxiCostPerMile + taxiCostInitial),taxiCostMinimum) * 100) / df.party_size"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TAXI_LOC2']) * (np.minimum((df['partySizeRideHailLocation2AutoIVT']*taxiCostPerMinute + df['partySizeRideHailLocation2AutoDist']*taxiCostPerMile + taxiCostInitial),taxiCostMinimum) * 100) / df.party_size"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_LOC']) * ~df.outbound * (np.minimum((odt_skims['TNCOUT_LOC_ACC']*ridehailCostPerMinute + (odt_skims['TNCOUT_LOC_ACC']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_LOC']) * df.outbound * (np.minimum((odt_skims['TNCIN_LOC_EGR']*ridehailCostPerMinute + (odt_skims['TNCIN_LOC_EGR']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_PRM']) * ~df.outbound * (np.minimum((odt_skims['TNCOUT_PRM_ACC']*ridehailCostPerMinute + (odt_skims['TNCOUT_PRM_ACC']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_PRM']) * df.outbound * (np.minimum((odt_skims['TNCIN_PRM_EGR']*ridehailCostPerMinute + (odt_skims['TNCIN_PRM_EGR']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
,_cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_MIX']) * ~df.outbound * (np.minimum((odt_skims['TNCOUT_MIX_ACC']*ridehailCostPerMinute + (odt_skims['TNCOUT_MIX_ACC']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
,cost_fare_drive,"_cost_fare_drive + df.trip_mode.isin(['TNC_MIX']) * df.outbound * (np.minimum((odt_skims['TNCIN_MIX_EGR']*ridehailCostPerMinute + (odt_skims['TNCIN_MIX_EGR']/60 * driveSpeed)*ridehailCostPerMile + ridehailCostInitial),ridehailCostMinimum) * 100 / df.party_size)"
#,,
,cost_rental,"df.trip_mode.isin(['RENTAL']) * ((df['nights']*rentalCostPerDay + rentalCarAccessCost + rentalCostPerDay)*100) / df.party_size"
#,,
,_time_transit_drive,0
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_LOC'])) * (odt_skims['KNROUT_LOC_ACC'])*~df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_LOC'])) * odt_skims['KNRIN_LOC_EGR']*df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_PRM'])) * (odt_skims['KNROUT_PRM_ACC'])*~df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_PRM'])) * (odt_skims['KNRIN_PRM_EGR'])*df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_MIX'])) * (odt_skims['KNROUT_MIX_ACC'])*~df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['KNR_MIX'])) * (odt_skims['KNRIN_MIX_EGR'])*df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_LOC'])) * odt_skims['TNCOUT_LOC_ACC']*~df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_LOC'])) * odt_skims['TNCIN_LOC_EGR'] *df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_PRM'])) * (odt_skims['TNCOUT_PRM_ACC'])*~df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_PRM'])) * odt_skims['TNCIN_PRM_EGR']*df.outbound"
,_time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_MIX'])) * (odt_skims['TNCOUT_MIX_ACC'])*~df.outbound"
,time_transit_drive,"_time_transit_drive + (df.trip_mode.isin(['TNC_MIX'])) * (odt_skims['TNCIN_MIX_EGR'])*df.outbound"
#,,
,_time_airport_ivt,0
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_LOC1'])) * parkLocation1InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_LOC2'])) * parkLocation2InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_LOC3'])) * parkLocation3InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_LOC4'])) * parkLocation4InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_LOC5'])) * parkLocation5InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['PARK_ESCORT'])) * parkEscortInVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['RENTAL'])) * rentalCarInVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['CURB_LOC1'])) * curbLocation1InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['CURB_LOC2'])) * curbLocation2InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['CURB_LOC3'])) * curbLocation3InVehicleTime"
,_time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['CURB_LOC4'])) * curbLocation4InVehicleTime"
,time_airport_ivt,"_time_airport_ivt + (df.trip_mode.isin(['CURB_LOC5'])) * curbLocation5InVehicleTime"
#,,
,_time_airport_wait,0
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_LOC1'])) * parkLocation1WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_LOC2'])) * parkLocation2WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_LOC3'])) * parkLocation3WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_LOC4'])) * parkLocation4WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_LOC5'])) * parkLocation5WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['PARK_ESCORT'])) * parkEscortWaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['RENTAL'])) * rentalCarWaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['SHUTTLEVAN','HOTEL_COURTESY'])) * terminalWaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['CURB_LOC1'])) * curbLocation1WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['CURB_LOC2'])) * curbLocation2WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['CURB_LOC3'])) * curbLocation3WaitTime"
,_time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['CURB_LOC4'])) * curbLocation4WaitTime"
,time_airport_wait,"_time_airport_wait + (df.trip_mode.isin(['CURB_LOC5'])) * curbLocation5WaitTime"
#,,
,_time_walk,0
,_time_walk,"_time_walk + (df.trip_mode=='WALK') * od_skims['walkTime']"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_LOC') * _origin_local_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_LOC') * _dest_local_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_LOC') * odt_skims['WALK_LOC_XFERWALK']"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_PRM') * _origin_prm_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_PRM') * _dest_prm_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_PRM') * odt_skims['WALK_PRM_XFERWALK']"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_MIX') * _origin_mix_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_MIX') * _dest_mix_time"
,_time_walk,"_time_walk + (df.trip_mode=='WALK_MIX') * odt_skims['WALK_MIX_XFERWALK']"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_LOC','TNC_LOC'])) * ~df.outbound * _dest_local_time"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_LOC','TNC_LOC'])) * df.outbound * _origin_local_time"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_LOC') * odt_skims['KNROUT_LOC_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_LOC') * odt_skims['KNRIN_LOC_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_LOC') * odt_skims['TNCOUT_LOC_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_LOC') * odt_skims['TNCIN_LOC_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_PRM','TNC_PRM'])) * ~df.outbound * _dest_prm_time"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_PRM','TNC_PRM'])) * df.outbound * _origin_prm_time"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_PRM') * odt_skims['KNROUT_PRM_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_PRM') * odt_skims['KNRIN_PRM_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_PRM') * odt_skims['TNCOUT_PRM_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_PRM') * odt_skims['TNCIN_PRM_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_MIX','TNC_MIX'])) * ~df.outbound * _dest_mix_time"
,_time_walk,"_time_walk + (df.trip_mode.isin(['KNR_MIX','TNC_MIX'])) * df.outbound * _origin_mix_time"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_MIX') * odt_skims['KNROUT_MIX_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='KNR_MIX') * odt_skims['KNRIN_MIX_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_MIX') * odt_skims['TNCOUT_MIX_XFERWALK'] * ~df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='TNC_MIX') * odt_skims['TNCIN_MIX_XFERWALK'] * df.outbound"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_LOC1') * parkLocation1WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_LOC2') * parkLocation2WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_LOC3') * parkLocation3WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_LOC4') * parkLocation4WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_LOC5') * parkLocation5WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='PARK_ESCORT') * parkEscortWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='RENTAL') * rentalCarWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='SHUTTLEVAN') * (hotelCourtesyWalkTime + terminalWalkTime)"
,_time_walk,"_time_walk + (df.trip_mode=='HOTEL_COURTESY') * (hotelCourtesyWalkTime + terminalWalkTime)"
,_time_walk,"_time_walk + (df.trip_mode=='RIDEHAIL_LOC1') * ridehailLocation1AccessWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='RIDEHAIL_LOC2') * ridehailLocation2AccessWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='TAXI_LOC1') * taxiLocation1AccessWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='TAXI_LOC2') * taxiLocation2AccessWalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='CURB_LOC1') * curbLocation1WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='CURB_LOC2') * curbLocation2WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='CURB_LOC3') * curbLocation3WalkTime"
,_time_walk,"_time_walk + (df.trip_mode=='CURB_LOC4') * curbLocation4WalkTime"
,time_walk,"_time_walk + (df.trip_mode=='CURB_LOC5') * curbLocation5WalkTime"
#,,
,_distance_walk,0
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK') * od_skims['walkTime']/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_LOC') * _origin_local_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_LOC') * _dest_local_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_LOC') * odt_skims['WALK_LOC_XFERWALK']/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_PRM') * _origin_prm_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_PRM') * _dest_prm_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_PRM') * odt_skims['WALK_PRM_XFERWALK']/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_MIX') * _origin_mix_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_MIX') * _dest_mix_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='WALK_MIX') * odt_skims['WALK_MIX_XFERWALK']/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_LOC','TNC_LOC'])) * ~df.outbound * _dest_local_dist"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_LOC','TNC_LOC'])) * df.outbound * _origin_local_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_LOC') * odt_skims['KNROUT_LOC_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_LOC') * odt_skims['KNRIN_LOC_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_LOC') * odt_skims['TNCOUT_LOC_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_LOC') * odt_skims['TNCIN_LOC_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_PRM','TNC_PRM'])) * ~df.outbound * _dest_prm_dist"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_PRM','TNC_PRM'])) * df.outbound * _origin_prm_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_PRM') * odt_skims['KNROUT_PRM_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_PRM') * odt_skims['KNRIN_PRM_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_PRM') * odt_skims['TNCOUT_PRM_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_PRM') * odt_skims['TNCIN_PRM_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_MIX','TNC_MIX'])) * ~df.outbound * _dest_mix_dist"
,_distance_walk,"_distance_walk + (df.trip_mode.isin(['KNR_MIX','TNC_MIX'])) * df.outbound * _origin_mix_dist"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_MIX') * odt_skims['KNROUT_MIX_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='KNR_MIX') * odt_skims['KNRIN_MIX_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_MIX') * odt_skims['TNCOUT_MIX_XFERWALK']/60 * walkSpeed * ~df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='TNC_MIX') * odt_skims['TNCIN_MIX_XFERWALK']/60 * walkSpeed * df.outbound"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_LOC1') * parkLocation1WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_LOC2') * parkLocation2WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_LOC3') * parkLocation3WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_LOC4') * parkLocation4WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_LOC5') * parkLocation5WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='PARK_ESCORT') * parkEscortWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='RENTAL') * rentalCarWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='SHUTTLEVAN') * (hotelCourtesyWalkTime + terminalWalkTime)/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='HOTEL_COURTESY') * (hotelCourtesyWalkTime + terminalWalkTime)/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='RIDEHAIL_LOC1') * ridehailLocation1AccessWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='RIDEHAIL_LOC2') * ridehailLocation2AccessWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='TAXI_LOC1') * taxiLocation1AccessWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='TAXI_LOC2') * taxiLocation2AccessWalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='CURB_LOC1') * curbLocation1WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='CURB_LOC2') * curbLocation2WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='CURB_LOC3') * curbLocation3WalkTime/60 * walkSpeed"
,_distance_walk,"_distance_walk + (df.trip_mode=='CURB_LOC4') * curbLocation4WalkTime/60 * walkSpeed"
,distance_walk,"_distance_walk + (df.trip_mode=='CURB_LOC5') * curbLocation5WalkTime/60 * walkSpeed"
#,,
,time_mm,0
,distance_mm,0
,cost_fare_mm,0
,distance_bike,0
#,,
,_time_wait_drive,0
,_time_wait_drive,"_time_wait_drive + (df.trip_mode.isin(['RIDEHAIL_LOC1','RIDEHAIL_LOC2'])) * ridehailWaitTime"
,_time_wait_drive,"_time_wait_drive + (df.trip_mode.isin(['TAXI_LOC1','TAXI_LOC2'])) * taxiWaitTime"
,time_wait_drive,"_time_wait_drive + (df.trip_mode.isin(['TNC_LOC','TNC_PRM','TNC_MIX'])) * ridehailWaitTime"